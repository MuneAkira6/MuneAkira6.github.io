<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>语法拾贝</title>
      <link href="/Japanese_Grammer.html"/>
      <url>/Japanese_Grammer.html</url>
      
        <content type="html"><![CDATA[<p>曖昧な言い方はやめよう。</p><h2 id="そう"><a href="#そう" class="headerlink" title="そう"></a>そう</h2><p>動詞連用形＋そう→推量<br>形容詞ーい&#x2F;な＋そう→推量（* 語幹使用唯一）<br>動詞辞書形＋そう→伝聞</p><ul><li>楽しそう。</li><li>ありそう。</li><li>だそうです。</li><li>今日雨が降りそうです。</li></ul><h2 id="でしょう-だろう"><a href="#でしょう-だろう" class="headerlink" title="でしょう&#x2F;だろう"></a>でしょう&#x2F;だろう</h2><p>〜んです<br>〜（原型）でしょう&#x2F;だろう</p><h2 id="動詞体操"><a href="#動詞体操" class="headerlink" title="動詞体操"></a>動詞体操</h2><table><thead><tr><th>原形</th><th>连用形</th><th>可能性</th><th>假设形</th><th>命令形</th><th>意向形</th><th>被动形</th><th>使动形</th><th>て形&#x2F;た形</th></tr></thead><tbody><tr><td>書く</td><td>書き</td><td>書ける</td><td>書けば</td><td>書け</td><td>書こう</td><td>書かれる</td><td>書かせる</td><td></td></tr><tr><td>食べる</td><td>食べ</td><td>食べられる</td><td>食べれば</td><td>食べろ&#x2F;食べよ</td><td>食べよう</td><td>食べられる</td><td>食べさせる</td><td></td></tr><tr><td>する</td><td>し</td><td>できる</td><td>すれば</td><td>しろ&#x2F;せよ</td><td>しよう</td><td>される</td><td>させる</td><td></td></tr><tr><td>くる</td><td>き</td><td>こられる</td><td>くれば</td><td>こい</td><td>こよう</td><td>こられる</td><td>こさせる</td><td>きて</td></tr></tbody></table><h2 id="ただ？たった？"><a href="#ただ？たった？" class="headerlink" title="ただ？たった？"></a>ただ？たった？</h2><p>ただ→無料（free）&#x2F;只（just）&#x2F;but（* 常用）<br>たった→only（わずか）（* 只强调数量）</p><ul><li>ただで飲めますよ。</li><li>私はただの学生です。</li><li>この作品美しいですが、ただ、値段がちょっと…</li><li>たった一人しかいないの。</li></ul><p>ただいま＝たったいま</p><h2 id="に？で？"><a href="#に？で？" class="headerlink" title="に？で？"></a>に？で？</h2><p>どっちも良い。「に」は動詞の終点。</p><p>に→移动、到达、存在于某处<br>で→（略）</p><ul><li>ここでお茶を飲む。</li><li>ここにあります。</li><li>学校に行く。</li></ul><h2 id="常见敬语"><a href="#常见敬语" class="headerlink" title="常见敬语"></a>常见敬语</h2><h3 id="1-〜させていただきます"><a href="#1-〜させていただきます" class="headerlink" title="1. 〜させていただきます"></a>1. 〜させていただきます</h3><p>いただく 乃 もらう 的敬语体。“请允许<strong>我</strong>做某事”。</p><ul><li>応募させていただきます。</li></ul><h3 id="2-〜いただきます"><a href="#2-〜いただきます" class="headerlink" title="2. 〜いただきます"></a>2. 〜いただきます</h3><p>思考：〜て＋もらう（请别人为<strong>我</strong>做某事） &#x2F; 〜もらう（我接受<strong>别人</strong>做某事）<br>再思考：〜てもらう &#x2F; 〜てくれる &#x2F; 〜あげる　→（敬語） 〜ていただく &#x2F; 〜てくださる &#x2F; 〜てさしあげる</p><ul><li>応募いただきます。</li><li>やめてもらいませんか。</li><li>ご案内してくださった方には感謝。</li><li>質問を答えていただけますか。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Japanese </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grammer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语法拾贝 (Reloaded)</title>
      <link href="/Javascript_Grammer.html"/>
      <url>/Javascript_Grammer.html</url>
      
        <content type="html"><![CDATA[<h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h3 id="1-解构与改名"><a href="#1-解构与改名" class="headerlink" title="1. 解构与改名"></a>1. 解构与改名</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="attr">a</span>: a1 &#125; = obj;</span><br></pre></td></tr></table></figure><h3 id="2-数组去重"><a href="#2-数组去重" class="headerlink" title="2. 数组去重"></a>2. 数组去重</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> c = [...<span class="keyword">new</span> <span class="title class_">Set</span>([...a, ...b])];</span><br></pre></td></tr></table></figure><h3 id="3-数组扁平化"><a href="#3-数组扁平化" class="headerlink" title="3. 数组扁平化"></a>3. 数组扁平化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">flat</span>(<span class="title class_">Infinity</span>);</span><br></pre></td></tr></table></figure><h3 id="4-or"><a href="#4-or" class="headerlink" title="4. ?? or ||"></a>4. ?? or ||</h3><p><code>??</code> 仅在左侧为 <code>null</code>, <code>undefined</code> 时跳到右侧<br><code>||</code> 为 <code>0</code>, <code>&#39;&#39;</code>, <code>NaN</code>, <code>null</code>, <code>undefined</code>（这五个称为假值）</p><p>* <code>[]</code> <code>&#123;&#125;</code> 的值为 <code>true</code></p><p>* <code>??</code> 推荐和 <code>?.</code> 共用</p><h2 id="typescript"><a href="#typescript" class="headerlink" title="typescript"></a>typescript</h2><p><strong>一、操作符</strong></p><h3 id="1-void"><a href="#1-void" class="headerlink" title="1. void"></a>1. void</h3><p>作为函数返回值类型，表示不关注返回值类型，可以是任意值</p><h3 id="2-非空断言"><a href="#2-非空断言" class="headerlink" title="2. 非空断言 !"></a>2. 非空断言 !</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 表达式后缀</span></span><br><span class="line">obj!.<span class="property">a</span>;</span><br><span class="line">func!();</span><br></pre></td></tr></table></figure><p><strong>使用场景：ref</strong></p><h3 id="3-键值获取-keyof"><a href="#3-键值获取-keyof" class="headerlink" title="3. 键值获取 keyof"></a>3. 键值获取 keyof</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">type <span class="title class_">Person</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: string;</span><br><span class="line">  <span class="attr">age</span>: number;</span><br><span class="line">&#125;</span><br><span class="line">type <span class="title class_">PersonKey</span> = keyof <span class="title class_">Person</span>;  <span class="comment">// &#x27;name&#x27; | &#x27;age&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>使用场景：遍历一个对象的所有 key 时（拿不到类型时可以用 keyof typeof）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="title class_">Object</span>.<span class="title function_">keys</span>(params) <span class="keyword">as</span> (keyof feedbackParams)[]).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">  formData.<span class="title function_">append</span>(key, params[key]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="4-联合类型-｜-交叉类型"><a href="#4-联合类型-｜-交叉类型" class="headerlink" title="4. 联合类型 ｜ 交叉类型 &amp;"></a>4. 联合类型 ｜ 交叉类型 &amp;</h3><p><strong>不是数学上的交集并集！</strong></p><p>&amp; 交叉类型：产生的新集合包含原各集合的所有属性（语义上的“且”）<br>| 联合类型：产生的新集合是一个 <code>select</code>，可以是 A，也可以是 B，但不能同时拥有 A 和 B （语义上的“或”）</p><p><strong>使用场景：继承</strong></p><p><strong>二、泛型工具</strong></p><h3 id="Partial"><a href="#Partial" class="headerlink" title="Partial"></a>Partial<T></h3><p>将泛型中全部属性变为可选的。</p><h3 id="Required"><a href="#Required" class="headerlink" title="Required"></a>Required<T></h3><p>将泛型中全部属性变为必选的。</p><h3 id="Record"><a href="#Record" class="headerlink" title="Record&lt;K, T&gt;"></a>Record&lt;K, T&gt;</h3><p>常用于定义对象。 <code>Record&lt;string, unknown&gt;</code></p><h3 id="Pick"><a href="#Pick" class="headerlink" title="Pick&lt;T, K&gt;"></a>Pick&lt;T, K&gt;</h3><p>取键值对。<br><code>Pick&lt;Animal, &quot;name&quot; | &quot;age&quot;&gt;</code></p><h3 id="Omit"><a href="#Omit" class="headerlink" title="Omit&lt;T, K&gt;"></a>Omit&lt;T, K&gt;</h3><p>去键值对。<br><code>Omit&lt;Animal, &#39;name&#39;|&#39;age&#39;&gt;</code></p><p><strong>三、Work with React</strong></p><h3 id="1-声明函数式组件"><a href="#1-声明函数式组件" class="headerlink" title="1. 声明函数式组件"></a>1. 声明函数式组件</h3><p>这种方式会在 props 里显式声明 children</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">App</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">AppProps</span>&gt; = <span class="function">(<span class="params">&#123; message, children &#125;</span>) =&gt;</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;message&#125;</span></span><br><span class="line"><span class="language-xml">    &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="2-使用-typeof-减少冗余的-props-类型导出"><a href="#2-使用-typeof-减少冗余的-props-类型导出" class="headerlink" title="2. 使用 typeof 减少冗余的 props 类型导出"></a>2. 使用 typeof 减少冗余的 props 类型导出</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Recent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@mercury/component&#x27;</span></span><br><span class="line">type <span class="title class_">RecentProps</span> = <span class="title class_">React</span>.<span class="property">ComponentProps</span>&lt;<span class="keyword">typeof</span> <span class="title class_">Recent</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="3-React-事件类型定义"><a href="#3-React-事件类型定义" class="headerlink" title="3. React 事件类型定义"></a>3. React 事件类型定义</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">type <span class="title class_">Props</span> = &#123;</span><br><span class="line">  <span class="attr">onClick</span>: <span class="function">(<span class="params">event: React.MouseEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onChange</span>: <span class="function">(<span class="params">event: React.ChangeEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onkeypress</span>: <span class="function">(<span class="params">event: React.KeyboardEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onBlur</span>: <span class="function">(<span class="params">event: React.FocusEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onFocus</span>: <span class="function">(<span class="params">event: React.FocusEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onSubmit</span>: <span class="function">(<span class="params">event: React.FormEvent&lt;HTMLFormElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onClickDiv</span>: <span class="function">(<span class="params">event: React.MouseEvent&lt;HTMLDivElement, MouseEvent&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的 handler 类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type <span class="title class_">ChangeEventHandler</span>&lt;T = <span class="title class_">Element</span>&gt; = <span class="title class_">EventHandler</span>&lt;<span class="title class_">React</span>.<span class="property">ChangeEvent</span>&lt;T&gt;&gt;</span><br><span class="line">type <span class="title class_">KeyboardEventHandler</span>&lt;T = <span class="title class_">Element</span>&gt; = <span class="title class_">EventHandler</span>&lt;<span class="title class_">React</span>.<span class="property">KeyboardEvent</span>&lt;T&gt;&gt;</span><br><span class="line">type <span class="title class_">MouseEventHandler</span>&lt;T = <span class="title class_">Element</span>&gt; = <span class="title class_">EventHandler</span>&lt;<span class="title class_">React</span>.<span class="property">MouseEvent</span>&lt;T&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="Trick"><a href="#Trick" class="headerlink" title="Trick"></a>Trick</h2><h3 id="if-条件太长时"><a href="#if-条件太长时" class="headerlink" title="if 条件太长时"></a>if 条件太长时</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(</span><br><span class="line">    type == <span class="number">1</span> ||</span><br><span class="line">    type == <span class="number">2</span> ||</span><br><span class="line">    type == <span class="number">3</span> ||</span><br><span class="line">    type == <span class="number">4</span> ||</span><br><span class="line">)&#123;</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>↓</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> condition = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">if</span> (condition.<span class="title function_">includes</span>(type)) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类型断言-类型守卫"><a href="#类型断言-类型守卫" class="headerlink" title="类型断言&#x2F;类型守卫"></a>类型断言&#x2F;类型守卫</h3><ol><li>类型断言</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">值 as 类型</span><br><span class="line">&lt;类型&gt;值</span><br></pre></td></tr></table></figure><ul><li>联合类型→单一类型</li><li>父类→子类</li><li>any→类型</li></ul><ol start="2"><li>类型守卫：通过 if 自动推断类型。</li></ol><ul><li>类型判断：<code>typeof 基本类型</code></li><li>实例判断：<code>instanceof 类（非接口）</code></li><li>属性判断：<code>字段 in 接口（所实现的实例）</code> <code>in</code> 其实是 js 自带语法，应用在实例上</li><li>字面量相等判断：<code>==</code>, <code>===</code>, <code>!=</code>, <code>!==</code>，适用于枚举</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">input1</span>: string | number;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> input1 == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">  <span class="comment">// 这里 input1 的类型「收紧」为 string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">input2</span>: A | B;</span><br><span class="line"><span class="keyword">if</span> (input2 <span class="keyword">instanceof</span> A) &#123;</span><br><span class="line">  <span class="comment">// 这里 input2 的类型「收紧」为 A</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface <span class="title class_">Foo</span> &#123;</span><br><span class="line">  <span class="attr">foo</span>: string;</span><br><span class="line">&#125;</span><br><span class="line">interface <span class="title class_">Bar</span> &#123;</span><br><span class="line">  <span class="attr">bar</span>: string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">input3</span>: <span class="title class_">Foo</span> | <span class="title class_">Bar</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;foo&#x27;</span> <span class="keyword">in</span> input3) &#123;</span><br><span class="line">  <span class="comment">// 这里 input3 的类型「收紧」为 Foo</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义类型守卫函数：代码随便写，返回值保证是<code>参数 is 类型</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isBatman</span> (<span class="attr">man</span>: any): man is <span class="title class_">Batman</span> &#123;</span><br><span class="line">  <span class="comment">// 写各种判断</span></span><br><span class="line">  <span class="keyword">return</span> man &amp;&amp; man.<span class="property">helmet</span> &amp;&amp; man.<span class="property">cloak</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="升降-CSS-优先级"><a href="#升降-CSS-优先级" class="headerlink" title="升降 CSS 优先级"></a>升降 CSS 优先级</h3><p>内联 &gt; ID &gt; 类&#x2F;伪类&#x2F;属性 &gt; 元素&#x2F;伪元素</p><ul><li>（升优先级）自我重复，提高选择器的优先级：<code>.&#123;className&#125;.&#123;className&#125;</code></li><li>（降优先级）属性选择器 <code>[id=&#39;&#123;targetId&#125;&#39;]</code> 替代 <code>#&#123;targetId&#125;</code> 以获得与 <code>.&#123;className&#125;</code> 相同的优先级</li><li>优先级是权重相加制，更具体的选择器拥有更高的优先级</li></ul><h3 id="import-type-がウザい！"><a href="#import-type-がウザい！" class="headerlink" title="import type がウザい！"></a>import type がウザい！</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; type <span class="title class_">RecentProps</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@mercury/component&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grammer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环境问题汇总</title>
      <link href="/environment.html"/>
      <url>/environment.html</url>
      
        <content type="html"><![CDATA[<p>折腾开发环境显然是一种对人生无益的活动。</p><h3 id="zshrc"><a href="#zshrc" class="headerlink" title=".zshrc"></a>.zshrc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="comment"># This loads nvm bash_completion</span></span><br><span class="line"><span class="built_in">export</span> PYENV_ROOT=<span class="string">&quot;<span class="variable">$HOME</span>/.pyenv&quot;</span></span><br><span class="line"><span class="built_in">command</span> -v pyenv &gt;/dev/null || <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PYENV_ROOT</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(pyenv init -)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动代理</span></span><br><span class="line"><span class="function"><span class="title">proxy</span></span> () &#123;</span><br><span class="line">  <span class="built_in">export</span> https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;HTTP Proxy on&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭代理</span></span><br><span class="line"><span class="function"><span class="title">noproxy</span></span> () &#123;</span><br><span class="line">  <span class="built_in">unset</span> http_proxy</span><br><span class="line">  <span class="built_in">unset</span> https_proxy</span><br><span class="line">  <span class="built_in">unset</span> all_proxy</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;HTTP Proxy off&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># yarn全局</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:`yarn global bin`:<span class="variable">$HOME</span>/.config/yarn/global/node_modules/.bin&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="yarn-报错-on-Windows"><a href="#yarn-报错-on-Windows" class="headerlink" title="yarn 报错 on Windows"></a>yarn 报错 on Windows</h3><ol><li>管理员运行 PowerShell</li><li><code>set-ExecutionPolicy RemoteSigned</code>, “Yes”</li><li><code>get-ExecutionPolicy</code>, “Unrestricted”</li></ol>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂学</title>
      <link href="/%E6%9D%82%E5%AD%A6.html"/>
      <url>/%E6%9D%82%E5%AD%A6.html</url>
      
        <content type="html"><![CDATA[<h2 id="Videos"><a href="#Videos" class="headerlink" title="Videos"></a>Videos</h2><h3 id="yt-dlp"><a href="#yt-dlp" class="headerlink" title="yt-dlp"></a>yt-dlp</h3><ul><li>从文件读取 <code>-a </code></li><li>获取所有可用轨道 <code>-F</code></li><li>选中轨道 <code>-f</code></li><li><code>--cookies cookies.txt</code> <code>--cookies-from-browser edge</code></li><li><strong>abema.tv</strong>: 不使用cookie，直接带用户名和密码 <code>yt-dlp &#39;https://abema.tv/video/episode/xxx&#39; --username &#39;xxx&#39; --password &#39;xxx&#39;</code> 如果报错就清空 <code>/.cache/yt-dlp</code></li></ul><h3 id="下载-bili-tv"><a href="#下载-bili-tv" class="headerlink" title="下载 bili.tv"></a>下载 bili.tv</h3><ol><li>泰国 vpn，比如 urban vpn</li><li></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp --cookies cookies.txt --add-header <span class="string">&quot;Referer: https://www.bilibili.tv/&quot;</span> target_url</span><br></pre></td></tr></table></figure><h3 id="minyami"><a href="#minyami" class="headerlink" title="minyami"></a>minyami</h3><ol><li>带 cookies</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minyami --headers <span class="string">&quot;Referer: https://www.bilibili.tv/&quot;</span> -H <span class="string">&quot;Cookie:cookies_text&quot;</span> -d <span class="string">&quot;xxx.m3u8&quot;</span> --output <span class="string">&quot;xxx.ts&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>设置代理<br>不要使用环境变量，直接开启代理软件的 TUN 模式（增强模式）</li></ol><h3 id="handbrake-压缩常用配置"><a href="#handbrake-压缩常用配置" class="headerlink" title="handbrake 压缩常用配置"></a>handbrake 压缩常用配置</h3><p>Mac mini M2</p><ul><li>mkv</li><li>h265</li><li>RF: 18</li><li>帧率：与原视频相同 恒定帧率（cfr）</li><li>预设：medium</li><li>音频比特率：passthru&#x2F;256</li><li>VideoToolbox：Mac上可硬件加速，但质量一般。</li></ul><h3 id="webm-to-m4a-lossless"><a href="#webm-to-m4a-lossless" class="headerlink" title="webm to m4a lossless"></a>webm to m4a lossless</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.webm -c:a alac output.m4a</span><br></pre></td></tr></table></figure><h2 id="Comics"><a href="#Comics" class="headerlink" title="Comics"></a>Comics</h2><h3 id="epub-to-zip"><a href="#epub-to-zip" class="headerlink" title="epub to zip"></a>epub to zip</h3><ol><li>epub → docx (Calibre)</li><li>打开，随便删除一个文字</li><li>重命名为 zip，解压找到 media 文件夹</li></ol><h2 id="Start-with-Mac-mini-M2"><a href="#Start-with-Mac-mini-M2" class="headerlink" title="Start with Mac mini M2"></a>Start with Mac mini M2</h2><h3 id="dock-在全屏时不自动隐藏"><a href="#dock-在全屏时不自动隐藏" class="headerlink" title="dock 在全屏时不自动隐藏"></a>dock 在全屏时不自动隐藏</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock autohide-delay -int 0</span><br><span class="line">defaults write com.apple.dock autohide-time-modifier -<span class="built_in">float</span> 1.0</span><br><span class="line">killall Dock</span><br></pre></td></tr></table></figure><h3 id="连接蓝牙耳机卡顿"><a href="#连接蓝牙耳机卡顿" class="headerlink" title="连接蓝牙耳机卡顿"></a>连接蓝牙耳机卡顿</h3><ol><li>耳机断联</li><li><code>sudo defaults write bluetoothaudiod &quot;Enable AAC codec&quot; -bool true</code></li><li>设置→声音→输入，取消选中耳机</li></ol><h3 id="睡眠时异常唤醒硬盘"><a href="#睡眠时异常唤醒硬盘" class="headerlink" title="睡眠时异常唤醒硬盘"></a>睡眠时异常唤醒硬盘</h3><ol><li>查询电源设置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pmset -g</span><br></pre></td></tr></table></figure><ol start="2"><li>修改某个选项</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pmset -a tcpkeepalive 0</span><br><span class="line">sudo pmset -a powernap 0 <span class="comment"># Apple 芯片的 Mac 上，此值默认为 1</span></span><br></pre></td></tr></table></figure><ol start="3"><li>It should be like this:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">System-wide power settings:</span><br><span class="line">Currently <span class="keyword">in</span> use:</span><br><span class="line">  disksleep            10</span><br><span class="line">  powernap             0</span><br><span class="line">  womp                 1</span><br><span class="line">  networkoversleep     0</span><br><span class="line">  <span class="built_in">sleep</span>                1 (<span class="built_in">sleep</span> prevented by powerd, mds_stores)</span><br><span class="line">  Sleep On Power Button 1</span><br><span class="line">  ttyskeepawake        1</span><br><span class="line">  tcpkeepalive         0</span><br><span class="line">  autorestart          0</span><br><span class="line">  standby              0</span><br><span class="line">  displaysleep         10</span><br></pre></td></tr></table></figure><h3 id="Kill-Microsoft-AutoUpdate"><a href="#Kill-Microsoft-AutoUpdate" class="headerlink" title="Kill Microsoft AutoUpdate"></a>Kill Microsoft AutoUpdate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Application Support/Microsoft/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>献上自己</title>
      <link href="/Bible.html"/>
      <url>/Bible.html</url>
      
        <content type="html"><![CDATA[<h3 id="罗马书-12-1-2-新译本"><a href="#罗马书-12-1-2-新译本" class="headerlink" title="罗马书 12:1-2 新译本"></a>罗马书 12:1-2 新译本</h3><p><sup>1 </sup>所以弟兄们，我凭着神的仁慈劝你们，要把身体献上，作圣洁而蒙神悦纳的活祭；这是你们理所当然的事奉。</p><p><sup>2 </sup>不要模仿这个世代，倒要借着心意的更新而改变过来，使你们可以察验出甚么是神的旨意，就是察验出甚么是美好的、蒙他悦纳的和完全的事。</p><h3 id="诗篇-16-7-11-新标点和合本-神版"><a href="#诗篇-16-7-11-新标点和合本-神版" class="headerlink" title="诗篇 16:7-11 新标点和合本, 神版"></a>诗篇 16:7-11 新标点和合本, 神版</h3><p><sup>7 </sup>我必称颂那指教我的耶和华；<br>我的心肠在夜间也警戒我。<br><sup>8 </sup>我将耶和华常摆在我面前，<br>因他在我右边，我便不致摇动。</p><p><sup>9 </sup>因此，我的心欢喜，我的灵快乐；<br>我的肉身也要安然居住。<br><sup>10 </sup>因为你必不将我的灵魂撇在阴间，<br>也不叫你的圣者见朽坏。</p><p><sup>11 </sup>你必将生命的道路指示我。<br>在你面前有满足的喜乐；<br>在你右手中有永远的福乐。</p><h3 id="民数记-6-24-26-新标点和合本-上帝版"><a href="#民数记-6-24-26-新标点和合本-上帝版" class="headerlink" title="民数记 6:24-26 新标点和合本, 上帝版"></a>民数记 6:24-26 新标点和合本, 上帝版</h3><p><sup>24 </sup>『愿耶和华赐福给你，保护你。 <sup>25 </sup>愿耶和华使他的脸光照你，赐恩给你。 <sup>26 </sup>愿耶和华向你仰脸，赐你平安。』</p><h3 id="约翰一书-4-18-和合本修订版"><a href="#约翰一书-4-18-和合本修订版" class="headerlink" title="约翰一书 4:18 和合本修订版"></a>约翰一书 4:18 和合本修订版</h3><p><sup>18 </sup>在爱里没有惧怕；完满的爱把惧怕驱逐出去，因为惧怕里含着惩罚，惧怕的人在爱里尚未得到完满。</p><h3 id="诗篇-119-1-2-和合本修订版"><a href="#诗篇-119-1-2-和合本修订版" class="headerlink" title="诗篇 119:1-2 和合本修订版"></a>诗篇 119:1-2 和合本修订版</h3><p><sup>1 </sup>行为正直、遵行耶和华律法的，<br>这人有福了！<br><sup>2 </sup>遵守他的法度、一心寻求他的，<br>这人有福了！</p><h3 id="诗篇-130-5-8-新标点和合本-神版"><a href="#诗篇-130-5-8-新标点和合本-神版" class="headerlink" title="诗篇 130:5-8 新标点和合本, 神版"></a>诗篇 130:5-8 新标点和合本, 神版</h3><p><sup>5 </sup>我等候耶和华，我的心等候；<br>我也仰望他的话。<br><sup>6 </sup>我的心等候主，<br>胜于守夜的，等候天亮，<br>胜于守夜的，等候天亮。</p><p><sup>7 </sup>以色列啊，你当仰望耶和华！<br>因他有慈爱，有丰盛的救恩。<br><sup>8 </sup>他必救赎以色列脱离一切的罪孽。</p><h3 id="罗马书-11-17-23-新标点和合本-神版"><a href="#罗马书-11-17-23-新标点和合本-神版" class="headerlink" title="罗马书 11:17-23 新标点和合本, 神版"></a>罗马书 11:17-23 新标点和合本, 神版</h3><p><sup>17 </sup>若有几根枝子被折下来，你这野橄榄得接在其中，一同得着橄榄根的肥汁， <sup>18 </sup>你就不可向旧枝子夸口；若是夸口，当知道不是你托着根，乃是根托着你。 <sup>19 </sup>你若说，那枝子被折下来是特为叫我接上。 <sup>20 </sup>不错！他们因为不信，所以被折下来；你因为信，所以立得住；你不可自高，反要惧怕。 <sup>21 </sup>神既不爱惜原来的枝子，也必不爱惜你。 <sup>22 </sup>可见，神的恩慈和严厉向那跌倒的人是严厉的，向你是有恩慈的，只要你长久在他的恩慈里；不然，你也要被砍下来。</p><h3 id="约翰福音-15-1-17-新标点和合本-神版"><a href="#约翰福音-15-1-17-新标点和合本-神版" class="headerlink" title="约翰福音 15:1-17 新标点和合本, 神版"></a>约翰福音 15:1-17 新标点和合本, 神版</h3><p><sup>1 </sup>「我是真葡萄树，我父是栽培的人。 <sup>2 </sup>凡属我不结果子的枝子，他就剪去；凡结果子的，他就修理干净，使枝子结果子更多。 <sup>3 </sup>现在你们因我讲给你们的道，已经干净了。 <sup>4 </sup>你们要常在我里面，我也常在你们里面。枝子若不常在葡萄树上，自己就不能结果子；你们若不常在我里面，也是这样。 <sup>5 </sup>我是葡萄树，你们是枝子。常在我里面的，我也常在他里面，这人就多结果子；因为离了我，你们就不能做什么。 <sup>6 </sup>人若不常在我里面，就像枝子丢在外面枯干，人拾起来，扔在火里烧了。 <sup>7 </sup>你们若常在我里面，我的话也常在你们里面，凡你们所愿意的，祈求，就给你们成就。 <sup>8 </sup>你们多结果子，我父就因此得荣耀，你们也就是我的门徒了。 <sup>9 </sup>我爱你们，正如父爱我一样；你们要常在我的爱里。 <sup>10 </sup>你们若遵守我的命令，就常在我的爱里，正如我遵守了我父的命令，常在他的爱里。</p><p><sup>11 </sup>「这些事我已经对你们说了，是要叫我的喜乐存在你们心里，并叫你们的喜乐可以满足。 <sup>12 </sup>你们要彼此相爱，像我爱你们一样；这就是我的命令。 <sup>13 </sup>人为朋友舍命，人的爱心没有比这个大的。 <sup>14 </sup>你们若遵行我所吩咐的，就是我的朋友了。 <sup>15 </sup>以后我不再称你们为仆人，因仆人不知道主人所做的事。我乃称你们为朋友；因我从我父所听见的，已经都告诉你们了。 <sup>16 </sup><strong>不是你们拣选了我，是我拣选了你们，并且分派你们去结果子，叫你们的果子常存，使你们奉我的名，无论向父求什么，他就赐给你们。</strong><sup>17 </sup>我这样吩咐你们，是要叫你们彼此相爱。」</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bible </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
