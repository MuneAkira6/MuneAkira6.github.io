<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>学マスをMacで遊ぶ方法</title>
      <link href="/gkmas_mac.html"/>
      <url>/gkmas_mac.html</url>
      
        <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>学マスは本来 iOS &#x2F; Android 向けのアプリですが、Mac 上でも動かす方法があります。<br>ここでは、<strong>Sideloady</strong> を使って IPA ファイルを Mac にインストールし、実際に動作させるまでの手順と、遭遇した問題・解決策をまとめます。</p><p>Refはこちら：</p><ul><li><a href="https://note.com/hoy0verse/n/n043bb3308a0d#5e54f119-c5eb-45a0-bc8f-00c03c283214">https://note.com/hoy0verse/n/n043bb3308a0d#5e54f119-c5eb-45a0-bc8f-00c03c283214</a></li><li><a href="https://misskey.io/notes/a5pvn728kcix0312">https://misskey.io/notes/a5pvn728kcix0312</a></li></ul><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><p><a href="https://note.com/hoy0verse/n/n043bb3308a0d#5e54f119-c5eb-45a0-bc8f-00c03c283214">https://note.com/hoy0verse/n/n043bb3308a0d#5e54f119-c5eb-45a0-bc8f-00c03c283214</a></p><p><a href="https://misskey.io/notes/a5pvn728kcix0312">https://misskey.io/notes/a5pvn728kcix0312</a></p><h2 id="手順"><a href="#手順" class="headerlink" title="手順"></a>手順</h2><p>上記したRefを見れば大体わかると思います。</p><h3 id="1-Sideloadyをインストール"><a href="#1-Sideloadyをインストール" class="headerlink" title="1. Sideloadyをインストール"></a>1. Sideloadyをインストール</h3><p>まずは <a href="https://sideloady.io/">Sideloady</a> をダウンロードしてインストールします。</p><h3 id="2-学マスのIPAファイルをダウンロード"><a href="#2-学マスのIPAファイルをダウンロード" class="headerlink" title="2. 学マスのIPAファイルをダウンロード"></a>2. 学マスのIPAファイルをダウンロード</h3><h3 id="3-Sideloadする"><a href="#3-Sideloadする" class="headerlink" title="3. Sideloadする"></a>3. Sideloadする</h3><h3 id="4-Launch"><a href="#4-Launch" class="headerlink" title="4. Launch!"></a>4. Launch!</h3><p>ここで問題発生。ログイン画面は正常ですが、ダウンロードが始まると画面が真っ黒になってしまいました。（おそらく横向き表示になるのが原因）</p><h2 id="解決策"><a href="#解決策" class="headerlink" title="解決策"></a>解決策</h2><p>これをipaに注入する。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>UISupportedInterfaceOrientations<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>UIInterfaceOrientationPortrait<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>UIInterfaceOrientationPortraitUpsideDown<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>UIInterfaceOrientationLandscapeLeft<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>UIInterfaceOrientationLandscapeRight<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再度Sideloadします。</p><p>また画面が黒くなった時、左上のメニューの<code>表示</code>-&gt;<code>横向き</code>&#x2F;<code>縦向き</code>を切り替えれば直るはず。</p><p><img src="https://imgur.com/lAah548.jpg"></p><h2 id="課題"><a href="#課題" class="headerlink" title="課題"></a>課題</h2><ul><li>表示解像度は iPad 向け仕様 のまま</li><li>Mac 用に最適化されていないため UI がやや不自然</li></ul>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>console.log の代わりに Logpoints を使う話</title>
      <link href="/logpoint.html"/>
      <url>/logpoint.html</url>
      
        <content type="html"><![CDATA[<h2 id="デバッグの定番「console-log-」"><a href="#デバッグの定番「console-log-」" class="headerlink" title="デバッグの定番「console.log()」"></a>デバッグの定番「console.log()」</h2><p>フロントエンド開発では、処理の流れを確認するために console.log() を使う場面が多いと思います。<br>ただしこの方法は、ログを消し忘れてコミットしてしまったり、再ビルドを待つ必要があるなど、意外と手間がかかります。</p><h2 id="Logpoints-という選択肢"><a href="#Logpoints-という選択肢" class="headerlink" title="Logpoints という選択肢"></a>Logpoints という選択肢</h2><p>実は Chrome や Edge には Logpoints という仕組みが用意されていて、これを使えばコードを一切編集せずにコンソールにログを出せます。<br>console.log() を書かずに同じことができるわけです。</p><h2 id="使い方"><a href="#使い方" class="headerlink" title="使い方"></a>使い方</h2><ol><li>DevTools を開き、Sources タブで対象ファイルを表示（Cmd + P）</li><li>行番号を右クリックして Add logpoint… を選択<br><img src="https://imgur.com/gWjWhbf.jpg"></li><li>出力したい内容や変数を入力<br><img src="https://imgur.com/wj3Vtmu.jpg"></li></ol><p>これで準備が完了です。Logpoints が設定された箇所のコードが実行されると、コンソールにメッセージが出力されます。</p><p><img src="https://imgur.com/effmpxz.jpg"></p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>普段のデバッグでは console.log() に頼りがちですが、Logpoints を覚えておくと 「コードを汚さずにログを確認できる」 という大きな利点があります。<br>日常的に使うツールだからこそ、こうした小技を知っておくと開発効率がぐっと上がります。</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈日本银行和信用卡</title>
      <link href="/japan_credit_card.html"/>
      <url>/japan_credit_card.html</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>推荐先看这篇文章：</p><p><a href="https://www.reddit.com/r/runtoJapan/comments/1f70drh/%E6%B5%85%E8%B0%88%E6%97%A5%E6%9C%AC%E9%93%B6%E8%A1%8C%E5%92%8C%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F/">https://www.reddit.com/r/runtoJapan/comments/1f70drh/浅谈日本银行和支付系统/</a></p><p>日本生活教程都不难搜。但针对在日工作的人的教程还是不够多。银行、信用卡这块白领和学生的经验情况几乎是完全不同的。有感于此，遂将自己过去半年的一些经验总结出来。</p><p><strong>本人基本情况</strong></p><ul><li>东京IT企业正社员，25～30岁</li><li>技人国签证</li><li>東京25歳平均年収。（お察しください）</li></ul><h2 id="一、银行开户"><a href="#一、银行开户" class="headerlink" title="一、银行开户"></a>一、银行开户</h2><p>坊间普遍流传着“来日未满半年不能开xx银行账户”的传说。这条规定我认为是，日本法律上，居住时间未满6个月的人，属于“非居住者”，在申请银行账户时会有一些限制（不能海外转账etc.）。</p><p>但这不代表未满半年<strong>一定</strong>不能开银行账户。事实上这条理由只是一些银行大堂经理赶人的接口。</p><p>有稳定工作，持有公司开具的在职证明，是可以在各大银行开户的，如果仍遇到不给开户的，那不是你材料的问题，而是银行自己的问题，甚至有可能是某个经理个人的问题。</p><p>刚来日本遇到一个非常可笑的问题：因为还未入职，所以还没有工作证明。因为没有工作证明，所以被各大银行拒绝开户。所以第一个月使用（不要工作证明的）邮储接的工资。后续才改成其他银行。</p><p>这里介绍一下我开户的经历，只是我个人的经历，仅供参考。</p><p>在中国开户的时候，银行只会给一张银行卡。这个卡的正式说法是银联的 Debit Card。在支持银联的 ATM 上都可以使用。</p><p>但是日本银行开户，有一些银行可能现场只会给一张 Cash Card。这张卡是没有卡组织的，其只是一张提款卡，唯一的用处就是去该银行的 ATM 机上取钱。所以不能用来日常无现金支付。</p><h3 id="ゆうちょ銀行"><a href="#ゆうちょ銀行" class="headerlink" title="ゆうちょ銀行"></a>ゆうちょ銀行</h3><p>邮储银行完全不挑人，走进去就能开账户。</p><p>在港区某百年历史的邮储开户。不刁难人，丝滑开完，现场拿存折。但是账户属于“カードのみ”，能通过存折存钱，但无法通过存折取钱（莫名其妙）。真正能取钱的提款卡之后才会发送。同时大堂经理询问是否要办一张<code>visa</code>的 debit card，因为是 debit 所以不需要审查，于是直接办了。约10天以后两张卡一起送到。</p><h3 id="三井住友銀行"><a href="#三井住友銀行" class="headerlink" title="三井住友銀行"></a>三井住友銀行</h3><p>居住时长满半年，可以直接线上开户。不满半年线上会被拒。下面看看线下的情况。</p><p>港区某支店。</p><p>第一次 walk in，被告知因为居住时长没满半年，不可以开户。我说我有工作，需要开户收工资，于是又说，那把工作证明一起带过来。</p><p>第二次 walk in，这次带了工作证明来。但是大堂经理给一个头头打电话咕咕唧唧半天，最后又说，需要有明确的文件说明，我所在的公司明确指定，需要开三井住友银行的账户。这委实强人所难，遂罢。</p><p>事后想来，第二次被拒的理由实在是荒唐可笑。</p><h3 id="りそな銀行"><a href="#りそな銀行" class="headerlink" title="りそな銀行"></a>りそな銀行</h3><p>港区某支店。walk in，和三井一样，以居住未满半年为由，让带工作证明来。后续我开了其他银行，这家未再来。</p><h3 id="三菱ufj銀行"><a href="#三菱ufj銀行" class="headerlink" title="三菱ufj銀行"></a>三菱ufj銀行</h3><p>号称日本第一大银行（体感则并没有，ATM数量个人体验一般）。港区某支店 walk in，当时已经持有工作证明了，去开三井仍被拒，来到这一家，没多说什么，直接开了。唯开户过程就是发给一个平板自己默默填信息，然后连线线上的客服中心确认身份，网点的工作人员没啥服务，当然也不需要什么服务就是。</p><p>三菱不发存折，银行卡带卡组织，<code>visa</code>标不能绑 Apple Pay，<code>JCB</code> 标可以。本人是Apple Pay 重度用户，遂选择<code>JCB</code>。卡片后日送到。在申请的最后还会问我要不要再申请他们家的 credit card，尝试点了一下，几分钟以后就发邮件过来告知不通过。草。</p><p>题外话：现场开户时，和远程客服连线时，第一遍卡了5分钟也没连上，把大堂经理叫来，换了个平板继续弄…遂感叹三菱的银行系统之（）</p><h3 id="楽天銀行"><a href="#楽天銀行" class="headerlink" title="楽天銀行"></a>楽天銀行</h3><p>网络银行。开卡无难度，但也要工作证明的复印件。邮寄办理，前后花有20天左右。<br>网络银行的问题是0网点，一切都在便利店ATM上操作。仍嫌不便。</p><h2 id="二、账户使用"><a href="#二、账户使用" class="headerlink" title="二、账户使用"></a>二、账户使用</h2><p>个人觉得对个人日常使用影响最大的是以下几点：</p><ul><li>ATM 取现手续费</li><li>转账手续费</li><li>无现金支付支持程度（主要是 Apple Pay）</li></ul><h3 id="ゆうちょ銀行-1"><a href="#ゆうちょ銀行-1" class="headerlink" title="ゆうちょ銀行"></a>ゆうちょ銀行</h3><p>邮储最好开，但是干啥都收费，憾。转账要手续费，时间外取现要手续费，嘛这些各家银行都有，但别家有很多方式可以抵扣，唯邮储收费雷打不动。</p><p>再说说 Apple Pay。当初开户，给了一个没有卡组织的提款卡（约等于废物）。虽然又给了一张 visa debit，但是这张卡竟然不能绑 Apple Pay。返现率只有0.25%。不过是完完全全的现金返现，打到账户上的，可以理解。（但还是太低了！）</p><p>邮储有一个做的好的地方是，可以使用手机 App 在 ATM 机上取钱。外出少带一张卡。</p><p>总之邮储虽然好开，但是各种服务极一般。</p><h3 id="三菱ufj銀行-1"><a href="#三菱ufj銀行-1" class="headerlink" title="三菱ufj銀行"></a>三菱ufj銀行</h3><p>过去半年的工资都用这家银行收的（最近改成三井了）。选择<code>JCB</code>标的卡，可以绑 Apple Pay。</p><p>用这张卡收工资的话，账户会升级成<code>三菱ufj スーパー普通預金</code>，每月 ATM 取现免2次手续费（如有），他行转账免3次手续费。日常生活够用。</p><p>三菱的缺点是 App 做得烂。App 几无什么功能，本人认证的方法又特别难用。本人认证需要登录 One Time Password，方法是接收三菱打來的電話。这个电话的前一分钟是毫无意义的防诈骗宣传，之后才慢悠悠走入正题。登录成功以后还没完，经常莫名其妙的，明明 One Time Password 还能用，结果在 App 内部做一些操作又让重新登录。</p><p>最近改了政策，以接收电话方法登录的本人认证，一天最大只能汇10万日元。想升级就得用 My Number Card 登录。我的手机有问题，一直读取不了 My Number Card。正好也来日满半年了，遂放弃这家银行，又在三井开户了。</p><p>三菱信用卡的活动个人没怎么研究过，似乎各大便利店也有高返点，可惜他家把我拒了。罢。</p><h3 id="三井住友银行"><a href="#三井住友银行" class="headerlink" title="三井住友银行"></a>三井住友银行</h3><p>最近刚开户，新宠。刚来日的时候港区某支店故意刁难不给办，奈何实在喜欢三井的 App 设计和返点，满半年以后还是在线开户了。</p><p>三井最近强推的<code>olive</code>，point card, debit card, credit card三合一，使用credit card➕Apple Pay，在711和罗森可以做到7%返点，对俺穷蛆委实利好。</p><p>三井和三菱一样，拿这张卡收工资，每个月会赠送2次 ATM 免费和3次他行转账免费。另外三井和三菱 ATM 在一定程度上互通，可以互相在对方的 ATM 机上取钱，正常时间取钱都免费。</p><p>题外话：但是我曾经持三菱的卡去三井 ATM 取钱，机器竟然读取失败了…之后也懒得多跑几个 ATM 试了，总之一直都是去对应银行的 ATM 取钱。</p><h2 id="三、日本信用卡"><a href="#三、日本信用卡" class="headerlink" title="三、日本信用卡"></a>三、日本信用卡</h2><p>网上找到的信用卡文章千罗万象，要找到真正符合自己情况的难上加难。我认为以后写信用卡文章的人，应该先把公司名称和年收公布一下…</p><p>本人的基本情况见序，总结起来就是，外国人，小年轻，港区白领，工资中下。</p><p>那么来看看实际的开卡情况。我按照来日以后的时间顺序罗列。</p><h3 id="楽天カード"><a href="#楽天カード" class="headerlink" title="楽天カード"></a>楽天カード</h3><p>鼎鼎大名。网上有的情报说外国人不太好开，我司也确实有同事一开始来，网申结果被拒的。我的情况是去线下办理乐天电话卡，电话卡办完，顺手点了一个信用卡申请，也许是因为线下？或者是因为和电话卡一起开的缘故？总之没过几分钟邮件就发过来说开卡成功了。开卡额度给了20万。因为是和电话卡一起办的，搞活动，开卡礼给了2万点，美滋滋。</p><p>这张卡返点简单粗暴。100円→1P。乐天的点数蛮好用，首先可以在乐天市场用（虽然我不咋用），其次也可以通过 R Pay 在线下用。我正常用乐天的点数在线下吃饭。如果上述两种途径都不想用，他的点数也可以直接用来还信用卡账单，总之非常便利。</p><h3 id="Amazon-Prime-Card"><a href="#Amazon-Prime-Card" class="headerlink" title="Amazon Prime Card"></a>Amazon Prime Card</h3><p>和三井合作的卡。这张卡也遇到过被拒的人。我的情况是，来日本之前就一直在日亚上买东西，一年几万 RMB 的水平。（当时就天天给我打广告让我办卡，我寻思我一个外人办jb，苦笑）</p><p>也许是因为这个原因，他们能看到我的消费记录？总之申请这张卡的时候也是几分钟就下来了，额度10万菜卡。</p><p>嘛但实际开卡难度很低，并不需要来日本之前就攒什么消费记录。如果第一次申请被拒，也无妨，日亚反正正常都会有消费记录，过半年再申请总会下。此卡属于人手一张的水平。</p><p>优势是日亚高返点，便利店也还行，但是点数是200円起跳，由于我已经有乐天卡，且此卡额度也低，所以此卡就成为日亚消费专用。</p><h3 id="bic-camera-view-card"><a href="#bic-camera-view-card" class="headerlink" title="bic camera view card"></a>bic camera view card</h3><p>简单介绍一下，view card 是JR东日本旗下的信用卡，和 bic camera 合作办的。</p><p>bic camera 消费返11%，suica 充值返1.5%。</p><p>但办这张卡的主要原因不是为了返点，而是 suica 充值。只有 view card 拥有自动充值的功能，也就是说，进站的时候如果余额不够会自动充钱，不会被挡在闸机外再手动充钱，图的只是这个便利。</p><p>还有一个原因，其他家信用卡，往 suica 里充钱基本是不返点的（suica 本身就相当于电子现金，充1000円再返点，钱当然不可能凭空多出来），但 view card 是返的。于是这行卡就成为 suica 充值专用。</p><p>刚来的时候在 bic camera 买电器，攒了不少点数，以1500-&gt;1000的比率充值进 suica，也美滋滋。</p><p>办卡过程：去 bic camera 有楽町，拿了一个办卡的信封，自己填了填信息，又盖了个银行印，寄出去，过几天接一个身份核实电话，然后就通知开卡成功了，难度不高，额度20万。</p><p>但是短期之内在 JR 东日本官网又想申请别的 view card，就被拒了，应该是不让频繁申请。</p><h3 id="Bushiroad-Card"><a href="#Bushiroad-Card" class="headerlink" title="Bushiroad Card"></a>Bushiroad Card</h3><p>オリコ合作办的卡。返点率一般，而且返的是（没什么吊用的）bushiroad point 笑。就是这么一张垃圾卡，我申请竟然给我拒了。同时因为这张卡被拒，后续短期内申请其他家卡都被拒了。</p><h3 id="JCB-Original-W"><a href="#JCB-Original-W" class="headerlink" title="JCB Original W"></a>JCB Original W</h3><p>第一次申请，当时因为 Bushiroad Card 已被拒，所以也被拒。</p><p>半年后（25年4月）第二次申请，提交表单以后进人工审核，过几天发了一个信封过来让复印下在留卡。（经验之谈：肯发信封过来说明已经有意发卡了）把复印件发回去，又过了两周左右，终于通知说发卡成功了。想来大约是渋々发卡…额度给了30万。</p><h3 id="三菱ufjカード"><a href="#三菱ufjカード" class="headerlink" title="三菱ufjカード"></a>三菱ufjカード</h3><p>银行开户的时候问要不要开一张，不抱希望地点了一下，果然被拒了。罢。</p><h3 id="メルカード"><a href="#メルカード" class="headerlink" title="メルカード"></a>メルカード</h3><p>メルカリ发的卡。第一次申请被秒拒，半年后第二次依然被秒拒，我煤炉消费也不少的，竟然也不行，想来是对外国人审查比较严。</p><p>话说メルカリ App 里给的後払い额度也一直是0，抠死。</p><h3 id="PayPay-Card"><a href="#PayPay-Card" class="headerlink" title="PayPay Card"></a>PayPay Card</h3><p>平常 PayPay 用的不多。也就交水费的时候用用。不申请他自家的卡的话，每次都要充钱（最低5000）再用，个人不爽，那还是申请一张吧。</p><p>第一次申请被拒，半年后（24.4）审查了一周以后下卡。额度5万<del>菜中菜</del>。返点一般，PayPay 专用耳。</p><h3 id="epos-card"><a href="#epos-card" class="headerlink" title="epos card"></a>epos card</h3><p>丸井发的卡。来日满半年以后尝试第一次网申，被秒拒。后来收到我租房担保公司GTN的广告，说他们跟 epos 合作，发了外国人专属信用卡，乃悟。看来单独做了一个外人枠。</p><p>通过 GTN 的链接申请，成功下卡，额度20万。不过返点率低到可怜，本来通常 epos 卡会给的众多豪华开卡礼也缩水成了一张毛巾（？）。此卡纯粹开着图一乐，罢。</p><h3 id="三井住友オリーブ"><a href="#三井住友オリーブ" class="headerlink" title="三井住友オリーブ"></a>三井住友オリーブ</h3><p>办理三井的 olive 账号的话，发的卡是三卡合一，可以直接切换成信用卡模式用。<br>不是 olive 账号的话，似乎会单独发行<code>三井住友カード（NL）</code>。</p><p>哪怕是 olive 账号，也会有申请不过的情况，那么就不能使用信用卡模式，正常的 debit 模式，返点只有0.5%（偷着乐吧，三菱的 debit 一分没有）。</p><p>我是在来日半年以后网申的三井 olive，一周后拿卡，登录手机 App 以后自动申请开通信用卡模式，半日不到成功开启。额度30万。</p><p>此卡最大的好处就是便利店（711 罗森）返点7%。其他高返点店铺，看了一下，我常用的也就ガスト。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>到目前为止（来日7月目），我的开卡情况：</p><table><thead><tr><th align="center"></th><th align="center">刚来日</th><th align="center">半年后</th></tr></thead><tbody><tr><td align="center">楽天カード</td><td align="center">成功</td><td align="center">二卡下卡成功</td></tr><tr><td align="center">Amazon Prime Card</td><td align="center">成功</td><td align="center"></td></tr><tr><td align="center">bic camera view card</td><td align="center">成功</td><td align="center"></td></tr><tr><td align="center">Bushiroad Card</td><td align="center">拒</td><td align="center"></td></tr><tr><td align="center">JCB Original W</td><td align="center">拒</td><td align="center">成功</td></tr><tr><td align="center">三菱ufjカード</td><td align="center">拒</td><td align="center"></td></tr><tr><td align="center">メルカード</td><td align="center">拒</td><td align="center">拒</td></tr><tr><td align="center">PayPay Card</td><td align="center">拒</td><td align="center">成功</td></tr><tr><td align="center">epos card</td><td align="center"></td><td align="center">GTN链接，成功</td></tr><tr><td align="center">三井住友オリーブ</td><td align="center"></td><td align="center">成功</td></tr></tbody></table><p>读者可以参考我的申卡顺序。回想起来，当时不应该申请 Bushiroad Card，因为那张卡被拒，短时间内导致 JCB，三菱，煤炉都被拒。</p><p>网上偶尔找到一些小留的教程，一是没啥日本信用卡需求（国内信用卡嗯用），而是充其量申一些超市发的菜卡，更无参考价值。这里仅作抛砖引玉。</p><h2 id="四、没有日本信用卡怎么办？"><a href="#四、没有日本信用卡怎么办？" class="headerlink" title="四、没有日本信用卡怎么办？"></a>四、没有日本信用卡怎么办？</h2><p>如果你运气不好，刚来日本没有一家下卡成功的话，其实也没什么不便的地方。这里介绍一下信用卡的替代方式。</p><h3 id="kyash-ANA-Pay"><a href="#kyash-ANA-Pay" class="headerlink" title="kyash&#x2F;ANA Pay"></a>kyash&#x2F;ANA Pay</h3><p>这一类属于发行虚拟信用卡的。大致流程都是：</p><p>开设账号（需要日本手机号）<br>本人认证（需要在留卡）</p><p>认证成功以后就可以用银行账户往里面充钱了。他们会给你发行一张 visa prepaid card，你可以在 App 里面查看卡号，有效期，cvv，总之该有的都有。因为是预付卡，所以并没有信用额度，使用之前必须先往里充钱。</p><p>在一般通贩网站上使用完全没有问题，本人遇到过唯一不能绑这种卡的网站是日本雅虎。</p><p>线下使用的话，kyash 可以申请实体卡（要收制卡费）。他们也支持绑定 Apple Pay，不过 kyash 的 Apple Pay 只支持 quicpay+（没啥用），ANA Pay 是支持 visa touch 的，线下使用时推荐 ANA Pay。</p><h3 id="PayPay"><a href="#PayPay" class="headerlink" title="PayPay"></a>PayPay</h3><p>想体验无现金消费的话，PayPay 更符合老中的习惯。PayPay 在被扫的场合，体验几乎和支付宝一样丝滑。但是在主动扫商户码的场合，支付宝通常是付完钱给商家看一眼就行了（甚至商家自己都有播报：支付宝到账…），而 PayPay 则是：</p><p>商家告知你需要付3825<br>你在 PayPay 上输入3825，这个时候不要动，先给商家看一遍<br>点击付款。付完再给商家看一遍付款页面</p><p>不胜其烦。所以本人线下也不怎么用 PayPay。线上的场合，PayPay 的支持程度更是一般。</p><h3 id="suica"><a href="#suica" class="headerlink" title="suica"></a>suica</h3><p>支持程度一般，但用起来还是方便的，felica 技术，优点就是快，笑。</p><p>小结：网购可以用 kyash&#x2F;ANA Pay，线下可以用 PayPay。</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dumping My own L3 CDM with Android Studio</title>
      <link href="/DRM.html"/>
      <url>/DRM.html</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>While exploring Widevine DRM and its L3 implementation, I experimented with extracting my own Content Decryption Module (CDM) keys using <strong>Android Studio</strong> and <strong>Frida</strong>.<br>This post documents my environment, the exact steps I followed, and a few notes that might save time for anyone attempting the same process.</p><h2 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h2><ul><li><strong>Machine</strong>: Mac Mini (M2 Chip)</li><li><strong>OS</strong>: macOS 15.2</li><li><strong>Emulator</strong>: Pixel 4 XL, API 29 (without Google Play)</li></ul><h2 id="Step-1-—-Android-Studio-Setup"><a href="#Step-1-—-Android-Studio-Setup" class="headerlink" title="Step 1 — Android Studio Setup"></a>Step 1 — Android Studio Setup</h2><p>Create and launch an emulator.<br>For my setup, I used a Pixel 4 XL image running API 29 without Google Play services.</p><h2 id="Step-2-—-Download-Frida-Server"><a href="#Step-2-—-Download-Frida-Server" class="headerlink" title="Step 2 — Download Frida Server"></a>Step 2 — Download Frida Server</h2><p>Obtain the matching Frida server binary for the emulator’s architecture:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida-server-16.0.2-android-arm64</span><br></pre></td></tr></table></figure><h2 id="Step-3-—-Push-Frida-to-the-Emulator"><a href="#Step-3-—-Push-Frida-to-the-Emulator" class="headerlink" title="Step 3 — Push Frida to the Emulator"></a>Step 3 — Push Frida to the Emulator</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br><span class="line">adb push frida-server-16.0.2-android-arm64 /sdcard</span><br><span class="line">adb shell</span><br><span class="line"></span><br><span class="line">su</span><br><span class="line">mv /sdcard/frida-server-16.0.2-android-arm64 /data/local/tmp</span><br><span class="line">chmod +x /data/local/tmp/frida-server-16.0.2-android-arm64</span><br><span class="line">/data/local/tmp/frida-server-16.0.2-android-arm64</span><br></pre></td></tr></table></figure><p>Leave this shell running — Frida must stay active in the background.</p><h2 id="Step-4-—-Dumper-Setup"><a href="#Step-4-—-Dumper-Setup" class="headerlink" title="Step 4 — Dumper Setup"></a>Step 4 — Dumper Setup</h2><p>Clone and configure wvdumper.<br>My Python environment looked like this:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Package      Version</span><br><span class="line">------------ -------</span><br><span class="line">frida        16.7.4</span><br><span class="line">pip          25.0</span><br><span class="line">protobuf     3.20.3</span><br><span class="line">pycryptodome 3.22.0</span><br></pre></td></tr></table></figure><p>Then simply run:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python dump_keys.py</span><br></pre></td></tr></table></figure><h2 id="Step-5-—-Identifying-Functions-in-libwvhidl-so"><a href="#Step-5-—-Identifying-Functions-in-libwvhidl-so" class="headerlink" title="Step 5 — Identifying Functions in libwvhidl.so"></a>Step 5 — Identifying Functions in libwvhidl.so</h2><p>Pull the library from the emulator:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb pull /vendor/lib64/libwvhidl.so</span><br><span class="line">nm -gD libwvhidl.so</span><br></pre></td></tr></table></figure><p>The output includes multiple function names, such as:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">000000000026eb00 T vehbyocv</span><br><span class="line">00000000002710f8 T ygjiljer</span><br><span class="line">0000000000270098 T yhwxewib</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Add all suspicious-looking 8-character function names to dumper&#x2F;Helpers&#x2F;script.js. For example:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">KNOWN_DYNAMIC_FUNC</span> = [<span class="string">&quot;vehbyocv&quot;</span>, <span class="string">&quot;ygjiljer&quot;</span>, <span class="string">&quot;yhwxewib&quot;</span>, <span class="string">&quot;ywbqglwf&quot;</span>, <span class="string">&quot;zlhgtlbc&quot;</span>, <span class="string">&quot;znyuaxnv&quot;</span>, <span class="string">&quot;zqajgkxr&quot;</span>];</span><br></pre></td></tr></table></figure><h2 id="Step-6-—-Running-the-Demo"><a href="#Step-6-—-Running-the-Demo" class="headerlink" title="Step 6 — Running the Demo"></a>Step 6 — Running the Demo</h2><p>At this point, you should have two terminal windows:</p><ul><li>one with the Frida server running,</li><li>one executing dump_keys.py.</li></ul><p>Now launch the emulator and visit <a href="https://bitmovin.com/demos/drm">https://bitmovin.com/demos/drm</a></p><p>If everything is configured correctly, the <strong>magic happens</strong>: the dumper intercepts and reveals the keys.</p><h2 id="Closing-Thoughts"><a href="#Closing-Thoughts" class="headerlink" title="Closing Thoughts"></a>Closing Thoughts</h2><p>This walkthrough is less of a polished tool release and more of a record of my own exploration. Still, it shows how approachable Widevine L3 research can be with the right setup.</p><p>By combining Android Studio, Frida, and a bit of reverse-engineering curiosity, you can peek into how DRM operates at a lower level — and that’s an exciting learning experience for any developer.</p><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><p><a href="https://forum.videohelp.com/threads/408031-Dumping-Your-own-L3-CDM-with-Android-Studio">https://forum.videohelp.com/threads/408031-Dumping-Your-own-L3-CDM-with-Android-Studio</a></p><p><a href="https://github.com/wvdumper/dumper/issues/31#issuecomment-1745622411">https://github.com/wvdumper/dumper/issues/31#issuecomment-1745622411</a></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>麻倉ももオケコン兵庫公演紀行</title>
      <link href="/kobe_travel.html"/>
      <url>/kobe_travel.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-当選"><a href="#1-当選" class="headerlink" title="1.当選"></a>1.当選</h2><p>■公演タイトル　：麻倉もも<br>■予約番号　　　：6214042761<br>■電話番号　　　：会員登録もしくは予約時に<br>　　　　　　　　　入力された電話番号<br>■公演日　　　　：2025&#x2F;4&#x2F;26（土）<br>　　　　　　　　　14:00　開演<br>■会場名　　　　：兵庫県立芸術文化センター　ＫＯＢＥＬＣＯ　大ホール</p><h2 id="2-飛行機"><a href="#2-飛行機" class="headerlink" title="2. 飛行機"></a>2. 飛行機</h2><p><strong>往</strong><br>4.25（金）<br>東京 09:05 &#x3D;&gt; 神戸 10:20</p><p><strong>返</strong><br>4.27（日）<br>神戸 09:15 &#x3D;&gt; 東京 10:25</p><h2 id="3-酒店"><a href="#3-酒店" class="headerlink" title="3. 酒店"></a>3. 酒店</h2><p>宿名：ホテルサンルートソプラ神戸アネッサ<br>宿泊日数：2泊<br>04&#x2F;25(金) ~ 04&#x2F;27（日）</p><ol><li>相対的に安い</li></ol><p>評価<br>遮音性ゴミ。隣の中華の大声聞こえてきて草。<br>位置としては結構良い。新開地って阪急乗れば梅田まで40分くらい。</p><h2 id="4-荷物チェックリスト"><a href="#4-荷物チェックリスト" class="headerlink" title="4. 荷物チェックリスト"></a>4. 荷物チェックリスト</h2><h2 id="5-遊記"><a href="#5-遊記" class="headerlink" title="5. 遊記"></a>5. 遊記</h2><h3 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h3><p>久々の旅だ！<br>思えば去年あんな飛んだ方がおかしい。まるで金持ちのようだ。</p><p>着陸。天気曇り。</p><p>THE・港町の感じがすごい。</p><p>マック。関西色々違うな接客とか。</p><p>そして散策。北野へ。</p><p>午後ほとんとの時間は北野で過ごした。神社めっちゃ整備してて綺麗だった。洋館とかもぽったくりかと思ったら思った以上にちゃんと内容があって西欧雰囲気もちゃんと伝わってきて好評。</p><p>そして関西のスタッフはまだ外人慣れてないような気がする。熱心に手伝おうと思っていらっしゃる様子、ちょっと感動した。東京じゃ僕のような外人は絶対冷たい目で扱われるよ。</p><p>三宮→北野→洋館めぐり→新神戸→新開地。めっちゃ疲れた。</p><p>チェックイン。そして再び三宮へ。</p><p>ふーん、東京のアキバ、大阪の日本橋、じゃあ神戸には三宮かな。サブカルの聖地。<br>なんか昭和の商店街と令和の商店街二つ並んでてちょっと奇妙。<br>アニメイト、らしんばん、駿河屋。まあ買いたいものほぼないかな。それよりちょうど退学時刻なので、街中にJKの姿があちこち現れてる。関西の制服はちょっと違うなー、と。うまく伝われないが、東京よりちょっと厚い？そしてより正装っぽい。</p><p>今時のJKはホントおしゃれだな、と。自分の学生時代思い出してちょっと草。若い子男女問わず本当みんなビジュアル最高やん。</p><p>夜はハーバーランド。こっちも赤煉瓦あるな、港町風情？</p><p>南京町。まあまあ。夜だからかな、思ったより人少なかった。ガラガラな街、苦労している店主さん、見ててちょっと同情というか、憐憫。</p><p>JR乗って西へ。舞子駅。孫中山先生の跡地見たいが、閉館してて草。そして周りも秘境すぎてもっと草。まあ帰ろう。</p><h3 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h3><p>めっちゃ良い天気。日本の晴天は青いなのだ。</p><p>ちょっと寄り添って湊川神社。めっちゃ綺麗な神社。ピカピカな木々、ピカピカな正殿、良い。(語彙力)</p><p>そして阪急のって西宮。10時台到着で、時間的にももちゃんのグッズはまだかな、と勝手に勘違えしてて、西宮神社に先に行った。（後は頭抱えてる）</p><p>西宮神社。大社で、結婚する人もちょこちょこ見える。敷地内の庭結構綺麗。</p><p>やっぱ思う。僕の中の関西への偏見は、ちょっと汚いイメージ。でも神戸は結構綺麗だし、西宮も。</p><p>じゃあもしかしたら難波付近だけが汚い？笑。</p><p>そして再び会場へ。って、ショックすぎてくさ。特典ブロマイド売り切れたし、限定キーホルダーも売り切れた。次からは絶対グッズ確保や。ももちゃんごめん！</p><p>&#x3D;&#x3D;&#x3D;LIVE&#x3D;&#x3D;&#x3D;</p><p>衣装: ねこみみ<br>シルクピンクドレス<br>上半身黒で良い</p><p>ももちゃん本当熟女っぽくなってきたな<br>慈愛な笑顔</p><p><strong>セトリ</strong><br>ユメシン<br>ステインドグラス<br>Agapanthus</p><p>MC<br>ゴールデン休んだ人ー<br>(o・∇・o)これだけの人</p><p>恋のプレーリュード 手の振り<br>シュークリーム 笑ってて意外。膨らむ表情みたいな<br>観覧車 この曲はちゃんと表情作りました<br>今すぐに</p><p>絶対抱き心地いいよなももちゃん 声もすごく可愛い<br>海外振りもう定番つづあるのかなちょっと辛いよももちゃん</p><p>幸せって書いて<br>no distance<br>僕だけに見える星<br>run for you</p><p>Good Job←←←確かに意外<br>赤い糸</p><p>ももちゃん声めっちゃ綺麗<br>でも音響ないからあんま声出ないな</p><p>おっぱい印象ないな草<br>(o・∇・o)知性ない</p><p>总结是，比较痛苦<br>まあ推し活总是痛苦的</p><p>猫耳もうももちゃんの常備造形や！<br>おっぱいの代わりに最近足よく出したな<br>確かに久々のシュークリーム</p><p>仕事と私どっちが良い？</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>ライブ見たら憂鬱、いつものことだ。梅田へ。</p><p>一年後の故地重游。当時はmygo関係で結構しんどかった。今回はももちゃん関係で、これもしんどかった。</p><p>梅田、難波、日本橋。まあ全部見覚えがある景色だ。日本橋のオタク店を適当に回ってきて、またいつも通りに外人だと判別されて、まあ僕はこの日からもう開き直った気がする。</p><p>夜は串カツ。もう僕の定番つづあるのかな。２杯飲んだらちょっとだけ悲しい気持ち抑えた。</p><p>（当時のノートそのまま残すね）<br>なるべく今日のこと忘れたいかも<br>大阪のことも<br>むしろ色んなことを</p><p>越想越痛苦。<br>多捡垃圾，忘记兵库的所有事情。</p><h3 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h3><p>神戸→東京。</p><p>京急乗るの嫌いじゃない。</p><p>京急、JR東、こういう面でも東西日本は違うな。</p><p>そして神戸での悲しい記憶をなるべく忘れようとしてる今。</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 麻倉もも </tag>
            
            <tag> 声優 </tag>
            
            <tag> 巡礼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记：React Query优化</title>
      <link href="/react-query.html"/>
      <url>/react-query.html</url>
      
        <content type="html"><![CDATA[<h2 id="isFetching-引起的重复渲染"><a href="#isFetching-引起的重复渲染" class="headerlink" title="isFetching 引起的重复渲染"></a>isFetching 引起的重复渲染</h2><p>在 React Query 中，每个 query 会暴露一些 meta 数据，如 <code>isFetching</code>，用于标记数据是否正在请求中。例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useTodosQuery</span> = (<span class="params">select</span>) =&gt;</span><br><span class="line">  <span class="title function_">useQuery</span>([<span class="string">&#x27;todos&#x27;</span>], fetchTodos, &#123; select &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useTodosCount</span> = (<span class="params"></span>) =&gt; <span class="title function_">useTodosQuery</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> data.<span class="property">length</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TodosCount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> todosCount = <span class="title function_">useTodosCount</span>()</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;todosCount.data&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当后台数据正在 refetch 时，组件会根据以下数据重复渲染两次：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; status: &#x27;success&#x27;, data: 2, isFetching: true &#125;</span><br><span class="line">&#123; status: &#x27;success&#x27;, data: 2, isFetching: false &#125;</span><br></pre></td></tr></table></figure><p>如果不需要展示加载状态，这种重复渲染就显得冗余。</p><h2 id="使用-notifyOnChangeProps-控制渲染"><a href="#使用-notifyOnChangeProps-控制渲染" class="headerlink" title="使用 notifyOnChangeProps 控制渲染"></a>使用 notifyOnChangeProps 控制渲染</h2><p>React Query 提供了 <code>notifyOnChangeProps</code>，用于指定组件仅在关注的字段变动时才触发渲染。例如：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useTodosQuery</span> = (<span class="params">select, notifyOnChangeProps</span>) =&gt;</span><br><span class="line">  <span class="title function_">useQuery</span>([<span class="string">&quot;todos&quot;</span>], fetchTodos, &#123; select, notifyOnChangeProps &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useTodosCount</span> = (<span class="params"></span>) =&gt; <span class="title function_">useTodosQuery</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> data.<span class="property">length</span>, [<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><p>通过将 <code>notifyOnChangeProps</code> 设置为 <code>[&#39;data&#39;]</code>，组件只会在数据发生变化时渲染，从而减少不必要的更新。</p><p>注意：<code>notifyOnChangeProps</code> 中指定的字段必须与组件实际使用的字段保持同步，否则某些字段变化时组件不会自动更新。</p><hr><h2 id="Tracked-Queries"><a href="#Tracked-Queries" class="headerlink" title="Tracked Queries"></a>Tracked Queries</h2><p>Tracked Queries 是 React Query 提供的功能，可以自动追踪组件渲染过程中使用到的字段：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> queryClient = <span class="keyword">new</span> <span class="title class_">QueryClient</span>(&#123;</span><br><span class="line">  <span class="attr">defaultOptions</span>: &#123;</span><br><span class="line">    <span class="attr">queries</span>: &#123;</span><br><span class="line">      <span class="attr">notifyOnChangeProps</span>: <span class="string">&#x27;tracked&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">QueryClientProvider</span> <span class="attr">client</span>=<span class="string">&#123;queryClient&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Example</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">QueryClientProvider</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>使用提示</strong>：</p><ul><li>使用对象解构时，要注意使用剩余运算符才能追踪所有字段：</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; isLoading, ...queryInfo &#125; = <span class="title function_">useQuery</span>(...)</span><br></pre></td></tr></table></figure><ul><li>Tracked Queries 只在渲染过程中生效，在 effect 中访问数据不会被追踪：</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 无法追踪</span></span><br><span class="line"><span class="title class_">React</span>.<span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(queryInfo.<span class="property">data</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确代码</span></span><br><span class="line"><span class="title class_">React</span>.<span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(queryInfo.<span class="property">data</span>);</span><br><span class="line">&#125;, [queryInfo.<span class="property">data</span>]);</span><br></pre></td></tr></table></figure><p>从 React Query v4 起，Tracked Queries 默认启用，可通过 <code>notifyOnChangeProps: &#39;all&#39;</code> 关闭。</p><h2 id="Structural-Sharing"><a href="#Structural-Sharing" class="headerlink" title="Structural Sharing"></a>Structural Sharing</h2><p>Structural Sharing 是 React Query 默认启用的另一项优化机制，它确保更新数据时保留未变更的数据引用，从而减少无意义的渲染。</p><p>举例：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;Learn React&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;active&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;Learn React Query&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;todo&quot;</span> &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>当我们将第一个待办的状态更新为 <code>done</code> 并后台 refetch：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;Learn React&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;done&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;Learn React Query&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;todo&quot;</span> &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>React Query 会只更新实际变动的数据引用，未变化的数据仍保持原引用，减少重复渲染。</p><p>使用 selector 可以部分订阅数据：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; data &#125; = <span class="title function_">useTodo</span>(<span class="number">2</span>); <span class="comment">// 只有 id 为 2 的数据变化时组件才会渲染</span></span><br></pre></td></tr></table></figure><p>可在 query 中设置 <code>structuralSharing: false</code> 关闭 Structural Sharing。</p><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><p><a href="https://tkdodo.eu/blog/practical-react-query">https://tkdodo.eu/blog/practical-react-query</a></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记：Tree Shaking</title>
      <link href="/treeshaking.html"/>
      <url>/treeshaking.html</url>
      
        <content type="html"><![CDATA[<p>Tree Shaking 的核心思想是：通过静态分析模块的导入&#x2F;导出关系，找出那些从未被实际使用的代码，并在最终产物中将其删除，从而减小打包体积、提升性能。<br>这个概念最早由 Rollup 推出，随后 Webpack 在 2.0 版本开始支持，如今已经是几乎所有构建工具的标配。</p><h2 id="为什么必须依赖-ES-Modules？"><a href="#为什么必须依赖-ES-Modules？" class="headerlink" title="为什么必须依赖 ES Modules？"></a>为什么必须依赖 ES Modules？</h2><p>Tree Shaking 的前提是 <strong>静态可分析性</strong>。<br>CommonJS 的 <code>require</code> 过于灵活（可以在运行时拼接路径、条件加载），构建工具无法在编译阶段完整确定模块依赖，因此无法精确删除未使用的代码。相比之下，ES Modules 的 import&#x2F;export 语法必须写在顶层，路径是字符串字面量，这让依赖关系在构建阶段就能完全确定。</p><p>举个例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不合法的 ES Module 写法（因此保证了静态可分析性）</span></span><br><span class="line"><span class="keyword">if</span> (condition) &#123;</span><br><span class="line">  <span class="keyword">import</span> &#123; foo &#125; <span class="keyword">from</span> <span class="string">&quot;./module&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种语法在 ESM 中直接报错，但在 CommonJS 中却是允许的。这也是为什么 Tree Shaking 只能在 ESM 下可靠运行。</p><h2 id="在-Webpack-中启用-Tree-Shaking"><a href="#在-Webpack-中启用-Tree-Shaking" class="headerlink" title="在 Webpack 中启用 Tree Shaking"></a>在 Webpack 中启用 Tree Shaking</h2><p>要让 Webpack 正确执行 Tree Shaking，需要满足几个条件：</p><ol><li>代码必须使用 ESM 语法（<code>import/export</code>），而不是 CommonJS。</li><li>生产模式：<code>mode: &quot;production&quot;</code>。</li><li>启用 usedExports：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">optimization</span>: &#123;</span><br><span class="line">  <span class="attr">usedExports</span>: <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>这一步会让 Webpack 标记哪些导出未被使用。</li><li>设置 sideEffects：在 <code>package.json</code> 中标记哪些文件有副作用。<ul><li>全部无副作用：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;sideEffects&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>仅样式文件有副作用：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;sideEffects&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;*.css&quot;</span><span class="punctuation">,</span> <span class="string">&quot;*.scss&quot;</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li>确保 Babel 不会把 ESM 转成 CommonJS，否则 Tree Shaking 会失效。</li></ol><p>同时，在代码层面也要注意避免整包导入，而是只引入需要的部分：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐（难以 shake 掉没用的代码）</span></span><br><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">&quot;lodash&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐（可被 tree shake）</span></span><br><span class="line"><span class="keyword">import</span> &#123; debounce &#125; <span class="keyword">from</span> <span class="string">&quot;lodash&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="Webpack-的实现原理"><a href="#Webpack-的实现原理" class="headerlink" title="Webpack 的实现原理"></a>Webpack 的实现原理</h2><p>Webpack 的 Tree Shaking 大体分为两个阶段：<strong>标记 (mark)</strong> 和 <strong>清除 (prune)</strong></p><ol><li>编译阶段 (Make&#x2F;Seal)<ul><li>Webpack 构建模块依赖图 (ModuleGraph)，收集所有导出。</li><li>判断哪些导出实际被引用，未使用的导出会被打上特殊注释（如 <code>/* unused harmony export foo */</code>）。</li></ul></li><li>生成阶段<ul><li>打包输出时，这些未使用的导出依然会保留，但带有注释标记。</li></ul></li><li>压缩阶段<ul><li>由 Terser 等工具读取这些标记，真正删除无用代码。</li></ul></li></ol><p>这种设计的好处是：Webpack 本身只做“分析+标记”，而“删除”交给压缩器处理，两者解耦。</p><h2 id="FlagDependencyExportsPlugin-与-ModuleGraph"><a href="#FlagDependencyExportsPlugin-与-ModuleGraph" class="headerlink" title="FlagDependencyExportsPlugin 与 ModuleGraph"></a>FlagDependencyExportsPlugin 与 ModuleGraph</h2><p>Webpack 内部有个核心插件 <code>FlagDependencyExportsPlugin</code>，负责分析每个模块的导出信息并写入缓存。<br>它依赖于 <strong>ModuleGraph</strong> 这个数据结构来记录模块之间的依赖关系和导出使用情况。</p><p>每个导出的信息里会包含：</p><ul><li>是否真的导出了该变量 (<code>provided</code>)</li><li>是否被其他模块使用 (<code>used</code>)</li><li>是否允许重命名压缩 (<code>canMangle</code>)</li><li>是否重定向自其他模块 (<code>from</code>)</li></ul><p>特别是 <code>canMangle</code> 字段：</p><ul><li>如果是内部函数、常量等，可以安全地压缩成短变量名。</li><li>如果是库对外暴露的 API，则必须保留原始名字，避免破坏外部调用。</li></ul><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>有如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// moment.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> moment = <span class="string">&quot;moment&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; moment &#125; <span class="keyword">from</span> <span class="string">&quot;./moment&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> foo = <span class="string">&quot;foo&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> bar = <span class="string">&quot;bar&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">&quot;foo-bar&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(moment);</span><br></pre></td></tr></table></figure><p>在开发模式下打包后，Webpack 会给未使用的导出加上注释：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* unused harmony exports bar, foo */</span></span><br><span class="line"><span class="comment">/* unused harmony default export */</span></span><br></pre></td></tr></table></figure><p>只有 <code>moment</code> 被识别为真正使用。到了生产模式下，Terser 就会据此移除无用代码，最终产物只包含 <code>moment</code> 的部分。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>必须使用 ESM，因为它保证了依赖关系的静态可分析性。</li><li>Webpack 分两步走：标记未使用导出 → 压缩阶段清理。</li><li>内部依赖于 ModuleGraph 和 FlagDependencyExportsPlugin 来精确追踪导出和使用关系。</li><li>合理使用 sideEffects 和按需导入，才能让 Tree Shaking 发挥最大效果。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>麻倉ももLive Tour ChouChou名古屋公演紀行</title>
      <link href="/september_travel_2.html"/>
      <url>/september_travel_2.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-当選"><a href="#1-当選" class="headerlink" title="1.当選"></a>1.当選</h2><h2 id="2-簽證"><a href="#2-簽證" class="headerlink" title="2. 簽證"></a>2. 簽證</h2><p>工签→在留カード</p><h2 id="3-機票"><a href="#3-機票" class="headerlink" title="3. 機票"></a>3. 機票</h2><p><strong>往</strong><br>国航 9.22（日）<br>名古屋 &#x3D;&gt; 上海</p><h2 id="4-酒店"><a href="#4-酒店" class="headerlink" title="4. 酒店"></a>4. 酒店</h2><p>東横イン　名古屋丸の内　4泊</p><h2 id="5-行李"><a href="#5-行李" class="headerlink" title="5. 行李"></a>5. 行李</h2><h2 id="6-推し活"><a href="#6-推し活" class="headerlink" title="6. 推し活"></a>6. 推し活</h2><p>食べる！<br>＊エビフライサンド<br>＊味仙<br>＊風来坊</p><h2 id="7-遊記"><a href="#7-遊記" class="headerlink" title="7. 遊記"></a>7. 遊記</h2><h3 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h3><p>いい席だ多分<br>14いいぞ<br>疯批少</p><p>梦幻。太幸福了。一切都是值得的。<br>又一次フラフラ地出去了。</p><p>もしもしのダンス太可爱了！！！！！！<br>MOMOは絶品だ！！！！！！<br>身に染みるなぁ</p><p>アンコールのMCは神<br>普通に食べて我々に歌えろって、凄くない！？<br>も:「地獄映像」</p><p>ピンキーフックも。雑草ならみんな身に染みる！！！<br>声優ライブはいいぞ 別の良さ</p><p>365LOVE 😭これは…これは…！！！<br>後半一気に神だ</p><p>遺伝子に刻まれてます。</p><p>ミリオンでヤンデレの話も。<br>(そういえば俺のharddiskどうなっちゃうの？)</p><p>今回はソロ初参戦 こんなに楽しかったとは</p><p>最高の幸せや！</p><p>服変えた後、普通に乳揺れ見れますよ<br>ももちゃんdanceマジで綺麗やな</p><p>セトリ予習だ</p><p><strong>セトリ</strong><br><strong>M1</strong> あそびちゅう<br><strong>M2</strong> Sweet Essence<br><strong>M3</strong> 365 LOVE もう発狂</p><p><strong>M4</strong> もしもし 綺麗なダンス！<br><strong>M5</strong> トキメキ 予習<br><strong>M6</strong> シュワワ 予習</p><p>（このブロックは…）<br><strong>M7</strong> bouquet<br><strong>M8</strong> Twinkle Love ももちゃん歌お上手だよ<br><strong>M9</strong> 嫌いにならない<br><strong>M10</strong> LIBRA 舞台雰囲気すごいぞ</p><p>（新衣装！）<br><strong>M11</strong> HIT NUMBER<br><strong>M12</strong> 幸せって書いて 二回目だよ<br><strong>M13</strong> ピンキーフック 馴染みますな<br><strong>M14</strong> 秘密 予習してよかった</p><p>（次神コー）<br><strong>M15</strong> パンプキンミートパイ<br><strong>M16</strong> Muted Peony<br><strong>M17</strong> カラフル 予習<br><strong>M18</strong> 妄想メルヘン 予習<br><strong>M19</strong> Fanfare MOMO本物のMOMO半端ないぞ</p><p><strong>EN1</strong> 満開<br>MC<br>伝説のMCだ！！<br><strong>EN2</strong> Wonderland</p><p>ももちゃん的控场能力半端ないわ<br>時々超美人に見えるよぉ😭辛い</p><p>MOMOはホントやばいぞ！！</p><h3 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h3><p>予習大事や でも今映像がない 辛い<br>妄想メルヘンまず予習しろ<br>365は映像あり<br>もしもしのダンスマジ綺麗！！！<br>シュワワもダンス</p><p>幸せって書いて これもなんとなく。歌詞注意<br>ピンキー 馴染んでるけどまだまだ</p><p>パンプキンミートパイ 映像ないけどMV見よう<br>カラフル MV<br>トクイチ 意外と映像ないね。じゃあMV？<br>Fanfare</p><p>満開も要注意や でも今Piacereの映像がない……</p><p>次福岡は超近距離だぞ 絶対準備しろ！</p><p>（俺の映像たちよ…😭）</p><p>到底不是老粉，哎。比下去了。<br>但是看到ももちゃん的时间就是最幸福的！！！</p><p>生MOMOやべーよ<br>後半の新衣装も見ろ！！！</p><p>今日のカエルはマジ地獄だぞw</p><p>じゃあ私リップ塗ってくるから勝手に歌ってて(○・▽・○)<br>昨日めっちゃ汚い声だったのに綺麗になってる！まさか…練習した？(○・▽・○)</p><p>福岡朝聖しよう！！！</p><p>味仙 台湾拉面</p><p>二着目はやべえぞ<br>もしもしのダンスもう一度見たい！</p><p>ももちゃん是幻象<br>回到现实，那是什么<br>所以，复杂的心情<br>まあこれでいいんだよ</p><p>アカペラパートビビるなぁ<br>ももちゃん歌上手いぞ</p><p>辛さの源泉：世界一の女を独り占めできないっと</p><p>摆脱孤独的方法是，恢复原有的爱好。<br>动漫看起来！</p><p>品尝孤独也是我的特长了。</p><p>LIBRAの表情覚える？<br>あの不気味さ</p><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>Sweet Essence ハートとポーズ<br>365 LOVE MV見ろ</p><p>もしもし　もっと！もっと！手伸出去再回来<br>トキメキ　MV見ろ<br>シュワワ　MV見ろ、クラップ</p><p>バラードブロック</p><p>HIT GIRL NUMBER バンバンバン命中！<br>幸せ　振りコピしろ<br>ピンキーフック　平常運転を刻んで</p><p>パンプキン<br>Muted Peony ふりふりのポーズ〜<br>カラフル　予習しろ<br>妄想メルヘン　予習しろ<br>Fanfare　大好き！</p><p>満開</p><h3 id="後日談"><a href="#後日談" class="headerlink" title="後日談"></a>後日談</h3><p>味仙<br>こんな辛い奴食べるなんて ももちゃんも相当やばい女<br>変な想像するよ〜<br>台湾ラーメン&#x3D;名古屋ラーメン</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 麻倉もも </tag>
            
            <tag> 巡礼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyGO!!!!!6thライブ紀行</title>
      <link href="/july_travel.html"/>
      <url>/july_travel.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-当選"><a href="#1-当選" class="headerlink" title="1.当選"></a>1.当選</h2><p>公演名　　　：　ＭｙＧＯ！！！！！<br>会場名　　　：　武蔵野の森総合スポーツプラザ　メインアリーナ<br>席種枚数<br>＜第１希望＞<br>　抽選結果　　当選<br>　公演日時　　：　2024&#x2F;07&#x2F;27(土) 17：00開場 18：00開演<br>　席種・料金　：　Ｓ席 \19,800×1枚［チケット料金］＋\660×1枚［サービス料］</p><p>公演名　　　：　ＭｙＧＯ！！！！！<br>会場名　　　：　武蔵野の森総合スポーツプラザ　メインアリーナ<br>席種枚数<br>＜第１希望＞<br>　抽選結果　　当選<br>　公演日時　　：　2024&#x2F;07&#x2F;28(日) 16：00開場 17：00開演<br>　席種・料金　：　Ｓ席 \19,800×1枚［チケット料金］＋\660×1枚［サービス料］</p><h2 id="2-簽證"><a href="#2-簽證" class="headerlink" title="2. 簽證"></a>2. 簽證</h2><p>三年多次・記録簡化</p><h2 id="3-機票"><a href="#3-機票" class="headerlink" title="3. 機票"></a>3. 機票</h2><p><strong>往</strong><br>春秋+<del>Peach</del>JAL 7.26（金）<br>上海 &#x3D;&gt; 福岡 &#x3D;&gt; 東京</p><p><strong>返</strong><br>春秋+Peach 7.30（火）<br>東京 &#x3D;&gt; 福岡 &#x3D;&gt; 上海</p><p>＊初乗継便<br>＊めっちゃ羽目に落ちたわ、もう次はないね。</p><h2 id="4-酒店"><a href="#4-酒店" class="headerlink" title="4. 酒店"></a>4. 酒店</h2><p>宿名：L stay &amp; grow南砂町<br>宿泊日数：3泊</p><ol><li>安（東京比）</li></ol><p>評：居住区だからか、環境は靜謐。ルームも面積広いし居心地良い。好評。<br><del>次東東京何かイベントあったらここにしようかな。</del></p><h2 id="5-行李"><a href="#5-行李" class="headerlink" title="5. 行李"></a>5. 行李</h2><h3 id="Checklist1"><a href="#Checklist1" class="headerlink" title="Checklist1"></a>Checklist1</h3><ul><li><input checked="" disabled="" type="checkbox"> 耳塞</li><li><input checked="" disabled="" type="checkbox"> 香水</li><li><input checked="" disabled="" type="checkbox"> 垃圾袋</li></ul><h3 id="Checklist2"><a href="#Checklist2" class="headerlink" title="Checklist2"></a>Checklist2</h3><ul><li><input checked="" disabled="" type="checkbox"> ブレイド</li><li><input checked="" disabled="" type="checkbox"> ほうぴ</li><li><input checked="" disabled="" type="checkbox"> タオル</li></ul><h2 id="6-推し活"><a href="#6-推し活" class="headerlink" title="6. 推し活"></a>6. 推し活</h2><p>ももちゃんLIBRA巡礼</p><h2 id="7-遊記"><a href="#7-遊記" class="headerlink" title="7. 遊記"></a>7. 遊記</h2><h3 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h3><p>香港から帰国。上海出入境はもう常連やね笑。</p><p>春秋航空とかいう落差。</p><p>福岡＋チョンとかいう地獄。</p><p>荷物忘れた！とかいうもっと地獄。</p><p>最後はJALに献金。グダグダ、狼狽不堪。</p><p>しかも羽田空港…→江東区へ。</p><p>ようやく南砂町に。</p><p>結論から言うと、もう二度とこんな地獄味わいたくない。</p><h3 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h3><p>朝っぱらグッズ列待機。へー賑やかだな。</p><p>まずCD販売所、当たった！喜んだが、意外と実感湧いてこないかも。まあすごく嬉しいのは確かだよ。</p><p>MyGO!!!!!を追うのは、音楽だけですから。もうキャスト愛は大半消えたのだ。</p><p>Tシャツ列、トイ列、まあ。<br>飲み物、ふーん。<br>焼きそば！アニメのその「焼きそば」！味は、日本では希少な炭水化物の味だ。</p><p>暇な午後。ドサ回りした。レインコート買ったり捨てたり草。<br>これが趣味なんだよ（苦笑）<br>会場の問題だ。武蔵野あたりはマジでだるいな。</p><p>入場。<br>神席！！！青木正対面。<br>ライブ前の高揚感はホント好き。</p><p>流石に4回目は色々慣れてきたって感じ。終わった後の寂しさにも耐えられてきた。寧ろ感想が短くなった。良いことやら悪いことやら。</p><h3 id="day3"><a href="#day3" class="headerlink" title="day3"></a>day3</h3><p>午前はももちゃんLIBRA巡礼だ！<br>渋谷の歩道橋、あの跨線人道橋、二子玉川公園。<br>ももちゃん、身近く感じる！！！<br>ベンチに座ろうっと(o・∇・o)</p><p>そして会場へ。<br>会場前なのに、なんか眠い…<br>まあ開演したら全てが飛ばすんだ。</p><p>自分にこう言う：ライブ始めたらこの数日の全ての地獄がどうでもいいと思えるようになった。</p><p>2日目も終わった。本当に終わった。<br>寂しい気持ちがあるのも当然。<br>帰りたくないのも当然。<br>でも、帰るんだ。</p><p>この失落感こそ、日本に行く最大の原動力だ。</p><p><img src="https://imgur.com/0aiLxqC.jpg"></p><h3 id="day4"><a href="#day4" class="headerlink" title="day4"></a>day4</h3><p>いやいやな帰り。<br>消えろ**豚。</p><h2 id="8-反省点"><a href="#8-反省点" class="headerlink" title="8. 反省点"></a>8. 反省点</h2><p>＊乗継便リスク高すぎ。<br>＊LCCも実は安くない。<br>＊<strong>行李轉盤！</strong></p><p>＊家虎しないのだ。</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 巡礼 </tag>
            
            <tag> MyGO!!!!! </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香港紀行</title>
      <link href="/july_hongkong_travel.html"/>
      <url>/july_hongkong_travel.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-通行證"><a href="#1-通行證" class="headerlink" title="1. 通行證"></a>1. 通行證</h2><p>團體旅遊簽注。實際操作中與個人旅遊同。</p><h3 id="续签"><a href="#续签" class="headerlink" title="续签"></a>续签</h3><p>自助簽注機。</p><h2 id="1-机票"><a href="#1-机票" class="headerlink" title="1. 机票"></a>1. 机票</h2><p><strong>往</strong><br>港航 7.23（火）<br>上海 &#x3D;&gt; 香港</p><p><strong>返</strong><br>港航 7.26（金）<br>香港 &#x3D;&gt; 上海</p><p>＊上海to深圳は別に安くないね</p><h3 id="香港入境"><a href="#香港入境" class="headerlink" title="香港入境"></a>香港入境</h3><p><del>1. 填写入境卡（入境一張，出境一張）</del></p><ol><li>上海刷港澳通行证出境时，同时要扫登机牌</li><li>香港入境时，签注面平放朝上扫码</li></ol><h2 id="2-酒店"><a href="#2-酒店" class="headerlink" title="2. 酒店"></a>2. 酒店</h2><p>宿名：K＆B ホステル<br>宿泊日数：3泊</p><ol><li>ホテルじゃなくてShare House。どういうことやら…</li><li>結論というと、小さすぎる。まあ九龍だから仕方ない。位置が良いんだよ。</li></ol><h2 id="3-銀行辦卡"><a href="#3-銀行辦卡" class="headerlink" title="3. 銀行辦卡"></a>3. 銀行辦卡</h2><h3 id="匯豐銀行（新界葵芳分行）"><a href="#匯豐銀行（新界葵芳分行）" class="headerlink" title="匯豐銀行（新界葵芳分行）"></a>匯豐銀行（新界葵芳分行）</h3><ol><li>材料：身分證、港澳通行證、過關白條</li><li>申請理由：日元储蓄</li><li><del>額外材料：地址證明（信用卡帳單）、工牌</del></li><li>另申请Red信用卡和万事达扣賬卡（&#x3D;Debit Card）。</li></ol><h3 id="中国銀行（香港）"><a href="#中国銀行（香港）" class="headerlink" title="中国銀行（香港）"></a>中国銀行（香港）</h3><p>拒。</p><h2 id="4-香港電話卡"><a href="#4-香港電話卡" class="headerlink" title="4. 香港電話卡"></a>4. 香港電話卡</h2><p>（偽）鴨聊佳 $98 10GB 365日</p><h2 id="5-禮儀"><a href="#5-禮儀" class="headerlink" title="5. 禮儀"></a>5. 禮儀</h2><p>＊Sorry.<br>＊Thank you.</p><h2 id="6-交通"><a href="#6-交通" class="headerlink" title="6. 交通"></a>6. 交通</h2><p>八達通Everywhere.</p><h3 id="機場快綫"><a href="#機場快綫" class="headerlink" title="機場快綫"></a>機場快綫</h3><p>＊進站時不需要刷卡</p><h3 id="巴士"><a href="#巴士" class="headerlink" title="巴士"></a>巴士</h3><p>＊前門上，滴一次</p><h2 id="7-遊記"><a href="#7-遊記" class="headerlink" title="7. 遊記"></a>7. 遊記</h2><h3 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h3><p>高速鉄道。シナ豚民度最悪。</p><p>軽く上海昼遊。外灘の昼風景。</p><p>香港航空。小型蛙顔乗務員さん可愛いね。</p><p>香港海低空飛行。綺麗な夜景、しかも光物だらけではなく、遠くのビルと近くの山、程よくバランスだ。</p><p>入国手続き。情報バラバラすぎて草。これだからシナ豚は…実際入国カードではなくて通行証だけで通るんだよ。</p><p>香港は左行だけど実際のところ右行が多い気がする。</p><p>空港線降りてバス。香港の都市夜景。</p><p>チェックイン。日本人のフリをしてワロタ。まあこのくらい良いじゃないか。</p><p>じゃあ近くに回ろう。いわゆる香港の夜市。うん、あんまり興味湧いてないな、カニとかエビとか屋台とか、シナ物と変わんない気がする。マックを一味。そして二度漬に牛肉定食に。マック、定食屋、711、どれも交流がグダグダすぎ、なんか初めて日本行った時の嫌な記憶を思い出した。</p><p>その夜、礼儀に関して、英語に関して、猛回想したわ。</p><h3 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h3><p>HSBC銀行カード、余裕よ。ほぼなんの問題もないね。</p><p>九龍の定番風景は、「鴿子籠」ですかね。なんか幾何の美笑。</p><p>昼ごはんは「焗飯」だ！新鮮ですね、まあまあ美味い。</p><p>午後は九龍遊。女人街、旺角、へー、こういうところなんだって。なんかうち田舎でもこんな市場あるよーって（笑）。老港風、これが今**流行ってる国潮風は源泉か、急に釈然した。</p><p>次は「信和中心」。二次元濃度超絶濃いな。CD Shopに普通に女性声優関連商品がいる、初めて海外でTrySailが見つけた！途中に有馬かなの（安い）フィギュア発見、あのスカートの裏には…？のを耐えられなくてやっぱ買った。（追記：ちゃんとパンツ見えてて興奮）</p><p>そして夜。香港の夜。ビクトリア港。遊人如織、でも確かに高揚感あるな。香港の夜景、それは上海でもない東京でもない、この島だけの清々しい風景だ。</p><p>夜は急に暴食気分、なぜなんだろうね。</p><h3 id="day3"><a href="#day3" class="headerlink" title="day3"></a>day3</h3><p>香港島！</p><p>やっぱ建物違うわい。世界金融センターってやつか。</p><p>ビクトリア公園。まあ。閑話休題。</p><p>東港島公園。まだ人が少ない場所だ。やっぱ人多い観光スポットに苦手。海は綺麗よ。まあ汚いのは**だけですかね。</p><p>ふらふらして、香港大学に行く。意外と予約制、じゃあ山を適当に巡る。アッツ！暑すぎる、しかも山道…なんの苦行か。でも西洋風建築好き。</p><p>ようやく降りて電車乗って中環へ。太平山頂に？**豚群れすぎて、絶対無理。</p><p>Very very tierd.燃え尽くした。旅館で時間潰す。</p><p>深夜覓食。クレカ使えないというトラブル。香港の印象はもう負。</p><p>まあこんなもんか。</p><h3 id="day4（朝）"><a href="#day4（朝）" class="headerlink" title="day4（朝）"></a>day4（朝）</h3><p>ギリギリ搭乗。飛行機という移動手段にはめっちゃ言いたいことがある。</p><h3 id="評"><a href="#評" class="headerlink" title="評"></a>評</h3><p>4日3泊、今思えばちょっと長いかな。<br>香港にはなんも思えないかも、むしろアニメ関連じゃなきゃ、僕はもうそんな旅行熱心じゃないです。<br>人々の生活が、「もし共産党支配しなかったら」の<strong>人　な気がします。<br>最近国内の漢方薬、国潮風にも、釈然した。なんだ、ここ発祥かって。<br>明らかに</strong>要素が増えている。現時点はあんま影響な見えないが、将来的には、香港は、東南アジアの香港ではなく、<br>**の香港になるかも。</p><p>そもそも一般人の生活は僕に向いてない気がします。九龍の居住条件はあんまりにも酷い。葵芳あたりも同じ古いビル。まあ。しかも物理的に暑。無理ゲーだわ。</p><p><strong>補敘</strong></p><p>信息收集太困难了。**人港人湾友本友各不相同，如何是好。</p><p>重新审视了**近几年的潮流，嘛，原来罪魁祸首在这里。早年女人街风格也是来自这里么。</p><p>色彩。鸽子笼。夜景。几个印象。</p><p>我本质上是对香港没有兴趣的。所以此旅既无文化意义，于是只好随人潮。最终结果还好，只去了九龙南这一个**聚集地。太平山顶终于放弃。背包客自有背包客的乐趣。</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 香港 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eventer向配信教程</title>
      <link href="/%E4%BA%8C%E6%AC%A1%E5%85%83Eventer%E7%9A%84%E9%85%8D%E4%BF%A1.html"/>
      <url>/%E4%BA%8C%E6%AC%A1%E5%85%83Eventer%E7%9A%84%E9%85%8D%E4%BF%A1.html</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>二次元Eventer，姑且这么称呼。似乎还没有形成一个稳定庞大的社区，多数人喜欢沉浮在各大Q群中，情报内部流转。那么对于不加群的人，想找到相关信息就非常困难了。</p><p>这里分享一些个人掌握的信息。</p><p>现地看这里：<a href="http://localhost:4000/japan_anime_travel.html">http://localhost:4000/japan_anime_travel.html</a></p><h2 id="一、配信抓源"><a href="#一、配信抓源" class="headerlink" title="一、配信抓源"></a>一、配信抓源</h2><p>一般我的习惯是：</p><ul><li>先用<code>yt-dlp</code>试试，能不能直接下载</li><li>abema、niconico这两个网站，个人习惯用<code>minyami</code>(<a href="https://github.com/Last-Order/Minyami">https://github.com/Last-Order/Minyami</a>)</li><li>除<code>yt-dlp</code>之外，还可以使用<code>猫抓</code>(<a href="https://github.com/xifangczy/cat-catch">https://github.com/xifangczy/cat-catch</a>)</li></ul><p>个人目前使用的所有配信网站，使用上述三个工具都可以成功下载。</p><p>其他常用工具：</p><ul><li>ffmpeg</li><li>N_m3u8DL-RE(<a href="https://github.com/nilaoda/N_m3u8DL-RE">https://github.com/nilaoda/N_m3u8DL-RE</a>)</li><li>shaka-packger(<a href="https://github.com/shakacode/shakapacker">https://github.com/shakacode/shakapacker</a>)</li></ul><h2 id="二、widevine-DRM破解"><a href="#二、widevine-DRM破解" class="headerlink" title="二、widevine DRM破解"></a>二、widevine DRM破解</h2><p>抓源是非常简单的操作了。但是有的网站开了widevine加密，即使抓到了源，也会发现信息被加密，播放时候一堆乱码。</p><h3 id="2-0-背景知识"><a href="#2-0-背景知识" class="headerlink" title="2-0 背景知识"></a>2-0 背景知识</h3><p>日本各大配信平台目前的主流加密方式是widevine L3。是软件层的加密。像美国的网飞、Disney+使用的是widevine L1，硬件级别的加密，破解起来十分困难。相比之下，widevine L3的破解已经非常成熟和无脑了。</p><p>破解widevine L3需要一个叫CDM的文件，可以理解为解密的钥匙。CDM来自于已Root的安卓手机或者各安卓模拟器。</p><h3 id="2-1-最简单的方式"><a href="#2-1-最简单的方式" class="headerlink" title="2-1 最简单的方式"></a>2-1 最简单的方式</h3><p>使用这个伟大的扩展：<a href="https://github.com/DevLARLEY/WidevineProxy2">https://github.com/DevLARLEY/WidevineProxy2</a></p><p>这个扩展安装以后，需要自己指定CDM的路径。项目仓库的readme给出了一些公开的CDM，也可以直接指定remote.json，相当于0配置。</p><p>勾选use shaka packager，可执行文件路径填 N_m3u8DL-RE 即可。</p><h3 id="2-2-获取你自己的CDM"><a href="#2-2-获取你自己的CDM" class="headerlink" title="2-2 获取你自己的CDM"></a>2-2 获取你自己的CDM</h3><p>如果不想用网上公开的CDM，希望有自己的CDM，可以看这里：</p><p><a href="https://forum.videohelp.com/threads/408031-Dumping-Your-own-L3-CDM-with-Android-Studio">https://forum.videohelp.com/threads/408031-Dumping-Your-own-L3-CDM-with-Android-Studio</a></p><p>如果像我一样使用macOS，可以再多看一眼这个文章：</p><p><a href="https://muneakira6.github.io/DRM.html">https://muneakira6.github.io/DRM.html</a></p><p>成功操作的话，会获得<code>client_id.bin</code> 和 <code>private_key.pem</code> 这两个文件。可以执行以下脚本获取更常用的<code>device.wvd</code>文件。需要先安装<code>pywidevine</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> <span class="keyword">from</span> pywidevine.device <span class="keyword">import</span> Device, DeviceTypes</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="comment"># e.g., for an Android L3:</span></span><br><span class="line">device = Device(</span><br><span class="line">    type_=DeviceTypes.ANDROID,</span><br><span class="line">    security_level=<span class="number">3</span>,</span><br><span class="line">    flags=<span class="literal">None</span>,</span><br><span class="line">    private_key=Path(<span class="string">r&quot;./private_key.pem&quot;</span>).read_bytes(),</span><br><span class="line">    client_id=Path(<span class="string">r&quot;./client_id.bin&quot;</span>).read_bytes()</span><br><span class="line">)</span><br><span class="line"><span class="comment"># save it to a .wvd file for easier loading next time</span></span><br><span class="line">device.dump(<span class="string">r&quot;./device.wvd&quot;</span>).device <span class="keyword">import</span> Device, DeviceTypes</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="comment"># e.g., for an Android L3:</span></span><br><span class="line">device = Device(</span><br><span class="line">    type_=DeviceTypes.ANDROID,</span><br><span class="line">    security_level=<span class="number">3</span>,</span><br><span class="line">    flags=<span class="literal">None</span>,</span><br><span class="line">    private_key=Path(<span class="string">r&quot;./private_key.pem&quot;</span>).read_bytes(),</span><br><span class="line">    client_id=Path(<span class="string">r&quot;./client_id.bin&quot;</span>).read_bytes()</span><br><span class="line">)</span><br><span class="line"><span class="comment"># save it to a .wvd file for easier loading next time</span></span><br><span class="line">device.dump(<span class="string">r&quot;./device.wvd&quot;</span>)</span><br></pre></td></tr></table></figure><p>提取出自己的wvd文件以后，可以继续使用WidevineProxy2加载这个文件使用。也可以自己写脚本抓源破解。</p><h3 id="2-3-写脚本"><a href="#2-3-写脚本" class="headerlink" title="2-3 写脚本"></a>2-3 写脚本</h3><p>与其讲解，不如直接放代码。下面是用来获取lemino上某视频的代码。需要自己准备 PSSH 和 challenge URL。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pywidevine.cdm <span class="keyword">import</span> Cdm</span><br><span class="line"><span class="keyword">from</span> pywidevine.device <span class="keyword">import</span> Device</span><br><span class="line"><span class="keyword">from</span> pywidevine.pssh <span class="keyword">import</span> PSSH</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># prepare pssh</span></span><br><span class="line">pssh = PSSH(<span class="string">&quot;AAAAWXBzc2gAAAAA7e+LqXnWSs6jyCfc1R0h7QAAADkSEOYdj2TadksnpIvFVywqce0aDXdpZGV2aW5lX3Rlc3QiEPR0I5eZdEKvsvQ4vdFlEsJI49yVmwY=&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># load device</span></span><br><span class="line">device = Device.load(<span class="string">&quot;./device.wvd&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># load cdm</span></span><br><span class="line">cdm = Cdm.from_device(device)</span><br><span class="line"></span><br><span class="line"><span class="comment"># open cdm session</span></span><br><span class="line">session_id = cdm.<span class="built_in">open</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># get license challenge</span></span><br><span class="line">challenge = cdm.get_license_challenge(session_id, pssh)</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;accept-language&quot;</span>: <span class="string">&quot;ja,en-US;q=0.9,en;q=0.8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;acquirelicenseassertion&quot;</span>: <span class="string">&quot;XXX&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cache-control&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">    <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;https://lemino.docomo.ne.jp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pragma&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">    <span class="string">&quot;priority&quot;</span>: <span class="string">&quot;u=1, i&quot;</span>,</span><br><span class="line">    <span class="string">&quot;referer&quot;</span>: <span class="string">&quot;https://lemino.docomo.ne.jp/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua&quot;</span>: <span class="string">&#x27;&quot;Chromium&quot;;v=&quot;134&quot;, &quot;Not:A-Brand&quot;;v=&quot;24&quot;, &quot;Microsoft Edge&quot;;v=&quot;134&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua-mobile&quot;</span>: <span class="string">&quot;?0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua-platform&quot;</span>: <span class="string">&#x27;&quot;macOS&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;sec-fetch-dest&quot;</span>: <span class="string">&quot;empty&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-fetch-mode&quot;</span>: <span class="string">&quot;cors&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-fetch-site&quot;</span>: <span class="string">&quot;same-site&quot;</span>,</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36 Edg/134.0.0.0&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">licence = requests.post(<span class="string">&quot;https://drm.lemino.docomo.ne.jp/widevine_license&quot;</span>, data=challenge, headers=headers)</span><br><span class="line">licence.raise_for_status()</span><br><span class="line"></span><br><span class="line"><span class="comment"># parse license challenge</span></span><br><span class="line">cdm.parse_license(session_id, licence.content)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print keys</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> cdm.get_keys(session_id):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[<span class="subst">&#123;key.<span class="built_in">type</span>&#125;</span>] <span class="subst">&#123;key.kid.<span class="built_in">hex</span>&#125;</span>:<span class="subst">&#123;key.key.<span class="built_in">hex</span>()&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># close session, disposes of session data</span></span><br><span class="line">cdm.close(session_id)</span><br></pre></td></tr></table></figure><p>执行成功的话，控制台会出现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[CONTENT]aaa:bbb</span><br></pre></td></tr></table></figure><p>aaa:bbb就是我们所需要的key了。</p><p>手持这个key，就可以使用 N_m3u8DL-RE 下载了。需要找到在线mpd文件的url，有时需要请求头里带cookie。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./N_m3u8DL-RE -M format=mp4 <span class="string">&quot;https://vod-cdn0.lemino.docomo.ne.jp/video/l0m8/8a/l0m88aj8wi/20250326232640/manifest.mpd?resolution=1080&amp;fixed=0&quot;</span> --key <span class="string">&quot;aaa:bbb&quot;</span> --use-shaka-packager -sv best -sa best</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eventer向日旅教程</title>
      <link href="/japan_anime_travel.html"/>
      <url>/japan_anime_travel.html</url>
      
        <content type="html"><![CDATA[<p><strong>序</strong><br>日本旅游本不是难事。但是，<br>面向二次元Eventer的；<br>面向小镇做题家的；<br>这样的教程就很少了。</p><p>本篇会假定读者已经有一定的日语听说能力（不然你浓度能高到去现场看Live？）。</p><h2 id="0-日本票务"><a href="#0-日本票务" class="headerlink" title="0. 日本票务"></a>0. 日本票务</h2><p>海淘参考这里：<a href="https://muneakira6.github.io/haitao.html">https://muneakira6.github.io/haitao.html</a></p><p>票务参考这里：<a href="https://muneakira6.github.io/japan_ticket.html">https://muneakira6.github.io/japan_ticket.html</a></p><p>三大票务平台<code>eplus</code> <code>ローチケ</code> <code>ぴあ</code>。<br>註册各平台帐号，最好的办法仍然是拥有一个日本手机号。但是从未去过日本的人想获得一个手机号是非常困难的，你可以：</p><ul><li>找淘宝代註册帐号</li><li>先行购买cmlink的语音电话卡，然后在落地日本后激活，然后回国前给客服发邮件申请开通国际漫游。这样你就拥有一个可在**收发短信的日本手机号了。<br>cmlink教程→<a href="https://www.ptt.cc/bbs/YuzuruHanyu/M.1697035883.A.7E6.html">https://www.ptt.cc/bbs/YuzuruHanyu/M.1697035883.A.7E6.html</a></li></ul><p>有一个死循环：想要抽选，需要日本手机号；想要日本手机号，需要人去过日本；抽不到票，去日本干嘛？</p><p>如果你的抽票平台是<code>ローチケ</code>的话没有这个问题，<code>ローチケ</code>抽选时不验证手机号，只在发券时验证。如果你是其他平台，第一次的话确实很麻烦。</p><p>如何参加抽选，此处略去不讲。本篇假定读者有一定的日语能力，想必您参照官方指南都可以成功参加。</p><h2 id="1-签证和入境"><a href="#1-签证和入境" class="headerlink" title="1. 签证和入境"></a>1. 签证和入境</h2><p>日本旅游签证分为三类。单次、三年、五年。<br>只支持旅行社代办，去淘宝找旅行社吧。<br>以下条件截至2024.6.18适用于上海领区，其余地区可能有微小变化。</p><h3 id="单次签证"><a href="#单次签证" class="headerlink" title="单次签证"></a>单次签证</h3><p>＊时长：办理后90天内一次有效，一次最长可停留15天<br>＊办理条件（满足任意一项）：</p><ul><li>学历简化：在校或者毕业3年以内的本科生</li><li>财产简化：过去一年每月平均工资8000元以上&#x2F;总缴税800元以上</li><li>财产简化：银行存款10万以上</li><li>财产简化：信用卡等级金卡或白金卡（伪白金不算）</li><li>沪爷简化：略</li></ul><p>一些细节：<br>在校生需要提供在校证明，在职人员需要提供在职证明。如果你的公司是典型的**企业，小老板咕噜咕噜不愿意开在职证明的话，可选择【银行存款简化】或【信用卡金卡简化】，可以用税单代替在职证明（适用于上海中青旅）。<br>签证申请表上需要填航班酒店，这个信息不要求必须和实际情况一致。只需要填写现实中存在的任意航班和酒店即可。<br>各项材料必须是申请签证前3个月内颁发的。</p><h3 id="三年多次"><a href="#三年多次" class="headerlink" title="三年多次"></a>三年多次</h3><p>＊时长：三年内可多次停留，一次最长停留30天，一个自然年内停留不超过180天<br>＊办理条件（满足任意一项）：</p><ul><li>纪录简化：过去3年有两次以上日本出入境纪录的，可以凭纪录直接升。（<strong>通过学历简化办理的签证不算次数</strong>）</li><li>财产简化：过去一年每月平均工资17000元以上&#x2F;总缴税2万元以上</li><li>财产简化：银行存款50万以上</li></ul><h3 id="五年多次"><a href="#五年多次" class="headerlink" title="五年多次"></a>五年多次</h3><p>＊时长：五年内可多次停留，一次最长停留90天，一个自然年内停留不超过180天<br>＊办理条件（满足任意一项）：</p><ul><li>富哥专属。略。</li></ul><h3 id="出签后"><a href="#出签后" class="headerlink" title="出签后"></a>出签后</h3><p>日本单次签证已全部改成电子签。最终的签证形式是一个pdf文件，扫描其上二维码可确认个人信息。</p><h3 id="入境前"><a href="#入境前" class="headerlink" title="入境前"></a>入境前</h3><p>填写<code>电子入境卡（Visit Japan Web, VJW）</code>。<a href="https://www.vjw.digital.go.jp/">https://www.vjw.digital.go.jp/</a><br>不填写电子入境卡的话，可以选择填写纸质入境卡。在入境日本的航班上空乘会问你要不要。</p><h3 id="入关流程"><a href="#入关流程" class="headerlink" title="入关流程"></a>入关流程</h3><p>两道关，边防和海关。<br>边防会要求扫VJW二维码，并录入双手食指指纹和人脸照片。<br>海关，没有申报物品的情况下，只扫码即可。<br>（题外话：入境过福冈、成田、关西三个机场，关西机场入境体验最差，成田最丝滑）</p><h2 id="2-机票"><a href="#2-机票" class="headerlink" title="2. 机票"></a>2. 机票</h2><h3 id="购买机票"><a href="#购买机票" class="headerlink" title="购买机票"></a>购买机票</h3><p><code>skyscanner</code>（国内版<code>tianxun</code>）</p><p>＊越提早买越便宜。<br>＊去程和返程一起买，更便宜。<br>＊最省钱的乘机方式通常是，以任何方式移动到上海或香港这两个城市，从这两个城市乘机。<br>比如：<br>南京→东京：4000以上<br>上海→东京：2000以上<br>＊成田机场和关西机场距市区都很远。如果你贪便宜买了红眼航班，落地成田可能会发现无法移动到市区。（浦东机场也很远，外地人坐高铁下车后，移动至少要花一个多小时）<br>＊得益于日圆汇率狂跌，把<code>skyscanner</code>的地区和货币都改成日本，相同航班会便宜不少。</p><h3 id="登机教程"><a href="#登机教程" class="headerlink" title="登机教程"></a>登机教程</h3><p>小镇做题家，生养20多年没坐过飞机。叹。</p><ol start="0"><li>国内线2时间前、国际线3时间前抵机场。</li><li>值机。英语Checkin。现在的航司都会在起飞前24小时开放网络值机，可以选座位。最终线下值机只需要办理行李托运，换登机牌即可。</li><li>安检。取出随身行李中的手机、Airpods、充电宝等物。</li><li>边检。</li><li>候机。快速找到登机口。有的航司的登机口在卫星楼里，需要乘摆渡车过去，注意规划时间。</li><li>登机。随身行李应全部收纳到头顶行李柜中，仅留手机护照在身边。</li><li>下机。注意寻找行李转盘。</li></ol><h2 id="3-酒店"><a href="#3-酒店" class="headerlink" title="3. 酒店"></a>3. 酒店</h2><p><code>Booking</code>和<code>携程（Ctrip）</code>均可。携程确实便宜，但常有**人特供房，略介意。</p><p>＊选酒店优先考虑交通因素。駅前真的能省很多事。<br>＊日式酒店房间配置都大差不差，选择精品酒店的垃圾套房（无窗无景等），有奇效。<br>＊简单的地域推荐：福冈推荐博多駅前，大阪推荐北浜。东京略。</p><h3 id="入住"><a href="#入住" class="headerlink" title="入住"></a>入住</h3><ol><li>パスオートを提示。</li><li>アメニティはどこですか？问清楚。有的酒店房间里没有，只能到前台自取。</li><li>清扫时间。</li></ol><h2 id="4-交通"><a href="#4-交通" class="headerlink" title="4. 交通"></a>4. 交通</h2><h3 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h3><p><code>Apple Maps</code> or <code>Google Maps</code></p><h3 id="电车（地下鉄）"><a href="#电车（地下鉄）" class="headerlink" title="电车（地下鉄）"></a>电车（地下鉄）</h3><p>日语里这两个东西都一样。不如说日本的列车系统只有两种：<code>電車</code>和<code>新幹線</code>。</p><p><strong>乘坐方法</strong></p><p>除了新干线以外的绝大多数列车都可以使用<code>Suica</code>买票。现在停发实体卡了，苹果手机可以在Wallet中自行申请一张虚拟卡，支持银联信用卡储值。<br>过闸机时把手机贴在感应区域滴一下即可。</p><p><em>有的JR駅是无人值守的，没有闸机。在站台上会有一个自助买票机，可以在那个上面滴一下</em><br><em>除了优先座席以外，日本人没有让座的习惯。如果你坐的不是优先座席，不要随意让座</em></p><h3 id="新干线"><a href="#新干线" class="headerlink" title="新干线"></a>新干线</h3><p>类似于**的高铁。新干线不是JR。JR除了新干线以外同时也运营市内电铁。<br>山阳线（博多駅 - 新大阪駅）、东海道线（新大阪駅 - 东京駅）、九州线（博多 - 鹿児岛）。<br>席别：自由席、指定席、グリーン席（VIP席）。</p><p><strong>网络购票</strong></p><ol><li>JR西日本（山阳、东海道、九州）三线可以使用<code>Smart EX</code>网络购票。有日本手机号的使用日语站，否则使用英语站。</li><li>註册，绑卡。（海外JCB可绑）</li><li>绑IC卡。这里绑IC卡并不是用IC卡支付，只是方便你刷卡过闸机。过闸机时，闸机会吐出一张票，保管好备查。</li><li>购票。提早购买有折扣（はやとく）</li></ol><p><strong>线下购票</strong><br>日本其实很多事情去线下办比网络更方便。去JR駅的<code>みどりの窓口</code>，向前台提供目的地，时间，席别，有无大件行李即可。</p><h3 id="公交"><a href="#公交" class="headerlink" title="公交"></a>公交</h3><p>也支持刷IC卡买票。</p><p>日本公交分两种：<br>＊后门上车，前门下车。滴两次。<br>＊前门上车。滴一次。</p><h2 id="5-其他"><a href="#5-其他" class="headerlink" title="5. 其他"></a>5. 其他</h2><h3 id="现金"><a href="#现金" class="headerlink" title="现金"></a>现金</h3><p>日本也已经是无现金社会了，在有信用卡的情况下，很少会用到现金。但是在一些街边小店，或者缺少刷卡设备的场合，仍然需要准备现金。<br><em>请准备零钱包，日本的硬币实在太多太杂了。</em></p><p>取现金的方式：</p><ol><li>在**银行柜台自取（无手续费、需预约）；</li><li>在日本国内的ATM机上自取（有手续费，有的卡有优惠政策免手续费，自行研究）。</li></ol><h3 id="垃圾"><a href="#垃圾" class="headerlink" title="垃圾"></a>垃圾</h3><p>日本街头没有垃圾桶。出门请自备垃圾袋，返回酒店扔掉。ピン、カン等请直接放入回收处。</p><h3 id="信用卡"><a href="#信用卡" class="headerlink" title="信用卡"></a>信用卡</h3><p><code>Visa</code>适用范围最广。少数场合则需要<code>JCB</code>。</p><h3 id="境外险"><a href="#境外险" class="headerlink" title="境外险"></a>境外险</h3><h3 id="荷物CheckList"><a href="#荷物CheckList" class="headerlink" title="荷物CheckList"></a>荷物CheckList</h3><ul><li><input disabled="" type="checkbox"> 折叠晾衣架</li><li><input disabled="" type="checkbox"> 耳塞</li><li><input disabled="" type="checkbox"> 刮胡刀</li><li><input disabled="" type="checkbox"> 雨伞</li><li><input disabled="" type="checkbox"> 零钱包</li><li><input disabled="" type="checkbox"> 垃圾袋</li><li><input disabled="" type="checkbox"> 常用药</li></ul><h3 id="推し活CheckList"><a href="#推し活CheckList" class="headerlink" title="推し活CheckList"></a>推し活CheckList</h3><ul><li><input disabled="" type="checkbox"> ライブT</li><li><input disabled="" type="checkbox"> アクスタ</li><li><input disabled="" type="checkbox"> リュック</li></ul><h2 id="6-Live参戦"><a href="#6-Live参戦" class="headerlink" title="6. Live参戦"></a>6. Live参戦</h2><p>やっぱEventer向けなので。</p><p>ちなみに僕の担当：<code>麻仓もも</code> <code>MyGO!!!!!</code>。</p><h3 id="6-1-打Call"><a href="#6-1-打Call" class="headerlink" title="6.1 打Call"></a>6.1 打Call</h3><p>先明确一点，Live不是音游，打Call只是帮助你更好融入现场的气氛，绝对不应该成为你的负担。</p><p>棒子：有官棒买官棒，没有的买白棒即可。</p><p>简单的打Call可以参照LiveBD，不足部分只管摇棒子即可。稍微进阶的打Call需要理解一些乐理。这块可自行检索。</p><p>重申：打Call绝对不应该成为你的负担。</p><h3 id="6-2-开场前"><a href="#6-2-开场前" class="headerlink" title="6.2 开场前"></a>6.2 开场前</h3><p>两件事：买谷和排队。</p><p>买谷请注意，个别极端情况下，有的现场只支持现金支付。</p><p>入场前通常有大把的空闲时间。可以就近找餐厅或モール等室内等候，不要在路边徘徊，有碍观瞻。额外物品放コインロッカー中，场T提前穿好。</p><h3 id="6-3-开场"><a href="#6-3-开场" class="headerlink" title="6.3 开场"></a>6.3 开场</h3><p>手荷物検査。<br>（Zeppの場合）600円ドリンク代必须。<br>快速找到座位，棒子毛巾等装备穿戴起来。</p><h3 id="6-4-开演"><a href="#6-4-开演" class="headerlink" title="6.4 开演"></a>6.4 开演</h3><p>想必各位LiveBD已经鉴赏很多次了，Live中需要做什么不赘叙。唯请注意一些基本礼仪：</p><ul><li>毛巾、扇子等物不要举过头顶；</li><li>演者开唱的过程中，不要发出奇声，也不要跟唱（家虎）；</li><li>如果你不是打Call达人，不要开闪光棒，更不要开孔雀，打Mix；甩棒子不要打到别人（痛い！）</li><li>Live结尾会有全员起跳环节，请保证你跳完后还在原来的位置；</li><li>请在舞台灯光全部暗下来，演者全部离开之后，再喊アンコール。另外，不要喊一些奇怪的アンコール。<code>MyGO!!!!!</code>现场总有一些神经病出于自我满足的目的喊一些奇怪的アンコール，迷惑。</li></ul><h3 id="6-5-退场"><a href="#6-5-退场" class="headerlink" title="6.5 退场"></a>6.5 退场</h3><p>规制退场。<br>如果你是孤独可怜的ひとりぼっちEventer，请尽快离开现场及周边。否则你会遭受爆击。</p><h2 id="7-二次元相关"><a href="#7-二次元相关" class="headerlink" title="7. 二次元相关"></a>7. 二次元相关</h2><p>如果你希望在Animate和Gamers等店买到你心仪的谷子，请放弃期待。这一类线下店，店头摆得最显眼的仍然是<code>アンサンプル！</code> <code>原神</code> <code>One Piece</code>等（）作品。你所珍视（我所珍视的）もちょグッズとか、普通レベルの深夜アニメのグッズとか、あるわけねえだろ！</p><p>羅針盤倒是可以找到一些惊喜。</p><p><em>另外福岡等地方县市的二次元浓度约等于0</em></p><h2 id="8-礼儀"><a href="#8-礼儀" class="headerlink" title="8. 礼儀"></a>8. 礼儀</h2><p>＊快餐店（マック、モスバーガー）等处，吃完后请自行整理餐盘。<br>＊ラーメン屋反而不需要整理。另外这类店的决済方式通常只支持现金。</p><h3 id="食券机あるの场合（ラーメン屋さん）"><a href="#食券机あるの场合（ラーメン屋さん）" class="headerlink" title="食券机あるの场合（ラーメン屋さん）"></a>食券机あるの场合（ラーメン屋さん）</h3><ol><li><strong>現金</strong>で食券を买う</li><li>店に入って店員さんにお愿い<br>（ありがとうございまーす）</li><li>カバンを足の下に<br>（ご馳走様でしたー）</li></ol><h3 id="牧のうどん空港店、居酒屋、串カツ"><a href="#牧のうどん空港店、居酒屋、串カツ" class="headerlink" title="牧のうどん空港店、居酒屋、串カツ"></a>牧のうどん空港店、居酒屋、串カツ</h3><ol><li>注文を頼む</li><li>レシートに記録があります<br>（ありがとうございまーす）</li><li>食べ终わったらレジに行って会計（<strong>現金</strong>）<br>（ご馳走様でしたー）</li><li>Last Orderというルール</li></ol><h3 id="バーガー店"><a href="#バーガー店" class="headerlink" title="バーガー店"></a>バーガー店</h3><ol><li>注文を頼む（自販機かフロントに）</li><li>待つ<br>（ありがとうございまーす）</li><li>食べ終わったら自分で整理する</li></ol><p>＊在任何地方优先观察队列。不要因为想询问店员一些事情而不排队，杵在旁边，大洋相。</p><p>＊一些实用日语：</p><ul><li>すみません、ちょっと聞き取れなかったので、もう一度お願いします</li><li>（店员に）ありがとうございまーす</li><li>（店员に）お願いしまーす</li><li>（ラーメン屋の場合）はーい</li><li>（謝りたい时）ごめんなさい！</li></ul><h2 id="9-题外话（ヒトリゴト）"><a href="#9-题外话（ヒトリゴト）" class="headerlink" title="9. 题外话（ヒトリゴト）"></a>9. 题外话（ヒトリゴト）</h2><p>旅の耻は耻じゃない、因为没有任何人会记住你。理解了这一点，可以减少很多精神上的负担。</p><p>不要太过神化演者和业界。对于你来说，你是费尽千辛万苦从海外过来一仰尊容，但对大多数人来说，他们只是下班时间坐了个地铁过来而已。演者自己也绝对不希望你对她有什么不切实际的想像。変な想像、重すぎる愛、迷惑だけです。海外过来的二次元通常都很野，「推し活してる俺カッコいい！」って。但这样的行为仍然不是被大众所接受的，请控制你的承认欲求。</p><p>不要试图穷游。你可以适当地省，但绝对不要试图荒野求生。整个日本都不适合穷游，更何况日本人这么排外的民族，他们能容忍外人进来的唯一原因就是，外人对这个国家做出了贡献（游客负责掏钱上供，打工者负责做人矿）。</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>麻倉もも薬師寺コンサート紀行</title>
      <link href="/june_travel.html"/>
      <url>/june_travel.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-当選"><a href="#1-当選" class="headerlink" title="1.当選"></a>1.当選</h2><p>■公演タイトル　：麻倉もも<br>■予約番号　　　：3567977764<br>■電話番号　　　：会員登録もしくは予約時に<br>　　　　　　　　　入力された電話番号<br>■引取期限　　　：2024&#x2F;6&#x2F;1(土) 12:00 ～ 2024&#x2F;6&#x2F;15(土) 23:00まで<br>■公演日　　　　：2024&#x2F;6&#x2F;15（土）<br>　　　　　　　　　18:15　開　演<br>■会場名　　　　：薬師寺東塔前特設会場<br>■チケット料金　：全席指定　1枚</p><p>＊羅森店頭取票</p><h2 id="2-簽證"><a href="#2-簽證" class="headerlink" title="2. 簽證"></a>2. 簽證</h2><p>資產簡化-信用卡白金卡簡化</p><h2 id="3-機票"><a href="#3-機票" class="headerlink" title="3. 機票"></a>3. 機票</h2><p><strong>往</strong><br>ANA 6.14（金）<br>上海 &#x3D;&gt; 大阪</p><p><strong>返</strong><br>ANA 6.17（月）<br>大阪 &#x3D;&gt; 上海</p><p>＊<code>skyscanner</code>で日本円決済</p><h2 id="4-酒店"><a href="#4-酒店" class="headerlink" title="4. 酒店"></a>4. 酒店</h2><p>宿名：ピアッツァホテル奈良<br>宿泊日数：3泊</p><ol><li>奈良北、近鉄奈良付近</li></ol><p>評：関西だからか、アメニティが便利だね。交通も超便利。</p><p>＊交通と言ったら無人駅の乗り方？（駅で自分でタッチしろ）</p><h2 id="5-行李"><a href="#5-行李" class="headerlink" title="5. 行李"></a>5. 行李</h2><p><strong>耳栓</strong>つけろ！</p><h2 id="6-推し活"><a href="#6-推し活" class="headerlink" title="6. 推し活"></a>6. 推し活</h2><ul><li><input disabled="" type="checkbox"> もちょブレイド</li><li><input disabled="" type="checkbox"> ももちゃんグッズ全般</li></ul><h2 id="7-劇場観劇"><a href="#7-劇場観劇" class="headerlink" title="7. 劇場観劇"></a>7. 劇場観劇</h2><p>発券して10分前待機。</p><h2 id="8-食礼儀"><a href="#8-食礼儀" class="headerlink" title="8. 食礼儀"></a>8. 食礼儀</h2><p>＊ラーメン屋さん：メニュー手前にあったらとってろ<br>＊モールの弁当さん：列並んでろ</p><h2 id="9-遊記"><a href="#9-遊記" class="headerlink" title="9. 遊記"></a>9. 遊記</h2><h3 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h3><p>10時過ぎに降りて関門前で待機。関西空港やっぱクソ。</p><p>奈良に遠征。電車30毎一両とか田舎だね…</p><p>ホテルに入れない。え？ってビビった。幸いベル鳴らせて入った。駅前ってめっちゃ便利やな。</p><h3 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h3><p>朝から薬師寺！って、まずは唐招提寺ね！</p><p>人意外と少ない。こういう教科書に出る場所は普通めっちゃ混んでるのに。まあ、仏教の寺院で撮影禁止でド田舎でしょうがない。</p><p>唐招提寺から薬師寺に。田舎の小道歩んでてううわ田舎！ってなった。でも風景いいよ。<br>遠方の青山チラチラ見えて、曇りと緑の稲、うん、神話の大和国みたいな。</p><p><img src="https://imgur.com/c50snDh.jpg"></p><p>とうとう薬師寺へ。噂の塔はこれか！南朝風の古建物好き。キャバ見えて、椅子色々。音響を見て、ワクワクするね！</p><p>昼ごはん何にします？田舎なのでマックもコンビニも無いので、キツいわ。じゃあ（噂によるよもしかしてももちゃんが来るかもしれない）麺屋ふくやに。冷やしうどん？店員さんの奈良弁で「つ↓めた↑いう↓どん」って面白い。</p><p>やっぱ時間余るので一度ホテルに戻ったわ。</p><p>又来るとめっちゃ雑草たちいて草。真の男がピンク色の何かを身につけて一般人から見るとどう思ってるのだろ。まあ僕も雰囲気に合わせてちょっとだけバンド付いたわ。本当はTシャツ欲しいな。</p><p>待機。CD列。ギリギリ開演。</p><p>もち！</p><p>青色ユメシンっぽい服で頭に白い大きいリボンが猫耳みたい。<br>始まりはやっぱ庄嚴感会ってちょっと重いなーと思ったんだけど。雨のせいでだんだんふさけになって、双眼鏡使ってももちゃんの聖なるお顔とお体（）を見られて、365ラブと花に赤い糸で…もう…</p><p>好きなライブって、秒で終わるんだね。(o・∇・o)</p><p>やっぱももちゃんがいいんだよ。この身の全てをももちゃんに捧げるのも悪くないと思ってる。</p><p><img src="https://imgur.com/O7j2jEP.jpg"></p><p>でも帰り道に不意に天理駅に降りて再びううわ田舎！ってなって草。</p><h3 id="day3"><a href="#day3" class="headerlink" title="day3"></a>day3</h3><p>ライブも終わったしミッションクリアだし、じゃあ適当にylgなやつみようかって奈良公園に。確かに鹿多いね。でも**人もっと多くて気が重い。帰ろうか。</p><p>ももちゃんがおっしゃった麺屋BIBIRI！もう列並んでて意志のない人たちだね(o・∇・o)。確かに麺がうまい。</p><p>じゃあ何をしようか？やっぱ一度映画が見たいな。なので橿原に。</p><p>遠いけど意外と賑やかな町（いいやAEONだけか）。とりあえず中広くて賑やかで感心した。**なんてこんなに賑やかなモールなんて普通小町にないぞ。</p><p>でも映画18:35から上映なので、暇潰しが大変になった。スマホいじってスーパーのお酒飲んで一食終わって、ようやく上映だわ。</p><p>トラぺジウム。<br>重いシーンだけがけろりら絵になって印象的。でも全体的には話の進展が早いかな。<br>まあいい視聴体験でした。</p><p>モールから出て電車駅探したらまさかのド田舎の無人駅。野人なので乗り方わかんないや。でも最終的にチケ代払って恥にされなくてよかった。</p><p>まあ独身弱男外人旅行者はこんなもんよ。</p><p>3月から今に至ってだんだんこの身分を納得して感慨も深いなー。</p><h3 id="day4"><a href="#day4" class="headerlink" title="day4"></a>day4</h3><p>朝4時関西空港行き。</p><p>関西圏マジて気に入らなかったわ。外人に配慮が少ない、接客係の態度もちょっとアレ。<br>そもそも関西空港って入国の時が一番キツいわ。<br>まあ文句はこのくらい。</p><h3 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h3><p>今回の交通状況がいい。色々歩いたのも、田舎なのでしょうがない。<br>ももちゃん人生のひとつのカケラ、見させていただいて感謝。</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 麻倉もも </tag>
            
            <tag> 声優 </tag>
            
            <tag> 巡礼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日本演唱会票务</title>
      <link href="/japan_ticket.html"/>
      <url>/japan_ticket.html</url>
      
        <content type="html"><![CDATA[<p>三大票务平台：<code>eplus</code> <code>ローチケ</code> <code>チケットぴあ</code>。</p><p><strong>票务的第一要点：拥有一个日本手机号。</strong>有了手机号会省去很多无谓的麻烦，大陆人可以申请cmlink电话卡并开通国际漫游。</p><h2 id="1-抽选"><a href="#1-抽选" class="headerlink" title="1. 抽选"></a>1. 抽选</h2><p>抽选分好几轮。<br>最速先行：一般为<code>FanClub</code>成员限定。<br>↓<br>一次先行：<code>CD</code>内封入的应募券。<br>↓<br>二次先行：少见。<br>↓<br>一般販売：即使倍率极高，一般也会开一般販売的，此阶段不抽选，直接拼手速。<br>↓<br>当日券：<del>卖不动的情况下</del>。</p><p>关于抽选时的第一希望&#x2F;第二希望：个人经验是只填第一希望即可。当然如果你手持应募券很少的话，也可以把所有希望填满。</p><h2 id="2-eplus"><a href="#2-eplus" class="headerlink" title="2. eplus"></a>2. eplus</h2><h3 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h3><p>＊注册账号需要验证日本手机号，需要往一个日本号码里打电话。注册成功后其他操作不再验证。<br>＊挡海外卡。<code>VISA</code> <code>JCB</code>都不收。这点大概是所有票务平台里最困难的点了，网上常见的解决方案是选择便利店付款然后找淘宝付。嗯，也不是不行，但如果你想全程亲力亲为的话，目前也发现一种方案（仍需日本手机号）。</p><p><strong>日本虚拟信用卡</strong><br>网上能搜到的日本虚拟信用卡资源有：<br>＊vプリカ（不可）：海外信用卡增值会失败，必须购买礼品卡或者便利店付款<del>和淘宝代付有什么差别</del>。也可以购买在线的<code>Ｖプリカギフトカード</code>增值、ややこしいのでパス。<br>＊ANA Pay（不可）：ANA会员可以领一张虚拟的<code>visa预付卡</code>。但是海外信用卡增值依然会失败。<br>＊<strong>kyash（可）</strong>：使用国内发行的<code>JCB</code>增值成功（需要网络条件）。但此卡属<code>visa debit</code>，可用的平台不多，<code>ヤフオク</code>会直接拒绑，目前来看只适合来绑<code>eplus</code>。<br>＊香草卡：因为<code>kyash</code>已经解决了问题，所以此渠道暂未尝试。</p><p><strong>補記</strong><br>＊kyash不實名認證的話1天最多只能付3萬日圓。支払いできませんでしたって通知が来た時マジ焦った。</p><h2 id="3-ローチケ"><a href="#3-ローチケ" class="headerlink" title="3. ローチケ"></a>3. ローチケ</h2><h3 id="难点-1"><a href="#难点-1" class="headerlink" title="难点"></a>难点</h3><p>＊登录界面对梯子有要求，一般的机房ip会登不进去。 <em>这也算难点？</em><br>＊注册账号阶段会让填手机号，但是这个手机号根本不会验证，只会在使用ローチケアプリ発券時才验证。所以对于新人可以做到如下流程：</p><ol><li>在国内购买一张cmlink电话卡，还未激活，但卡面已印有手机号。</li><li>ローチケ抽选时，填入该手机号（不验证）。</li><li>live前日落地日本，插卡激活后下载ローチケアプリ，通过验证，発券成功。</li></ol><p>＊不挡海外卡。</p><h2 id="4-チケットぴあ"><a href="#4-チケットぴあ" class="headerlink" title="4. チケットぴあ"></a>4. チケットぴあ</h2><h3 id="难点-2"><a href="#难点-2" class="headerlink" title="难点"></a>难点</h3><p>＊一个比较烦的票务。但是有电话卡以后无难点笑。</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>麻倉もも写真集「ただいま、おかえり」巡礼</title>
      <link href="/mocho_junrei.html"/>
      <url>/mocho_junrei.html</url>
      
        <content type="html"><![CDATA[<p>2019.4撮影<br>2024.3巡礼</p><p>5年も経ったな。時間の流れよ。</p><h2 id="1-牧のうどん-博多バスターミナル店"><a href="#1-牧のうどん-博多バスターミナル店" class="headerlink" title="1. 牧のうどん　博多バスターミナル店"></a>1. 牧のうどん　博多バスターミナル店</h2><p>写真集には出てなかったけど、食券機にももちゃんセットボタンがあって実に面白い。<br>僕初心者なのでももちゃんセットボタン見つけなくてトッピングだけを注文したら、店員さんが、「もしかしてももちゃんセットですか？」って。すごいな雑草たち笑。</p><p><img src="https://imgur.com/FK6Nz4A.jpg"></p><h2 id="2-牧のうどん-空港店"><a href="#2-牧のうどん-空港店" class="headerlink" title="2. 牧のうどん　空港店"></a>2. 牧のうどん　空港店</h2><p>雑草の聖地ね。</p><p><img src="https://imgur.com/zYe82aE.jpg"></p><p>この量すごいですわ　僕長身なおっさんですが結構頑張った。もちょすご…</p><p><img src="https://imgur.com/fiNVK35.jpg"></p><p>あのサイン！</p><p><img src="https://imgur.com/PQtvzST.jpg"></p><h2 id="3-櫛田神社"><a href="#3-櫛田神社" class="headerlink" title="3. 櫛田神社"></a>3. 櫛田神社</h2><p>正殿前。写真集の赤色は綺麗ですけど、僕のスマホからは、まあ。</p><p><img src="https://imgur.com/FWqKti4.jpg"><br><img src="https://imgur.com/aNJPavH.jpg"></p><p>絵馬。</p><p><img src="https://imgur.com/DXh99Hj.jpg"><br><img src="https://imgur.com/uTFtIUo.jpg"></p><p>鳥居。写真集の中でこの一枚大好き。</p><p><img src="https://imgur.com/YTZQuMj.jpg"><br><img src="https://imgur.com/q4p0rTF.jpg"></p><h2 id="4-ももち浜"><a href="#4-ももち浜" class="headerlink" title="4. ももち浜"></a>4. ももち浜</h2><p>3月の海辺は寒い！写真集の撮影時点が4月だけどきっとまだ寒いな。もちょの仕事も大変だ（謎の感慨タイム）。</p><p>この湾岸ね。砂浜でもちょの生足が…もちょの胴体が…ワクワク（ゲス顔）</p><p><img src="https://imgur.com/xOOlAiq.jpg"><br><img src="https://imgur.com/PTppVUF.jpg"></p><p>この建物、なんだかスペインのローマンウェディング？</p><p><img src="https://imgur.com/7oml1mU.jpg"><br><img src="https://imgur.com/l9bLmXR.jpg"></p><h2 id="5-のこしまアイランドパーク"><a href="#5-のこしまアイランドパーク" class="headerlink" title="5. のこしまアイランドパーク"></a>5. のこしまアイランドパーク</h2><p>のこしま。このパーク大好き。また行きたいな。</p><p><img src="https://imgur.com/34mJAm0.jpg"></p><p>フェリー。</p><p><img src="https://imgur.com/kcLhgMY.jpg"><br><img src="https://imgur.com/hTq0v07.jpg"></p><p>あの伝説のブランコ！もちょの一番大きい丸がここに接触して…わーい(o・∇・o)</p><p><img src="https://imgur.com/DerRAyJ.jpg"><br><img src="https://imgur.com/NvVn1MS.jpg"></p><p>記憶の道に沿う。</p><p><img src="https://imgur.com/EtsgJtd.jpg"><br><img src="https://imgur.com/2IHlKkU.jpg"></p><p><img src="https://imgur.com/rO5qgJb.jpg"><br><img src="https://imgur.com/1g98HuQ.jpg"></p><p>このポストカードはまだ売ってますよ。</p><p><img src="https://imgur.com/E3BrfxV.jpg"></p><p>写真集のこの花畑の一枚大好き！でも時期的には花はまだです。</p><p><img src="https://imgur.com/R3oSizs.jpg"><br><img src="https://imgur.com/BAYLaXt.jpg"></p><h2 id="今回行けなかった場所"><a href="#今回行けなかった場所" class="headerlink" title="今回行けなかった場所"></a>今回行けなかった場所</h2><h3 id="屋台-忠助"><a href="#屋台-忠助" class="headerlink" title="屋台 忠助"></a>屋台 忠助</h3><p>場所自体は行った。でも写真集のシーンはもうないかな。</p><h3 id="柳川藩主立花邸-御花"><a href="#柳川藩主立花邸-御花" class="headerlink" title="柳川藩主立花邸 御花"></a>柳川藩主立花邸 御花</h3><p>こういう場所にキモオタが入るわけないでしょ！</p><h3 id="柳川"><a href="#柳川" class="headerlink" title="柳川"></a>柳川</h3><p>写真集から見ると綺麗な川ですね。でも市区から離れるので行けなかった。</p><h3 id="美野島商店街"><a href="#美野島商店街" class="headerlink" title="美野島商店街"></a>美野島商店街</h3><p>ももちゃんの思い出がある場所。行きたいけど優先順位最後なので結果的には行けなかった。</p><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>巡礼は楽しい！でも巡礼の途中：</p><p>あの殿の前でももちゃんが…<br>あの鳥居の中にももちゃんが…<br>あの絵馬の前にももちゃんが…<br>あの砂浜の上でももちゃん（の胴体）が…</p><p>時々こうなって死にたい気持ちですわ。</p>]]></content>
      
      
      <categories>
          
          <category> アニメ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 麻倉もも </tag>
            
            <tag> 声優 </tag>
            
            <tag> 巡礼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人向海淘教程</title>
      <link href="/haitao.html"/>
      <url>/haitao.html</url>
      
        <content type="html"><![CDATA[<p><strong>序：</strong><br>本篇海淘教程围绕日本 CD &#x2F; BD &#x2F; 日谷的购买、转运展开。</p><p>海淘本不是难事，但是中文网络上找到的大部分海淘教程：<br>＊或面向美亚；<br>＊或即使有日本海淘教程，所聚焦的商品无非是手表、化妆品、数码产品；<br>＊或采 DHL 直邮，对于 CD 等没有参考价值；<br>＊关于海关清关的信息犹少。</p><p>对于已经会玩日本转运的人，我这篇文章肯定是班门弄斧。权当是我个人这一年半的经历总结吧。</p><p><strong>适用读者：</strong><br>＊阅读无碍的日语水平<br>＊稳定可用的网络环境<br>＊轻松申卡的信用记录</p><h2 id="一、办卡"><a href="#一、办卡" class="headerlink" title="一、办卡"></a>一、办卡</h2><p>国际三大卡组织：<code>VISA</code> <code>MasterCard</code> <code>JCB</code>。日淘主用<code>VISA</code> <code>JCB</code>。绝大多商家优先用<code>VISA</code>，少数商家只收<code>JCB</code>。目前发现只收<code>JCB</code>的有：<code>Rakutenブックス</code>、日区<code>App Store</code>。</p><p>申请国际信用卡时，请考虑：<br>＊年费<br>＊购汇手续费<br>＊还款便利程度<br>＊综合使用体验</p><h3 id="卡种"><a href="#卡种" class="headerlink" title="卡种"></a>卡种</h3><p>给出几个我开过的卡：</p><p><strong>招行全币种JCB</strong><br>优：<br>＊单标卡，免年费，免购汇手续费。（双标卡会收1.5%手续费）<br>＊通用型极强，能刷过绝大部分商家：这张卡刷不过的商家基本别的卡也就刷不过了。<br>＊综合体验良好：很多玩卡的人并不会在意、但我个人极其在意的一点是，App 使用体验。招行的信用卡 App，虽然远不如国外的银行 App，但在一众国产妖魔鬼怪之前，可评最佳。<br>＊JCB 卡组织评级 Platinum，可享受 JCB 白金权益，主要是日本机场贵宾厅。</p><p>缺：<br>虽然免购汇手续费，但汇率较差，较他行多收千分之一左右。</p><p><strong>招行全币种VISA</strong><br>同上。</p><p><strong>招行全币种VISA白金</strong><br>此卡需要先申招行任意银联白金卡，会附赠。<br>招行的卡基本无优惠，到白金等级终于有一些了。</p><p><strong>工行星座卡VISA</strong><br>没有工作的学生可以开这个，0额度，当借记卡用。</p><p><strong>浦发、工行、中行JCB</strong><br>（为了躲eplus的发卡地限制申了一堆JCB结论是全挂草）</p><h3 id="用卡"><a href="#用卡" class="headerlink" title="用卡"></a>用卡</h3><p>线上用卡，就是填个表单，四个要素：<br>＊卡号<br>＊持卡人姓名<br>＊过期时间<br>＊CVV</p><p>CVV务必记牢。多数信用卡哪怕你找银行客服对面也不可能知道你的CVV。</p><h3 id="入账周期"><a href="#入账周期" class="headerlink" title="入账周期"></a>入账周期</h3><p>这部分应该在掌握一定经验以后再看，姑且记之。<br>各个网购平台的入账周期不一样，了解入账周期会更方便自己记账。</p><p>不论是否为预约商品，均在商品发送前日扣款：<br>＊日亚<br>＊乐天（下单即扣，但实际入账总在商品发送后）<br>＊tower<br>＊animate<br>＊gamers<br>＊hmv</p><p>下单即扣款，即使是3个月发后的预约订单：<br>＊虎穴（运费另在发送前日扣）<br>＊Aniplex<br>＊SonyMusicShop<br>＊新星堂<br>＊Sofmap<br>＊TSUTAYA</p><h2 id="二、清关"><a href="#二、清关" class="headerlink" title="二、清关"></a>二、清关</h2><p>难道不是先学转运，后学清关？答：先了解清关知识，才能最大程度避免踩坑（血泪史）。</p><h3 id="1-邮政"><a href="#1-邮政" class="headerlink" title="1. 邮政"></a>1. 邮政</h3><p>国际快递常用DHL、UPS、EMS。</p><p>EMS不是一家快递公司，EMS是由万国邮政联盟所组织的国际间速递服务，中国邮政会把国内速递服务也叫做EMS，二者重名，故有歧义。</p><p>相比DHL，EMS的优点：<br>＊<del>DHL每单必须申报，而EMS只有10%的概率被抽查。</del><br>＊DHL按商品申报，EMS按个人自用物品申报，二者规则与税率不同。</p><h3 id="2-申报"><a href="#2-申报" class="headerlink" title="2. 申报"></a>2. 申报</h3><p>EMS虽然只有10%的概率抽查，但为免麻烦，发送前一律要求先申报。<br>申报得不好，会导致清关的时候被老爷要求补充申报，喜提清关时效+7天。</p><p>我实践中主要申报品类：<br><code>CD碟片</code><br><code>BD碟片</code><br><code>亚克力立牌</code><br><code>日文书籍</code><br><code>智力玩具</code></p><h3 id="3-清关"><a href="#3-清关" class="headerlink" title="3. 清关"></a>3. 清关</h3><p>清关，依我看来，抽不抽查，收不收税，扣不扣留，全凭海关老爷个人喜好。所以网络上找到的教程基本毫无参考价值。同一地可行的经验换了一地也许根本不可行；一年几十单从没被收过税，那只能说明该人受上帝眷顾，并不值得作为经验拿出来分享。</p><p>按照本人这一年多来大几十单的包裹量，姑且摸索出一套（在金陵海关可行的）方法论，介绍如下：</p><ol><li>包裹内只有CD&#x2F;书籍？<br>→是，则适用于CD&#x2F;书籍专用办法：书籍10册以内或3套以内，CD20盘以内或3套以内。满足此条件的，<strong>免税放行</strong>。但如果包裹内有书籍，海关会有概率<strong>拆封</strong>包裹检查内容，此操作与是否收税无关。<br>→否，见2.</li><li>包裹内物品总价值在1000人民币以内？或者是3000以内的<strong>个人自用</strong>物品？<br>→是，则开始查税率，<strong>收税放行</strong>。税率为三档：13% 20% 30%，收你哪一档，没有规律，全凭喜好。<br>→否，则GG，海关会发短信叫你按货物报关或者退运。南京邮政的清关行另提供货物清关服务，不过他们的电话从来没打通过，建议自行去线下向老爷陈情。</li></ol><p>所以如果你的包裹内物品<strong>不是CD且总价在1000以上</strong>，就不要走EMS了，转运公司另提供自营的包税线。</p><h3 id="4-物流时效"><a href="#4-物流时效" class="headerlink" title="4. 物流时效"></a>4. 物流时效</h3><p>翻出一个历史包裹的时效（详细信息略）：</p><p><code>01-19</code> 离开境外出口互换局（尚未抵达中国邮政）<br><code>02-04</code> 邮件到达【上海市国际互换局】<br><code>02-05</code> 邮件到达【南京市邮区中心进口邮件处理中心】<br><code>02-07</code> 海关通关中<br><em>（此为应缴税包裹，当日下午收到缴税短信）</em><br><code>02-08</code> 进口海关放行<br><code>02-08</code> 邮件离开【南京市国际互换局】<br><code>02-09</code> 邮件到达【南京市XXX揽投部】</p><p>下面是各阶段解释：</p><p><strong>离开境外出口互换局</strong>：已进入发货准备，但是还没抵达境内。此阶段耗时较长，而且就算找中国邮政客服询问情况，对面也答不出什么东西来。只能耐心等。</p><p><strong>到达【上海市国际互换局】</strong>：抵境。需要注意的是入境口岸和实际管你的海关并不在一个地方。入境口岸通常有大连、北京、上海、广州。而实际管你的海关通常为你所在省的省会，部分外贸大省则会设置多个海关，如江苏省就设有金陵海关、苏州海关。</p><p><strong>到达【南京市邮区中心进口邮件处理中心】</strong>：从入境口岸抵达海关驻邮办，准备由<strong>邮政</strong>送交<strong>海关</strong>。一般会在下一个<strong>工作日</strong>送交。（邮政一年365无休，关爷则是严格每周只上五天班）</p><p><strong>海关通关中</strong>：俗称清关。详见上面第3节。这一步有可能会被：</p><ol><li><p>被通知补充申报。（后果：清关时效+7天）</p></li><li><p>被通知缴税。（交点钱就让你过你就偷着乐吧）</p></li><li><p>被通知含有禁限包裹，去海关线下悔过。（笑）</p></li><li><p>被通知货值超过1000人民币，必须按货物申报或退运。（G）</p><p>＊<del>虽然会有以上这些意外情况发生，但是只要如实申报，合理分配包裹价值，遵纪守法，通常并不会被为难。我现在最多会被通知缴税，绝大多数包裹直接免税放行。</del> <strong>狗日的南京海关</strong>已经没有规律了，最新情况是非纯CD包裹的话必补充申报，与其跟关爷斗智斗勇不如趁早离开这个鬼地方。<br>＊<em>（题外话：清关这一步，网上能找到各种稀奇古怪的手法。或漏报，或瞒报，被要求补充申报的时候或P图…个人认为与其动这些歪脑筋，不如清白做人，这样出了问题和海关对线心里也有底气）</em></p></li></ol><p><strong>进口海关放行</strong>：脱离苦海。从这里开始就已经进入邮政系统了，耐心等收货吧。</p><h3 id="5-补充申报与缴税"><a href="#5-补充申报与缴税" class="headerlink" title="5. 补充申报与缴税"></a>5. 补充申报与缴税</h3><p><strong>补充申报</strong></p><p>如果在发货时申报信息填的不好（太笼统&#x2F;太虚假&#x2F;特殊品类），清关时会被通知补充申报。你会收到一条<strong>邮政</strong>发来的补充申报短信。你可以：</p><p>1. 走邮政的系统补充申报。先交30人民币手续费，然后使用邮政的小程序上传补充申报信息。信息必须含有以下内容：<br>　＊每个商品的品类、价值<br>　＊购物网站的订单截图<br>　＊信用卡扣款截图<br>　＊发货时的包裹重量<br>2. <strong>自己去海关线下办理（推荐）。</strong> 流程是一样的，少交30元手续费，而且神速。</p><p>补充申报以后，先由邮政预审，没问题以后再提交海关重新清关。这个过程通常会花费5个工作日，并且邮政短信里发给你的清关行电话是永远打不通的。</p><p><strong>＊24.3.28注</strong><br><strong>狗日的南京海关</strong>已经摸不清规律了，未来可能只要包裹里不是纯碟片，就必须要补充申报。</p><p><strong>缴税</strong></p><p>如果包裹需要缴税，同样会收到由<strong>邮政</strong>发来的缴税短信。你可以：</p><p>1. 走邮政的系统缴税（不推荐）。多交10元手续费，且查不到缴税明细。<br>2. <strong>走海关的系统缴税（推荐）。</strong>支付宝搜索<code>个人物品税款支付</code>。不交手续费，且能看到明细。</p><h2 id="三、转运"><a href="#三、转运" class="headerlink" title="三、转运"></a>三、转运</h2><p>回想起第一单海购，买了两本漫画直接DHL空运的那次…转运业务真是造福万家。<br>介绍两个用过的转运服务：</p><h3 id="JPGOODBUY"><a href="#JPGOODBUY" class="headerlink" title="JPGOODBUY"></a>JPGOODBUY</h3><p>＊线路：可发<code>EMS空运</code>、<code>EMS海运</code>、<code>EMS小包</code>、<code>日本邮政</code>。另有自营的<code>包税线</code>，限额3000元人民币以内。</p><p>中国人开的面向中国的转运服务，注册地在青岛。这家应该是老牌了，各种业务轻车熟路，转运系统用起来也蛮顺手。主营转运，也提供代购服务。<br><em>（最近主推煤炉代购，竟然可以在煤炉卖家的价格基础上打9折，颇令我震惊。）</em></p><h3 id="TENSO"><a href="#TENSO" class="headerlink" title="TENSO"></a>TENSO</h3><p>＊线路：可发<code>日本邮政</code>。</p><p>日本人开的面向全球的转运服务。实名制，使用前必须上传身份证明。第一单的收货地址必须填写身份证上的地址，收货成功以后才能改址。<br>部分日本商家有风控，会封常见（主要是中国）转运公司的地址。我曾经在集英社的网店买东西，填了 JPGOODBUY 的地址，被告知不能发货，必须用 TENSO，想来是因为 TENSO 强制实名吧。后续在一些风控严格的店铺上购物，就乖乖填这家的地址了。<br>这家的系统麻烦且不好用，但好像不用也不行，笑。</p><h3 id="线路选择"><a href="#线路选择" class="headerlink" title="线路选择"></a>线路选择</h3><p>关于转运服务的使用，各转运公司上都有详细教程，不赘述。这里讲一下线路怎么选：</p><p>＊如果你的包裹内只有碟片&#x2F;书籍：推荐走 EMS。这类物品属于免税商品，即使走 EMS 线，也并不会被收税。而且包裹内碟片&#x2F;书籍通常有很多，包税线一般都会对物品数量有限制，反而不便。<br>＊如果你的包裹内有日谷等不免税商品，但总价值不高：仍推荐走 EMS。EMS是10%的抽查概率，不一定会被收税。而且 EMS 的申报相对简单，省心。<br>＊如果你的包裹内有价值较高的不免税商品，或者明显为海关严查商品（如游戏卡带、化妆品）：推荐走包税线。先不论20%～30%的税不是个小数目，主要是有的品类的商品甚至不可能放进来。走包税线的话申报比较麻烦，申报得不对还会被打回重申，建议申报前活用 ChatGPT。</p><h2 id="四、购买"><a href="#四、购买" class="headerlink" title="四、购买"></a>四、购买</h2><p>这里假定读者已经有阅读无碍的日语能力，所以这部分实际没什么好说的。你既然有购买的需求，说明你对一些基本信息已经有一定的了解，读一读购物网站上的提示，大抵都会操作。这里简单介绍一些常用店铺。</p><h3 id="Amazon-co-jp"><a href="#Amazon-co-jp" class="headerlink" title="Amazon.co.jp"></a>Amazon.co.jp</h3><p>日本亚马逊。分自营商品和非自营商品。</p><p>＊Prime会员（600日元&#x2F;月），所有自营订单免邮。<br>＊CD的店铺特典基本是マガジャケット。<br>＊日亚的风控非常严格，信用卡账单地址不要写转运公司的地址，短期内也不要大量取消订单。<br>＊日亚会频繁地动态调价。发售前的预约商品，不带特典的通常比带特典的便宜一些；发售后的商品，价格视需求情况或升或降；再加上有的二手贩子坐地起价，常常会出现极其离谱的价格，整个价格体系颇混乱。日谷尤其不要在日亚买。</p><h3 id="Rakutenブックス"><a href="#Rakutenブックス" class="headerlink" title="Rakutenブックス"></a>Rakutenブックス</h3><p><code>楽天市場</code>下属<code>Rakutenブックス</code>，CD&#x2F;日谷专营店。</p><p>＊付款方式只支持<code>JCB</code>。<br>＊<code>Rakutenブックス</code>的所有订单包邮。<br>＊CD的店铺特典常见的是B5クリアファイル。<br>＊所有订单下单即扣款，但总会等到发货之后N日后才入账，还经常循环扣款，不利于管理账单。<br>＊也会像日亚一样调价，但幅度不大。</p><h3 id="Animate"><a href="#Animate" class="headerlink" title="Animate"></a>Animate</h3><p>A店。</p><p>＊注册账号需验证手机号，中国手机号接不到验证码，使用海外手机号可行。<br>＊不包邮。不管买多少，邮费固定660日元。有满XXX免邮活动，但我基本达不到。<br>＊不调价，万年原价，爱买不买。<br>＊但是店特通常质量颇高，还有专门的リリイベ応募券。</p><h3 id="Gamers"><a href="#Gamers" class="headerlink" title="Gamers"></a>Gamers</h3><p>G店。被A店收购后各方面都约等于A店。唯店特不一样。ラブライブ！応援店也是一大特色。</p><p>＊同上。</p><h3 id="Tower-Records"><a href="#Tower-Records" class="headerlink" title="Tower Records"></a>Tower Records</h3><p>塔店。音乐为主。商品也是原价卖，但是每月固定搞一次15%返元活动，如果预约商品各家价格都一样的时候，选择塔店会相对划算（当然也要考虑店特）。</p><h3 id="SonyMusicShop"><a href="#SonyMusicShop" class="headerlink" title="SonyMusicShop"></a>SonyMusicShop</h3><p>索尼官店。接了Cloudflare的防护，竟然封机房ip。<del>不过不封转运公司地址有什么用啊笑。</del>当年收集桃的旧CD的时候发现SonyMusicShop不少旧CD的店特竟然还在，感激不已。</p><h3 id="hmv"><a href="#hmv" class="headerlink" title="hmv"></a>hmv</h3><p><code>招行</code> <code>浦发</code> <code>工行</code> <code>中行</code>的<code>JCB</code>皆无法绑卡，传言说是因为该站盗刷严重，被银行拉黑了。但该站<strong>支持绑定 <code>Paypal</code>。</strong>（仍有部分商品只接受信用卡付款）</p><h3 id="とらのあな"><a href="#とらのあな" class="headerlink" title="とらのあな"></a><code>とらのあな</code></h3><p>とらのあな通信販売。跟官网是两个网站。<br>同<code>hmv</code>，无法绑卡。但有一个神奇的支付渠道叫<code>とらコイン</code>，这个渠道又不限制卡了。</p><h3 id="Aniplex-co-jp"><a href="#Aniplex-co-jp" class="headerlink" title="Aniplex.co.jp"></a>Aniplex.co.jp</h3><h3 id="Sofmap"><a href="#Sofmap" class="headerlink" title="Sofmap"></a>Sofmap</h3><h3 id="新星堂"><a href="#新星堂" class="headerlink" title="新星堂"></a>新星堂</h3><h3 id="movic"><a href="#movic" class="headerlink" title="movic"></a>movic</h3><h3 id="東映オンラインショップ"><a href="#東映オンラインショップ" class="headerlink" title="東映オンラインショップ"></a>東映オンラインショップ</h3><p>买了套BD，竟然有人工审核，说我是海外用户给我拒了，恨。系统自动风控就算了，上人工审核实在是有点不尊重。</p><h3 id="集英社HAPPY-PLUS-STORE"><a href="#集英社HAPPY-PLUS-STORE" class="headerlink" title="集英社HAPPY PLUS STORE"></a>集英社HAPPY PLUS STORE</h3><p>同东映，人工审核订单，发了封邮件说我是海外用户，不肯发货。但是又说使用TENSO地址可发，照做了，无事。以后学乖了，比较敏感的订单使用TENSO地址。</p><h3 id="TSUTAYA"><a href="#TSUTAYA" class="headerlink" title="TSUTAYA"></a>TSUTAYA</h3><p>需绑日本雅虎。日本雅虎需绑日本手机号。<del>所以没有日本手机号用jb</del></p><h3 id="711-Online"><a href="#711-Online" class="headerlink" title="711 Online"></a>711 Online</h3><p>竟然只能店舗受取　草。</p><h3 id="メルカリ"><a href="#メルカリ" class="headerlink" title="メルカリ"></a>メルカリ</h3><p>煤炉。日本二手平台。</p><p>＊<del>没有日本手机号用jb</del><br>＊有了日本手机号也用jb。太君一看地址，好奇的都会询问一句，怎么回答？<br>＊所以不如找代购。<br>＊但有的太君看到代购会顾虑，不肯发货，憾…</p><h3 id="ミュージックレインモール"><a href="#ミュージックレインモール" class="headerlink" title="ミュージックレインモール"></a>ミュージックレインモール</h3><p>桃相关。</p><h3 id="Bushiroad-Online-Store"><a href="#Bushiroad-Online-Store" class="headerlink" title="Bushiroad Online Store"></a>Bushiroad Online Store</h3><p>MyGO!!!!!相关。</p><h3 id="ヤフオク"><a href="#ヤフオク" class="headerlink" title="ヤフオク"></a>ヤフオク</h3><p>雅虎拍卖。一要绑日本雅虎，二不收国外信用卡（<code>visa debit</code>也不行）。</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语法拾贝 (JavaScript)</title>
      <link href="/Javascript_Grammer.html"/>
      <url>/Javascript_Grammer.html</url>
      
        <content type="html"><![CDATA[<h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h3 id="1-解构与改名"><a href="#1-解构与改名" class="headerlink" title="1. 解构与改名"></a>1. 解构与改名</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="attr">a</span>: a1 &#125; = obj;</span><br></pre></td></tr></table></figure><h3 id="2-数组去重"><a href="#2-数组去重" class="headerlink" title="2. 数组去重"></a>2. 数组去重</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> c = [...<span class="keyword">new</span> <span class="title class_">Set</span>([...a, ...b])];</span><br></pre></td></tr></table></figure><h3 id="3-数组扁平化"><a href="#3-数组扁平化" class="headerlink" title="3. 数组扁平化"></a>3. 数组扁平化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">flat</span>(<span class="title class_">Infinity</span>);</span><br></pre></td></tr></table></figure><h3 id="4-or"><a href="#4-or" class="headerlink" title="4. ?? or ||"></a>4. ?? or ||</h3><p><code>??</code> 仅在左侧为 <code>null</code>, <code>undefined</code> 时跳到右侧<br><code>||</code> 为 <code>0</code>, <code>&#39;&#39;</code>, <code>NaN</code>, <code>null</code>, <code>undefined</code>（这五个称为假值）</p><p>* <code>[]</code> <code>&#123;&#125;</code> 的值为 <code>true</code></p><p>* <code>??</code> 推荐和 <code>?.</code> 共用</p><h2 id="typescript"><a href="#typescript" class="headerlink" title="typescript"></a>typescript</h2><p><strong>一、操作符</strong></p><h3 id="1-void"><a href="#1-void" class="headerlink" title="1. void"></a>1. void</h3><p>作为函数返回值类型，表示不关注返回值类型，可以是任意值</p><h3 id="2-非空断言"><a href="#2-非空断言" class="headerlink" title="2. 非空断言 !"></a>2. 非空断言 !</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 表达式后缀</span></span><br><span class="line">obj!.<span class="property">a</span>;</span><br><span class="line">func!();</span><br></pre></td></tr></table></figure><p><strong>使用场景：ref</strong></p><h3 id="3-键值获取-keyof"><a href="#3-键值获取-keyof" class="headerlink" title="3. 键值获取 keyof"></a>3. 键值获取 keyof</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">type <span class="title class_">Person</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: string;</span><br><span class="line">  <span class="attr">age</span>: number;</span><br><span class="line">&#125;</span><br><span class="line">type <span class="title class_">PersonKey</span> = keyof <span class="title class_">Person</span>;  <span class="comment">// &#x27;name&#x27; | &#x27;age&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>使用场景：遍历一个对象的所有 key 时（拿不到类型时可以用 keyof typeof）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="title class_">Object</span>.<span class="title function_">keys</span>(params) <span class="keyword">as</span> (keyof feedbackParams)[]).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">  formData.<span class="title function_">append</span>(key, params[key]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="4-联合类型-｜-交叉类型"><a href="#4-联合类型-｜-交叉类型" class="headerlink" title="4. 联合类型 ｜ 交叉类型 &amp;"></a>4. 联合类型 ｜ 交叉类型 &amp;</h3><p><strong>不是数学上的交集并集！</strong></p><p>&amp; 交叉类型：产生的新集合包含原各集合的所有属性（语义上的“且”）<br>| 联合类型：产生的新集合是一个 <code>select</code>，可以是 A，也可以是 B，但不能同时拥有 A 和 B （语义上的“或”）</p><p><strong>使用场景：继承</strong></p><p><strong>二、泛型工具</strong></p><h3 id="Partial"><a href="#Partial" class="headerlink" title="Partial"></a>Partial<T></h3><p>将泛型中全部属性变为可选的。</p><h3 id="Required"><a href="#Required" class="headerlink" title="Required"></a>Required<T></h3><p>将泛型中全部属性变为必选的。</p><h3 id="Record"><a href="#Record" class="headerlink" title="Record&lt;K, T&gt;"></a>Record&lt;K, T&gt;</h3><p>常用于定义对象。 <code>Record&lt;string, unknown&gt;</code></p><h3 id="Pick"><a href="#Pick" class="headerlink" title="Pick&lt;T, K&gt;"></a>Pick&lt;T, K&gt;</h3><p>取键值对。<br><code>Pick&lt;Animal, &quot;name&quot; | &quot;age&quot;&gt;</code></p><h3 id="Omit"><a href="#Omit" class="headerlink" title="Omit&lt;T, K&gt;"></a>Omit&lt;T, K&gt;</h3><p>去键值对。<br><code>Omit&lt;Animal, &#39;name&#39;|&#39;age&#39;&gt;</code></p><p><strong>三、Work with React</strong></p><h3 id="1-声明函数式组件"><a href="#1-声明函数式组件" class="headerlink" title="1. 声明函数式组件"></a>1. 声明函数式组件</h3><p>这种方式会在 props 里显式声明 children</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">App</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">AppProps</span>&gt; = <span class="function">(<span class="params">&#123; message, children &#125;</span>) =&gt;</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;message&#125;</span></span><br><span class="line"><span class="language-xml">    &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="2-使用-typeof-减少冗余的-props-类型导出"><a href="#2-使用-typeof-减少冗余的-props-类型导出" class="headerlink" title="2. 使用 typeof 减少冗余的 props 类型导出"></a>2. 使用 typeof 减少冗余的 props 类型导出</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Recent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@mercury/component&#x27;</span></span><br><span class="line">type <span class="title class_">RecentProps</span> = <span class="title class_">React</span>.<span class="property">ComponentProps</span>&lt;<span class="keyword">typeof</span> <span class="title class_">Recent</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="3-React-事件类型定义"><a href="#3-React-事件类型定义" class="headerlink" title="3. React 事件类型定义"></a>3. React 事件类型定义</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">type <span class="title class_">Props</span> = &#123;</span><br><span class="line">  <span class="attr">onClick</span>: <span class="function">(<span class="params">event: React.MouseEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onChange</span>: <span class="function">(<span class="params">event: React.ChangeEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onkeypress</span>: <span class="function">(<span class="params">event: React.KeyboardEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onBlur</span>: <span class="function">(<span class="params">event: React.FocusEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onFocus</span>: <span class="function">(<span class="params">event: React.FocusEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onSubmit</span>: <span class="function">(<span class="params">event: React.FormEvent&lt;HTMLFormElement&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  <span class="attr">onClickDiv</span>: <span class="function">(<span class="params">event: React.MouseEvent&lt;HTMLDivElement, MouseEvent&gt;</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的 handler 类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type <span class="title class_">ChangeEventHandler</span>&lt;T = <span class="title class_">Element</span>&gt; = <span class="title class_">EventHandler</span>&lt;<span class="title class_">React</span>.<span class="property">ChangeEvent</span>&lt;T&gt;&gt;</span><br><span class="line">type <span class="title class_">KeyboardEventHandler</span>&lt;T = <span class="title class_">Element</span>&gt; = <span class="title class_">EventHandler</span>&lt;<span class="title class_">React</span>.<span class="property">KeyboardEvent</span>&lt;T&gt;&gt;</span><br><span class="line">type <span class="title class_">MouseEventHandler</span>&lt;T = <span class="title class_">Element</span>&gt; = <span class="title class_">EventHandler</span>&lt;<span class="title class_">React</span>.<span class="property">MouseEvent</span>&lt;T&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="4-类型断言-类型守卫"><a href="#4-类型断言-类型守卫" class="headerlink" title="4. 类型断言&#x2F;类型守卫"></a>4. 类型断言&#x2F;类型守卫</h3><ol><li>类型断言</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">值 as 类型</span><br><span class="line">&lt;类型&gt;值</span><br></pre></td></tr></table></figure><ul><li>联合类型→单一类型</li><li>父类→子类</li><li>any→类型</li></ul><ol start="2"><li>类型守卫：通过 if 自动推断类型。</li></ol><ul><li>类型判断：<code>typeof 基本类型</code></li><li>实例判断：<code>instanceof 类（非接口）</code></li><li>属性判断：<code>字段 in 接口（所实现的实例）</code> <code>in</code> 其实是 js 自带语法，应用在实例上</li><li>字面量相等判断：<code>==</code>, <code>===</code>, <code>!=</code>, <code>!==</code>，适用于枚举</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">input1</span>: string | number;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> input1 == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">  <span class="comment">// 这里 input1 的类型「收紧」为 string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">input2</span>: A | B;</span><br><span class="line"><span class="keyword">if</span> (input2 <span class="keyword">instanceof</span> A) &#123;</span><br><span class="line">  <span class="comment">// 这里 input2 的类型「收紧」为 A</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface <span class="title class_">Foo</span> &#123;</span><br><span class="line">  <span class="attr">foo</span>: string;</span><br><span class="line">&#125;</span><br><span class="line">interface <span class="title class_">Bar</span> &#123;</span><br><span class="line">  <span class="attr">bar</span>: string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">input3</span>: <span class="title class_">Foo</span> | <span class="title class_">Bar</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;foo&#x27;</span> <span class="keyword">in</span> input3) &#123;</span><br><span class="line">  <span class="comment">// 这里 input3 的类型「收紧」为 Foo</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义类型守卫函数：代码随便写，返回值保证是<code>参数 is 类型</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isBatman</span> (<span class="attr">man</span>: any): man is <span class="title class_">Batman</span> &#123;</span><br><span class="line">  <span class="comment">// 写各种判断</span></span><br><span class="line">  <span class="keyword">return</span> man &amp;&amp; man.<span class="property">helmet</span> &amp;&amp; man.<span class="property">cloak</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-useEffect的時機"><a href="#5-useEffect的時機" class="headerlink" title="5. useEffect的時機"></a>5. useEffect的時機</h3><p>每次组件渲染后都执行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;&#125;);</span><br></pre></td></tr></table></figure><p>只会在组件首次渲染后执行一次：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;&#125;, []);</span><br></pre></td></tr></table></figure><h3 id="6-我就是不想單獨聲明類型！"><a href="#6-我就是不想單獨聲明類型！" class="headerlink" title="6. 我就是不想單獨聲明類型！"></a>6. 我就是不想單獨聲明類型！</h3><p>看例子：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">BasicInfo</span> = &#123;</span><br><span class="line">  <span class="attr">accountMembers</span>: <span class="title class_">Array</span>&lt;&#123;</span><br><span class="line">    <span class="attr">micComId</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">companyNameCn</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">establishYears</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">capitalAmount</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">mainCategory</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">mainCategoryYearAvgInvest</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">portraitUrl</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">smtCaseUrl</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">advancedMember</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  &#125;&gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這是一個數組</span></span><br><span class="line"><span class="keyword">type</span> accountMembers = <span class="title class_">BasicInfo</span>[<span class="string">&quot;accountMembers&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 從數組裡抽出類型</span></span><br><span class="line"><span class="keyword">type</span> accountMember = <span class="title class_">BasicInfo</span>[<span class="string">&quot;accountMembers&quot;</span>][<span class="built_in">number</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取函数的第一个参数的类型</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UpdateArchiveDataType</span> = <span class="title class_">Parameters</span>&lt;<span class="keyword">typeof</span> updateArchive&gt;[<span class="number">0</span>];</span><br></pre></td></tr></table></figure><h2 id="Trick"><a href="#Trick" class="headerlink" title="Trick"></a>Trick</h2><h3 id="if-条件太长时"><a href="#if-条件太长时" class="headerlink" title="if 条件太长时"></a>if 条件太长时</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(</span><br><span class="line">    type == <span class="number">1</span> ||</span><br><span class="line">    type == <span class="number">2</span> ||</span><br><span class="line">    type == <span class="number">3</span> ||</span><br><span class="line">    type == <span class="number">4</span> ||</span><br><span class="line">)&#123;</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>↓</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> condition = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">if</span> (condition.<span class="title function_">includes</span>(type)) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="升降-CSS-优先级"><a href="#升降-CSS-优先级" class="headerlink" title="升降 CSS 优先级"></a>升降 CSS 优先级</h3><p>内联 &gt; ID &gt; 类&#x2F;伪类&#x2F;属性 &gt; 元素&#x2F;伪元素</p><ul><li>（升优先级）自我重复，提高选择器的优先级：<code>.&#123;className&#125;.&#123;className&#125;</code></li><li>（降优先级）属性选择器 <code>[id=&#39;&#123;targetId&#125;&#39;]</code> 替代 <code>#&#123;targetId&#125;</code> 以获得与 <code>.&#123;className&#125;</code> 相同的优先级</li><li>优先级是权重相加制，更具体的选择器拥有更高的优先级</li></ul><h3 id="import-type-がウザい！"><a href="#import-type-がウザい！" class="headerlink" title="import type がウザい！"></a>import type がウザい！</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; type <span class="title class_">RecentProps</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@mercury/component&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="表單提交數組-對象數組"><a href="#表單提交數組-對象數組" class="headerlink" title="表單提交數組&#x2F;對象數組"></a>表單提交數組&#x2F;對象數組</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">  <span class="attr">clusterId</span>: currentCluster.<span class="property">clusterId</span>,</span><br><span class="line">  <span class="attr">instanceIdList</span>: [currentInstance.<span class="property">instanceId</span>],</span><br><span class="line">  <span class="attr">mavenInfoList</span>: [currentPlugin],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> urlSearchParams = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>();</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(params).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// instanceIdList 和 mavenInfoList 都是数组，表单提交时需要特殊处理</span></span><br><span class="line">  <span class="keyword">if</span> (key === <span class="string">&quot;mavenInfoList&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 对象数组</span></span><br><span class="line">    params[key].<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="title function_">keys</span>(item).<span class="title function_">forEach</span>(<span class="function">(<span class="params">itemKey</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (item[itemKey] === <span class="literal">null</span>) &#123;</span><br><span class="line">          item[itemKey] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        urlSearchParams.<span class="title function_">append</span>(<span class="string">`<span class="subst">$&#123;key&#125;</span>[<span class="subst">$&#123;index&#125;</span>].<span class="subst">$&#123;itemKey&#125;</span>`</span>, item[itemKey]);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key === <span class="string">&quot;instanceIdList&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 纯数组</span></span><br><span class="line">    params[key].<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      urlSearchParams.<span class="title function_">append</span>(<span class="string">`<span class="subst">$&#123;key&#125;</span>[<span class="subst">$&#123;index&#125;</span>]`</span>, item);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    urlSearchParams.<span class="title function_">append</span>(key, params[key]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="巧用對象來去重"><a href="#巧用對象來去重" class="headerlink" title="巧用對象來去重"></a>巧用對象來去重</h3><ol><li>對象數組，根據某字段來去重</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> newNodes = [];</span><br><span class="line"><span class="comment">// 将 newNodes 根据各项的customId去重</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;&#125;;</span><br><span class="line">newNodes.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">  obj[item.<span class="property">customId</span>] = item;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> newNodes2 = [];</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(obj).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">  newNodes2.<span class="title function_">push</span>(obj[key]);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 得到 newNodes2 已去重</span></span><br></pre></td></tr></table></figure><ol start="2"><li>對象數組，獲取某字段的枚舉</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> clusterTypeEnum = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> allCluster = [];</span><br><span class="line">allCluster.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">  clusterTypeEnum[item.<span class="property">parKey</span>] = &#123; <span class="attr">text</span>: item.<span class="property">parKey</span> &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以得到形如這種的枚舉</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;user-service&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;text&quot;</span>: <span class="string">&quot;user-service&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;api-service&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;text&quot;</span>: <span class="string">&quot;api-service&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;route&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;text&quot;</span>: <span class="string">&quot;route&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复制到剪贴板"><a href="#复制到剪贴板" class="headerlink" title="复制到剪贴板"></a>复制到剪贴板</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">copyToClipboard</span> = <span class="keyword">async</span> (<span class="params">text</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (navigator.<span class="property">clipboard</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">isSecureContext</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> navigator.<span class="property">clipboard</span>.<span class="title function_">writeText</span>(text);</span><br><span class="line">      message.<span class="title function_">success</span>(<span class="string">&quot;复制成功&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> textarea = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;textarea&quot;</span>);</span><br><span class="line">      textarea.<span class="property">value</span> = text;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(textarea);</span><br><span class="line">      textarea.<span class="title function_">select</span>();</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&quot;copy&quot;</span>);</span><br><span class="line">      message.<span class="title function_">success</span>(<span class="string">&quot;复制成功&quot;</span>);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(textarea);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    message.<span class="title function_">error</span>(<span class="string">&quot;复制失败&quot;</span>, err);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>使用axios</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">axios.<span class="title function_">get</span>(<span class="string">&quot;XXX&quot;</span>, &#123; <span class="attr">responseType</span>: <span class="string">&quot;blob&quot;</span> &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([res.<span class="property">data</span>]);</span><br><span class="line">  <span class="keyword">const</span> downloadADom = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">  downloadADom.<span class="property">href</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">  downloadADom.<span class="property">download</span> = fileName;</span><br><span class="line">  downloadADom.<span class="property">target</span> = <span class="string">&quot;_blank&quot;</span>;</span><br><span class="line">  downloadADom.<span class="title function_">click</span>();</span><br><span class="line">  <span class="variable constant_">URL</span>.<span class="title function_">revokeObjectURL</span>(downloadADom.<span class="property">href</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="上傳"><a href="#上傳" class="headerlink" title="上傳"></a>上傳</h3><h3 id="URL操作"><a href="#URL操作" class="headerlink" title="URL操作"></a>URL操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">addParamToUrl</span>(<span class="params">url, paramName, paramValue</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> myUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(url);</span><br><span class="line">  myUrl.<span class="property">searchParams</span>.<span class="title function_">set</span>(paramName, paramValue);</span><br><span class="line">  <span class="keyword">return</span> myUrl.<span class="property">href</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 示例使用</span></span><br><span class="line"><span class="keyword">const</span> productUrl = <span class="string">&quot;http://example.com/product&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> newUrl = <span class="title function_">addParamToUrl</span>(productUrl, <span class="string">&quot;tradeFrom&quot;</span>, <span class="string">&quot;3_1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newUrl);</span><br></pre></td></tr></table></figure><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p>慎用 –hard！</p><h3 id="回溯到某次提交"><a href="#回溯到某次提交" class="headerlink" title="回溯到某次提交"></a>回溯到某次提交</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset XXX</span><br></pre></td></tr></table></figure><h3 id="撤回上一次提交"><a href="#撤回上一次提交" class="headerlink" title="撤回上一次提交"></a>撤回上一次提交</h3><p>已经提交到远程了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert HEAD</span><br></pre></td></tr></table></figure><p>还没提交到远程，只是本地暂存了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset XXX # XXX 为最近一次提交，不要用 --hard</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Grammer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂学</title>
      <link href="/%E6%9D%82%E5%AD%A6.html"/>
      <url>/%E6%9D%82%E5%AD%A6.html</url>
      
        <content type="html"><![CDATA[<h2 id="Videos"><a href="#Videos" class="headerlink" title="Videos"></a>Videos</h2><h3 id="yt-dlp"><a href="#yt-dlp" class="headerlink" title="yt-dlp"></a>yt-dlp</h3><ul><li>从文件读取 <code>-a</code></li><li>获取所有可用轨道 <code>-F</code></li><li>选中轨道 <code>-f</code></li><li><code>--cookies cookies.txt</code> <code>--cookies-from-browser edge</code></li><li><strong>abema.tv</strong>: 不使用cookie，直接带用户名和密码 <code>yt-dlp &#39;https://abema.tv/video/episode/xxx&#39; --username &#39;xxx&#39; --password &#39;xxx&#39;</code> 如果报错就清空 <code>/.cache/yt-dlp</code></li><li><code>--playlist-items 1-5</code> <code>--playlist-items 1,3,5</code></li></ul><h3 id="实战：bili-tv"><a href="#实战：bili-tv" class="headerlink" title="实战：bili.tv"></a>实战：bili.tv</h3><ol><li>泰国 vpn，比如 urban vpn</li><li></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp --cookies cookies.txt --add-header <span class="string">&quot;Referer: https://www.bilibili.tv/&quot;</span> target_url</span><br></pre></td></tr></table></figure><h3 id="minyami"><a href="#minyami" class="headerlink" title="minyami"></a>minyami</h3><ol><li>带 cookies</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minyami --headers <span class="string">&quot;Referer: https://www.bilibili.tv/&quot;</span> -H <span class="string">&quot;Cookie:cookies_text&quot;</span> -d <span class="string">&quot;xxx.m3u8&quot;</span> --output <span class="string">&quot;xxx.ts&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><del>设置代理</del><br><del>不要使用环境变量，直接开启代理软件的 TUN 模式（增强模式）</del></li></ol><h3 id="handbrake-压缩常用配置"><a href="#handbrake-压缩常用配置" class="headerlink" title="handbrake 压缩常用配置"></a>handbrake 压缩常用配置</h3><p>Mac mini M2</p><ul><li>mkv</li><li>h265</li><li>RF: 18</li><li>帧率：与原视频相同 恒定帧率（cfr）</li><li>预设：medium</li><li>音频比特率：passthru&#x2F;256</li><li>VideoToolbox：Mac上可硬件加速，但质量一般。</li></ul><h3 id="ffmpeg"><a href="#ffmpeg" class="headerlink" title="ffmpeg"></a>ffmpeg</h3><ol><li>無損切割</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i XXX.mp4  -ss 00:00:00 -to 00:00:00 -c copy output.mp4</span><br></pre></td></tr></table></figure><ol start="2"><li><p>無損拼接</p><p><code>filelist.txt</code></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file <span class="string">&#x27;01.mp4&#x27;</span></span><br><span class="line">file <span class="string">&#x27;02.mp4&#x27;</span></span><br><span class="line">file <span class="string">&#x27;03.mp4&#x27;</span></span><br><span class="line">file <span class="string">&#x27;04.mp4&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -f concat -safe 0 -i filelist.txt -c copy output.mp4</span><br></pre></td></tr></table></figure><ol start="3"><li><p>抽軌<br><code>MKVToolNix</code><br>＊抽音軌</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i &lt;input&gt; -vn -c:a copy output_audio.opus</span><br></pre></td></tr></table></figure><p>＊抽字幕</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i &lt;input&gt; -map 0:2 output_simplified_chinese.ass</span><br></pre></td></tr></table></figure><p>＊抽圖片</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i &lt;input&gt; output%d.png</span><br></pre></td></tr></table></figure></li><li><p>合轨</p><p><code>MKVToolNix</code></p><p>or</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i video.m2v -i audio.adv -c:v copy -c:a copy output.mkv</span><br></pre></td></tr></table></figure><ol start="5"><li>调轴（音画不同步）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i your_video.mp4 -itsoffset delay -i your_video.mp4 -map 0:v -map 1:a -c copy output.mp4</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;<code>delay</code> 是延迟时间（以秒为单位）<code>1.5</code> <code>-1.5</code></p><h3 id="实战：mygo-MV"><a href="#实战：mygo-MV" class="headerlink" title="实战：mygo MV"></a>实战：mygo MV</h3><p>webm to m4a lossless</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.webm -vn -c:a alac output.m4a</span><br></pre></td></tr></table></figure><h3 id="实战：audee-jp"><a href="#实战：audee-jp" class="headerlink" title="实战：audee.jp"></a>实战：audee.jp</h3><ol><li><p>猫抓嗅探 m3u8 → 解析，获取 KEY(hex)</p></li><li></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minyami -d <span class="string">&#x27;XXX.m3u8&#x27;</span> --key <span class="string">&#x27;234d073d2091593011e02546e8888888&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="实战：蓮"><a href="#实战：蓮" class="headerlink" title="实战：蓮"></a>实战：蓮</h3><ol><li><p>抓包，获取 usm 文件。iOS 用 stream，macOS 用 Surge。<br>＊<a href="https://surge.mitsea.com/http-processing/mitm">Surge 抓包教程</a><br>＊简要步骤：安装根证书 → 勾选 <code>tcp-connection</code> <code>skip-server-cert-verify</code> → 开启流量捕获 + mitm 解密 → 指定解密的流量 <code>*.icloud.com</code></p></li><li><p>vgmtoolbox_bin_r1040</p></li><li><p>選擇 Msic. Tool &gt; Stream Tools &gt; Video Demultiplexer，將格式選擇為USM，並把檔案拉進去，等待結果</p></li><li><p>adx 音频格式要转码</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.adx -c:a flac output.flac</span><br></pre></td></tr></table></figure><ol start="5"><li>合轨至 mkv</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i v.m2v -i a.flac -c:v copy -c:a copy out.mkv</span><br></pre></td></tr></table></figure><h3 id="实战：stagecrowd"><a href="#实战：stagecrowd" class="headerlink" title="实战：stagecrowd"></a>实战：stagecrowd</h3><ol><li><p>提取CDM</p><p>＊Root 的 Android 11 以下的手機<br>＊安裝frida<br>＊dumper →　<code>.bin</code> <code>.pem</code> → <code>.wvd</code></p></li><li><p>寻找 <code>PSSH</code> <code>Licence url</code>，构造请求，获取<code>KEY</code></p></li><li><p>使用<code>N_m3u8DL-RE</code> + <code>shaka-packager</code>解密（此步未经验证）</p><p>示例命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./N_m3u8DL-RE -M format=mp4 <span class="string">&quot;https://cdn.bitmovin.com/content/assets/art-of-motion_drm/mpds/11331.mpd&quot;</span> --key <span class="string">&quot;key1&quot;</span> --key <span class="string">&quot;key2&quot;</span>  --use-shaka-packager -sv best -sa best</span><br></pre></td></tr></table></figure></li></ol><h3 id="实战：eplus"><a href="#实战：eplus" class="headerlink" title="实战：eplus"></a>实战：eplus</h3><ol><li><p><code>PSSH</code>，在mpd文件中。</p></li><li><p><code>licence url</code>，控制台里面看到的不对，在网上搜寻到正确的url。需要准备<code>X-Dt-Auth-Token</code>和<code>Dt-Custom-Data</code>字段。实测<code>Dt-Custom-Data</code>可以直接从线上扒。</p></li><li><p>得到<code>key</code>。</p></li><li></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N_m3u8DL-RE -M format=mp4 <span class="string">&quot;XXX.mpd&quot;</span> -H <span class="string">&quot;Cookie:XXX&quot;</span> --key XXX --use-shaka-packager --save-name eplus.mp4 -sv best -sa best</span><br></pre></td></tr></table></figure><h3 id="实战：radiko"><a href="#实战：radiko" class="headerlink" title="实战：radiko"></a>实战：radiko</h3><p>m3u8 确实不全，只能拼时间。→ <code>yt-dlp</code><br>注意 Geo Restrict</p><h3 id="实战：lemino直播"><a href="#实战：lemino直播" class="headerlink" title="实战：lemino直播"></a>实战：lemino直播</h3><p>如果你手头已经有加密的视频和key，只希望在本地解，怎么办？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mp4decrypt --show-progress --key AAA:BBB input.m4a output.m4a</span><br></pre></td></tr></table></figure><h3 id="实战：asobi-channel"><a href="#实战：asobi-channel" class="headerlink" title="实战：asobi channel"></a>实战：asobi channel</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp -f worst <span class="string">&#x27;https://asobichannel.asobistore.jp/watch/8eedhfu6ff&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="实战：mygo-BD"><a href="#实战：mygo-BD" class="headerlink" title="实战：mygo BD"></a>实战：mygo BD</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mkv -map 0:a:0 -c:a alac output.m4a</span><br></pre></td></tr></table></figure><p>後ChatGPTに聞く</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">我现在有这样一个视频：</span><br><span class="line">ffmpeg -i output.m4a</span><br><span class="line">Input #0, mov,mp4,m4a,3gp,3g2,mj2, from &#x27;output.m4a&#x27;:</span><br><span class="line">  Metadata:</span><br><span class="line">    major_brand     : M4A</span><br><span class="line">    minor_version   : 512</span><br><span class="line">    compatible_brands: M4A isomiso2</span><br><span class="line">    title           : MyGO!!!!! 6th Single「聿日箋秋」【Blu-ray付生産限定盤】DISC1</span><br><span class="line">    encoder         : Lavf61.7.100</span><br><span class="line">  Duration: 01:38:33.91, start: 0.000000, bitrate: 1766 kb/s</span><br><span class="line">  Chapters:</span><br><span class="line">    Chapter #0:0: start 0.000000, end 78.620000</span><br><span class="line">      Metadata:</span><br><span class="line">        title           : Chapter 01</span><br><span class="line">  Stream #0:0[0x1](jpn): Audio: alac (alac / 0x63616C61), 48000 Hz, stereo, s32p (24 bit), 1766 kb/s (default)</span><br><span class="line">      Metadata:</span><br><span class="line">        handler_name    : SoundHandler</span><br><span class="line">        vendor_id       : [0][0][0][0]</span><br><span class="line">  Stream #0:1[0x2](eng): Data: bin_data (text / 0x74786574)</span><br><span class="line">      Metadata:</span><br><span class="line">        handler_name    : SubtitleHandler</span><br><span class="line">At least one output file must be specified</span><br><span class="line"></span><br><span class="line">请你按照每个章节切片，帮我生成所有的切片命令。比如：ffmpeg -i /Users/zongliang/output.m4a -c copy -ss 0.000000 -to 78.620000 1.m4a</span><br></pre></td></tr></table></figure><h3 id="实战：bilibili"><a href="#实战：bilibili" class="headerlink" title="实战：bilibili"></a>实战：bilibili</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install aria2</span><br><span class="line">--downloader aria2c</span><br></pre></td></tr></table></figure><h3 id="实战：niconico生放送（タイムシフト）"><a href="#实战：niconico生放送（タイムシフト）" class="headerlink" title="实战：niconico生放送（タイムシフト）"></a>实战：niconico生放送（タイムシフト）</h3><p>直接<code>yt-dlp</code>使うとエラー出てる。<br><code>minyami</code>だと遅い。<br>結局<br><code>N_m3u8DL-RE</code></p><h3 id="burn-blu-ray"><a href="#burn-blu-ray" class="headerlink" title="burn blu-ray"></a>burn blu-ray</h3><h3 id="实战：aria下载onedrive"><a href="#实战：aria下载onedrive" class="headerlink" title="实战：aria下载onedrive"></a>实战：aria下载onedrive</h3><ol><li>Network 提取真实下载链接（根据size判断）</li><li>复制为cURL，用脚本转换为aria2c命令。</li></ol><h3 id="MakeMKV"><a href="#MakeMKV" class="headerlink" title="MakeMKV"></a>MakeMKV</h3><ol><li>Download latest KEYDB: <a href="http://fvonline-db.bplaced.net/">http://fvonline-db.bplaced.net/</a></li><li>&#x2F;Users&#x2F;<username>&#x2F;Library&#x2F;MakeMKV</li></ol><h2 id="Comics"><a href="#Comics" class="headerlink" title="Comics"></a>Comics</h2><h3 id="epub-to-zip"><a href="#epub-to-zip" class="headerlink" title="epub to zip"></a>epub to zip</h3><ol><li>epub → docx (Calibre)</li><li>打开，随便删除一个文字</li><li>重命名为 zip，解压找到 media 文件夹</li></ol><h2 id="Start-with-Mac-mini-M2"><a href="#Start-with-Mac-mini-M2" class="headerlink" title="Start with Mac mini M2"></a>Start with Mac mini M2</h2><h3 id="dock-在全屏时不自动隐藏"><a href="#dock-在全屏时不自动隐藏" class="headerlink" title="dock 在全屏时不自动隐藏"></a>dock 在全屏时不自动隐藏</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock autohide-delay -int 0</span><br><span class="line">defaults write com.apple.dock autohide-time-modifier -<span class="built_in">float</span> 1.0</span><br><span class="line">killall Dock</span><br></pre></td></tr></table></figure><h3 id="连接蓝牙耳机卡顿"><a href="#连接蓝牙耳机卡顿" class="headerlink" title="连接蓝牙耳机卡顿"></a>连接蓝牙耳机卡顿</h3><ol><li>耳机断联</li><li><code>sudo defaults write bluetoothaudiod &quot;Enable AAC codec&quot; -bool true</code></li><li>设置→声音→输入，取消选中耳机</li></ol><h3 id="睡眠时异常唤醒硬盘"><a href="#睡眠时异常唤醒硬盘" class="headerlink" title="睡眠时异常唤醒硬盘"></a>睡眠时异常唤醒硬盘</h3><ol><li>查询电源设置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pmset -g</span><br></pre></td></tr></table></figure><ol start="2"><li>修改某个选项</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pmset -a tcpkeepalive 0</span><br><span class="line">sudo pmset -a powernap 0 <span class="comment"># Apple 芯片的 Mac 上，此值默认为 1</span></span><br></pre></td></tr></table></figure><ol start="3"><li>It should be like this:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">System-wide power settings:</span><br><span class="line">Currently <span class="keyword">in</span> use:</span><br><span class="line">  disksleep            10</span><br><span class="line">  powernap             0</span><br><span class="line">  womp                 1</span><br><span class="line">  networkoversleep     0</span><br><span class="line">  <span class="built_in">sleep</span>                1 (<span class="built_in">sleep</span> prevented by powerd, mds_stores)</span><br><span class="line">  Sleep On Power Button 1</span><br><span class="line">  ttyskeepawake        1</span><br><span class="line">  tcpkeepalive         0</span><br><span class="line">  autorestart          0</span><br><span class="line">  standby              0</span><br><span class="line">  displaysleep         10</span><br></pre></td></tr></table></figure><h3 id="Kill-Microsoft-AutoUpdate"><a href="#Kill-Microsoft-AutoUpdate" class="headerlink" title="Kill Microsoft AutoUpdate"></a>Kill Microsoft AutoUpdate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Application Support/Microsoft/</span><br></pre></td></tr></table></figure><h3 id="蘋果死活不做的內建功能"><a href="#蘋果死活不做的內建功能" class="headerlink" title="蘋果死活不做的內建功能"></a>蘋果死活不做的內建功能</h3><ul><li>Mos</li><li>BetterDisplay</li><li>Spectangle</li><li>AppCleaner</li></ul><h3 id="重建索引"><a href="#重建索引" class="headerlink" title="重建索引"></a>重建索引</h3><ol><li>关闭索引</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mdutil -a -i off</span><br></pre></td></tr></table></figure><ol start="2"><li>重建索引</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mdutil -a -E</span><br></pre></td></tr></table></figure><ol start="3"><li>打开索引</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mdutil -a -i on</span><br></pre></td></tr></table></figure><p>检视活动监视器以查看索引状态。</p><h3 id="關閉-sonoma-的-TextIndicator"><a href="#關閉-sonoma-的-TextIndicator" class="headerlink" title="關閉 sonoma 的 TextIndicator"></a>關閉 sonoma 的 TextIndicator</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write kCFPreferencesAnyApplication TSMLanguageIndicatorEnabled 0</span><br></pre></td></tr></table></figure><h3 id="iOS更新文件下载位置"><a href="#iOS更新文件下载位置" class="headerlink" title="iOS更新文件下载位置"></a>iOS更新文件下载位置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/Library/iTunes/</span><br></pre></td></tr></table></figure><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><h3 id="1-hosts"><a href="#1-hosts" class="headerlink" title="1. hosts"></a>1. hosts</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/hosts</span><br></pre></td></tr></table></figure><p>vs codeも使える</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code /etc/hosts</span><br></pre></td></tr></table></figure><h3 id="2-https服务器"><a href="#2-https服务器" class="headerlink" title="2. https服务器"></a>2. https服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew install mkcert</span><br><span class="line">mkcert -install</span><br><span class="line"><span class="built_in">mkdir</span> ~/cert</span><br><span class="line"><span class="built_in">cd</span> cert</span><br><span class="line">mkcert localhost 127.0.0.1 192.168.11.2</span><br><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% http-server -c-1 . --ssl --key ~/cert/localhost+2-key.pem --cert ~/cert/localhost+2.pem --port 443 --cors</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pseudo-tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>献上自己</title>
      <link href="/Bible.html"/>
      <url>/Bible.html</url>
      
        <content type="html"><![CDATA[<h3 id="罗马书-12-1-2-新译本"><a href="#罗马书-12-1-2-新译本" class="headerlink" title="罗马书 12:1-2 新译本"></a>罗马书 12:1-2 新译本</h3><p><sup>1 </sup>所以弟兄们，我凭着神的仁慈劝你们，要把身体献上，作圣洁而蒙神悦纳的活祭；这是你们理所当然的事奉。</p><p><sup>2 </sup>不要模仿这个世代，倒要借着心意的更新而改变过来，使你们可以察验出甚么是神的旨意，就是察验出甚么是美好的、蒙他悦纳的和完全的事。</p><h3 id="诗篇-16-7-11"><a href="#诗篇-16-7-11" class="headerlink" title="诗篇 16:7-11"></a>诗篇 16:7-11</h3><p><sup>7 </sup>我必称颂那指教我的耶和华；<br>我的心肠在夜间也警戒我。<br><sup>8 </sup>我将耶和华常摆在我面前，<br>因他在我右边，我便不致摇动。</p><p><sup>9 </sup>因此，我的心欢喜，我的灵快乐；<br>我的肉身也要安然居住。<br><sup>10 </sup>因为你必不将我的灵魂撇在阴间，<br>也不叫你的圣者见朽坏。</p><p><sup>11 </sup>你必将生命的道路指示我。<br>在你面前有满足的喜乐；<br>在你右手中有永远的福乐。</p><h3 id="民数记-6-24-26-新标点和合本-上帝版"><a href="#民数记-6-24-26-新标点和合本-上帝版" class="headerlink" title="民数记 6:24-26 新标点和合本, 上帝版"></a>民数记 6:24-26 新标点和合本, 上帝版</h3><p><sup>24 </sup>『愿耶和华赐福给你，保护你。 <sup>25 </sup>愿耶和华使他的脸光照你，赐恩给你。 <sup>26 </sup>愿耶和华向你仰脸，赐你平安。』</p><h3 id="约翰一书-4-18-和合本修订版"><a href="#约翰一书-4-18-和合本修订版" class="headerlink" title="约翰一书 4:18 和合本修订版"></a>约翰一书 4:18 和合本修订版</h3><p><sup>18 </sup>在爱里没有惧怕；完满的爱把惧怕驱逐出去，因为惧怕里含着惩罚，惧怕的人在爱里尚未得到完满。</p><h3 id="诗篇-119-1-2-和合本修订版"><a href="#诗篇-119-1-2-和合本修订版" class="headerlink" title="诗篇 119:1-2 和合本修订版"></a>诗篇 119:1-2 和合本修订版</h3><p><sup>1 </sup>行为正直、遵行耶和华律法的，<br>这人有福了！<br><sup>2 </sup>遵守他的法度、一心寻求他的，<br>这人有福了！</p><h3 id="诗篇-130-5-8"><a href="#诗篇-130-5-8" class="headerlink" title="诗篇 130:5-8"></a>诗篇 130:5-8</h3><p><sup>5 </sup>我等候耶和华，我的心等候；<br>我也仰望他的话。<br><sup>6 </sup>我的心等候主，<br>胜于守夜的，等候天亮，<br>胜于守夜的，等候天亮。</p><p><sup>7 </sup>以色列啊，你当仰望耶和华！<br>因他有慈爱，有丰盛的救恩。<br><sup>8 </sup>他必救赎以色列脱离一切的罪孽。</p><h3 id="罗马书-11-17-23"><a href="#罗马书-11-17-23" class="headerlink" title="罗马书 11:17-23"></a>罗马书 11:17-23</h3><p><sup>17 </sup>若有几根枝子被折下来，你这野橄榄得接在其中，一同得着橄榄根的肥汁， <sup>18 </sup>你就不可向旧枝子夸口；若是夸口，当知道不是你托着根，乃是根托着你。 <sup>19 </sup>你若说，那枝子被折下来是特为叫我接上。 <sup>20 </sup>不错！他们因为不信，所以被折下来；你因为信，所以立得住；你不可自高，反要惧怕。 <sup>21 </sup>神既不爱惜原来的枝子，也必不爱惜你。 <sup>22 </sup>可见，神的恩慈和严厉向那跌倒的人是严厉的，向你是有恩慈的，只要你长久在他的恩慈里；不然，你也要被砍下来。</p><h3 id="约翰福音-15-1-17"><a href="#约翰福音-15-1-17" class="headerlink" title="约翰福音 15:1-17"></a>约翰福音 15:1-17</h3><p><sup>1 </sup>「我是真葡萄树，我父是栽培的人。 <sup>2 </sup>凡属我不结果子的枝子，他就剪去；凡结果子的，他就修理干净，使枝子结果子更多。 <sup>3 </sup>现在你们因我讲给你们的道，已经干净了。 <sup>4 </sup>你们要常在我里面，我也常在你们里面。枝子若不常在葡萄树上，自己就不能结果子；你们若不常在我里面，也是这样。 <sup>5 </sup>我是葡萄树，你们是枝子。常在我里面的，我也常在他里面，这人就多结果子；因为离了我，你们就不能做什么。 <sup>6 </sup>人若不常在我里面，就像枝子丢在外面枯干，人拾起来，扔在火里烧了。 <sup>7 </sup>你们若常在我里面，我的话也常在你们里面，凡你们所愿意的，祈求，就给你们成就。 <sup>8 </sup>你们多结果子，我父就因此得荣耀，你们也就是我的门徒了。 <sup>9 </sup>我爱你们，正如父爱我一样；你们要常在我的爱里。 <sup>10 </sup>你们若遵守我的命令，就常在我的爱里，正如我遵守了我父的命令，常在他的爱里。</p><p><sup>11 </sup>「这些事我已经对你们说了，是要叫我的喜乐存在你们心里，并叫你们的喜乐可以满足。 <sup>12 </sup>你们要彼此相爱，像我爱你们一样；这就是我的命令。 <sup>13 </sup>人为朋友舍命，人的爱心没有比这个大的。 <sup>14 </sup>你们若遵行我所吩咐的，就是我的朋友了。 <sup>15 </sup>以后我不再称你们为仆人，因仆人不知道主人所做的事。我乃称你们为朋友；因我从我父所听见的，已经都告诉你们了。 <sup>16 </sup><strong>不是你们拣选了我，是我拣选了你们，并且分派你们去结果子，叫你们的果子常存，使你们奉我的名，无论向父求什么，他就赐给你们。</strong><sup>17 </sup>我这样吩咐你们，是要叫你们彼此相爱。」</p><h3 id="彼得前书-3-15"><a href="#彼得前书-3-15" class="headerlink" title="彼得前书 3:15"></a>彼得前书 3:15</h3><p><sup>15 </sup>只要心里尊主基督为圣。有人问你们心中盼望的缘由，就要常作准备，以温柔、敬畏的心回答各人；</p><h3 id="以賽亞書-41-10"><a href="#以賽亞書-41-10" class="headerlink" title="以賽亞書 41:10"></a>以賽亞書 41:10</h3><p><sup>10 </sup>你不要害怕，因為我與你同在；<br>不要驚惶，因為我是你的神。<br>我必堅固你，我必幫助你；<br>我必用我公義的右手扶持你。</p><h3 id="哥多林前书-13-4-7-13"><a href="#哥多林前书-13-4-7-13" class="headerlink" title="哥多林前书 13:4-7,13"></a>哥多林前书 13:4-7,13</h3><p><sup>4 </sup>爱是恒久忍耐，又有恩慈；爱是不嫉妒；爱是不自夸，不张狂，<sup>5 </sup>不做害羞的事，不求自己的益处，不轻易发怒，不计算人的恶， <sup>6 </sup>不喜欢不义，只喜欢真理； <sup>7 </sup>凡事包容，凡事相信，凡事盼望，凡事忍耐。</p><p><sup>13 </sup>如今常存的有信，有望，有爱这三样，其中最大的是爱。</p><h3 id="以賽亞書-40-3-8-和合本修订版"><a href="#以賽亞書-40-3-8-和合本修订版" class="headerlink" title="以賽亞書 40:3-8 和合本修订版"></a>以賽亞書 40:3-8 和合本修订版</h3><p><sup>3 </sup>有声音呼喊着：<br>“要在旷野为耶和华预备道路，<br>在沙漠为我们的上帝修直大道。<br><sup>4 </sup>一切山洼都要填满，<br>大小山冈都要削平；<br>陡峭的要变为平坦，<br>崎岖的必成为平原。<br><sup>5 </sup>耶和华的荣耀必然显现，<br>凡有血肉之躯的都一同看见，<br>因为这是耶和华亲口说的。”</p><p><sup>6 </sup>有声音说：“你喊叫吧！”<br>我说：“我喊叫什么呢？”<br>凡有血肉之躯的尽都如草，<br>他的一切荣美像野地的花。<br><sup>7 </sup>耶和华吹一口气，<br>草就枯干，花也凋谢。<br>百姓诚然是草；<br><sup>8 </sup>草必枯干，花必凋谢，<br>惟有我们上帝的话永远立定。</p><h3 id="约翰一书-4-7-21-和合本修订版"><a href="#约翰一书-4-7-21-和合本修订版" class="headerlink" title="约翰一书 4:7-21 和合本修订版"></a>约翰一书 4:7-21 和合本修订版</h3><p><strong>神就是愛</strong></p><p><sup>7 </sup>亲爱的弟兄啊，我们应当彼此相爱，因为爱是从神来的。凡有爱心的，都是由神而生，并且认识神。 <sup>8 </sup>没有爱心的，就不认识神，因为神就是爱。 <sup>9 </sup>神差他独生子到世间来，使我们藉着他得生，神爱我们的心在此就显明了。 <sup>10 </sup>不是我们爱神，乃是神爱我们，差他的儿子为我们的罪作了挽回祭，这就是爱了。 <sup>11 </sup>亲爱的弟兄啊，神既是这样爱我们，我们也当彼此相爱。 <sup>12 </sup><strong>从来没有人见过神，我们若彼此相爱，神就住在我们里面，爱他的心在我们里面得以完全了。</strong></p><p><sup>13 </sup><strong>神将他的灵赐给我们，从此就知道我们是住在他里面，他也住在我们里面。</strong> <sup>14 </sup>父差子作世人的救主；这是我们所看见且作见证的。 <sup>15 </sup>凡认耶稣为神儿子的，神就住在他里面，他也住在神里面。 <sup>16 </sup>神爱我们的心，我们也知道也信。</p><p>神就是爱；住在爱里面的，就是住在神里面，神也住在他里面。 <sup>17 </sup>这样，爱在我们里面得以完全，我们就可以在审判的日子坦然无惧。因为他如何，我们在这世上也如何。 <sup>18 </sup><strong>爱里没有惧怕；爱既完全，就把惧怕除去。因为惧怕里含着刑罚，惧怕的人在爱里未得完全。</strong> <sup>19 </sup>我们爱，因为神先爱我们。 <sup>20 </sup>人若说「我爱神」，却恨他的弟兄，就是说谎话的；不爱他所看见的弟兄，就不能爱没有看见的神。 <sup>21 </sup>爱神的，也当爱弟兄，这是我们从神所受的命令。</p><h3 id="歷代志上-16-8-11"><a href="#歷代志上-16-8-11" class="headerlink" title="歷代志上 16:8-11"></a>歷代志上 16:8-11</h3><p><sup>8 </sup>你们要称谢耶和华，求告他的名，<br>在万民中传扬他的作为！<br><sup>9 </sup>要向他唱诗、歌颂，<br>谈论他一切奇妙的作为。<br><sup>10 </sup>要以他的圣名夸耀；<br>寻求耶和华的人，心中应当欢喜。<br><sup>11 </sup>要寻求耶和华与他的能力，<br>时常寻求他的面。</p><h3 id="路加福音-2-8-21"><a href="#路加福音-2-8-21" class="headerlink" title="路加福音 2:8-21"></a>路加福音 2:8-21</h3><p><strong>天使报喜讯给牧羊的人</strong></p><p><sup>8 </sup>在伯利恒之野地里有牧羊的人，夜间按着更次看守羊群。 <sup>9 </sup>有主的使者站在他们旁边，主的荣光四面照着他们；牧羊的人就甚惧怕。 <sup>10 </sup>那天使对他们说：「不要惧怕！我报给你们大喜的信息，是关乎万民的； <sup>11 </sup>因今天在大卫的城里，为你们生了救主，就是主基督。 <sup>12 </sup>你们要看见一个婴孩，包着布，卧在马槽里，那就是记号了。」 <sup>13 </sup>忽然，有一大队天兵同那天使赞美神说：</p><p><sup>14 </sup>在至高之处荣耀归与神！<br>在地上平安归与他所喜悦的人！</p><p><sup>15 </sup>众天使离开他们，升天去了。牧羊的人彼此说：「我们往伯利恒去，看看所成的事，就是主所指示我们的。」 <sup>16 </sup>他们急忙去了，就寻见马利亚和约瑟，又有那婴孩卧在马槽里； <sup>17 </sup>既然看见，就把天使论这孩子的话传开了。 <sup>18 </sup>凡听见的，就诧异牧羊之人对他们所说的话。 <sup>19 </sup>马利亚却把这一切的事存在心里，反复思想。 <sup>20 </sup>牧羊的人回去了，因所听见所看见的一切事，正如天使向他们所说的，就归荣耀与神，赞美他。<br><sup>21 </sup>满了八天，就给孩子行割礼，与他起名叫耶稣；这就是没有成胎以前，天使所起的名。</p><h3 id="馬太福音-1-18-25"><a href="#馬太福音-1-18-25" class="headerlink" title="馬太福音 1:18-25"></a>馬太福音 1:18-25</h3><p><strong>耶稣基督降生</strong><br><em>（路2‧1－7）</em><br><sup>18 </sup>耶稣基督降生的事记在下面：他母亲马利亚已经许配了约瑟，还没有迎娶，马利亚就从圣灵怀了孕。 <sup>19 </sup>她丈夫约瑟是个义人，不愿意明明地羞辱她，想要暗暗地把她休了。 <sup>20 </sup>正思念这事的时候，有主的使者向他梦中显现，说：「大卫的子孙约瑟，不要怕！只管娶过你的妻子马利亚来，因她所怀的孕是从圣灵来的。 <sup>21 </sup>她将要生一个儿子，你要给他起名叫耶稣，因他要将自己的百姓从罪恶里救出来。」 <sup>22 </sup>这一切的事成就是要应验主藉先知所说的话， <sup>23 </sup>说：</p><p>必有童女怀孕生子；<br>人要称他的名为以马内利。</p><p>（以马内利翻出来就是「神与我们同在」。） <sup>24 </sup>约瑟醒了，起来，就遵着主使者的吩咐把妻子娶过来； <sup>25 </sup>只是没有和她同房，等她生了儿子，就给他起名叫耶稣。</p><h3 id="傳道書-3-11"><a href="#傳道書-3-11" class="headerlink" title="傳道書 3:11"></a>傳道書 3:11</h3><p><strong>萬事皆有定時</strong></p><p><sup>11 </sup>神造万物，各按其时成为美好，又将永生安置在世人心里。然而　神从始至终的作为，人不能参透。</p><h3 id="创世纪-1"><a href="#创世纪-1" class="headerlink" title="创世纪 1"></a>创世纪 1</h3><p><strong>神的创造</strong></p><p><sup>1 </sup>起初，神创造天地。 <sup>2 </sup>地是空虚混沌，渊面黑暗；神的灵运行在水面上。<br><sup>3 </sup>神说：「要有光」，就有了光。 <sup>4 </sup>神看光是好的，就把光暗分开了。 <sup>5 </sup>神称光为「昼」，称暗为「夜」。有晚上，有早晨，这是头一日。<br><sup>6 </sup>神说：「诸水之间要有空气，将水分为上下。」 <sup>7 </sup>神就造出空气，将空气以下的水、空气以上的水分开了。事就这样成了。 <sup>8 </sup>神称空气为「天」。有晚上，有早晨，是第二日。<br><sup>9 </sup>神说：「天下的水要聚在一处，使旱地露出来。」事就这样成了。 <sup>10 </sup>神称旱地为「地」，称水的聚处为「海」。神看着是好的。 <sup>11 </sup>神说：「地要发生青草和结种子的菜蔬，并结果子的树木，各从其类，果子都包着核。」事就这样成了。 <sup>12 </sup>于是地发生了青草和结种子的菜蔬，各从其类；并结果子的树木，各从其类；果子都包着核。神看着是好的。 <sup>13 </sup>有晚上，有早晨，是第三日。<br><sup>14 </sup>神说：「天上要有光体，可以分昼夜，作记号，定节令、日子、年岁， <sup>15 </sup>并要发光在天空，普照在地上。」事就这样成了。 <sup>16 </sup>于是神造了两个大光，大的管昼，小的管夜，又造众星， <sup>17 </sup>就把这些光摆列在天空，普照在地上， <sup>18 </sup>管理昼夜，分别明暗。神看着是好的。 <sup>19 </sup>有晚上，有早晨，是第四日。<br><sup>20 </sup>神说：「水要多多滋生有生命的物；要有雀鸟飞在地面以上，天空之中。」 <sup>21 </sup>神就造出大鱼和水中所滋生各样有生命的动物，各从其类；又造出各样飞鸟，各从其类。神看着是好的。 <sup>22 </sup>神就赐福给这一切，说：「滋生繁多，充满海中的水；雀鸟也要多生在地上。」 <sup>23 </sup>有晚上，有早晨，是第五日。<br><sup>24 </sup>神说：「地要生出活物来，各从其类；牲畜、昆虫、野兽，各从其类。」事就这样成了。 <sup>25 </sup>于是　神造出野兽，各从其类；牲畜，各从其类；地上一切昆虫，各从其类。神看着是好的。<br><sup>26 </sup>神说：「我们要照着我们的形象、按着我们的样式造人，使他们管理海里的鱼、空中的鸟、地上的牲畜，和全地，并地上所爬的一切昆虫。」 <sup>27 </sup>神就照着自己的形象造人，乃是照着他的形象造男造女。 <sup>28 </sup>神就赐福给他们，又对他们说：「要生养众多，遍满地面，治理这地，也要管理海里的鱼、空中的鸟，和地上各样行动的活物。」 <sup>29 </sup>神说：「看哪，我将遍地上一切结种子的菜蔬和一切树上所结有核的果子全赐给你们作食物。 <sup>30 </sup>至于地上的走兽和空中的飞鸟，并各样爬在地上有生命的物，我将青草赐给它们作食物。」事就这样成了。<sup>31 </sup>神看着一切所造的都甚好。有晚上，有早晨，是第六日。</p><h3 id="创世纪-2-1-3"><a href="#创世纪-2-1-3" class="headerlink" title="创世纪 2:1-3"></a>创世纪 2:1-3</h3><p><sup>1 </sup>天地万物都造齐了。 <sup>2 </sup>到第七日，神造物的工已经完毕，就在第七日歇了他一切的工，安息了。 <sup>3 </sup>神赐福给第七日，定为圣日；因为在这日，神歇了他一切创造的工，就安息了。</p><h3 id="雅各书-1-19-27"><a href="#雅各书-1-19-27" class="headerlink" title="雅各书 1:19-27"></a>雅各书 1:19-27</h3><p><strong>听道和行道</strong></p><p><sup>19 </sup>我亲爱的弟兄们，这是你们所知道的。<strong>但你们各人要快快地听，慢慢地说，慢慢地动怒， <sup>20 </sup>因为人的怒气并不成就神的义。</strong> <sup>21 </sup>所以，你们要脱去一切的污秽和盈余的邪恶，存温柔的心领受那所栽种的道，就是能救你们灵魂的道。<br><sup>22 </sup>只是你们要行道，不要单单听道，自己欺哄自己。 <sup>23 </sup>因为听道而不行道的，就像人对着镜子看自己本来的面目， <sup>24 </sup>看见，走后，随即忘了他的相貌如何。 <sup>25 </sup>惟有详细察看那全备、使人自由之律法的，并且时常如此，这人既不是听了就忘，乃是实在行出来，就在他所行的事上必然得福。<br><sup>26 </sup>若有人自以为虔诚，却不勒住他的舌头，反欺哄自己的心，这人的虔诚是虚的。 <sup>27 </sup>在神我们的父面前，那清洁没有玷污的虔诚，就是看顾在患难中的孤儿寡妇，并且保守自己不沾染世俗。</p><h3 id="诗篇-119-11"><a href="#诗篇-119-11" class="headerlink" title="诗篇 119:11"></a>诗篇 119:11</h3><p><sup>11 </sup>我将你的话藏在心里，<br>免得我得罪你。</p><h3 id="耶利米书-29-12-13"><a href="#耶利米书-29-12-13" class="headerlink" title="耶利米书 29:12-13"></a>耶利米书 29:12-13</h3><p><sup>12 </sup>你们要呼求我，祷告我，我就应允你们。 <sup>13 </sup>你们寻求我，若专心寻求我，就必寻见。</p><h3 id="马太福音-6-9-13"><a href="#马太福音-6-9-13" class="headerlink" title="马太福音 6:9-13"></a>马太福音 6:9-13</h3><p><sup>9 </sup>所以，你们祷告要这样说：<br>我们在天上的父：<br>愿人都尊你的名为圣。<br><sup>10 </sup>愿你的国降临；<br>愿你的旨意行在地上，<br>如同行在天上。<br><sup>11 </sup>我们日用的饮食，今日赐给我们。<br><sup>12 </sup>免我们的债，<br>如同我们免了人的债。<br><sup>13 </sup>不叫我们遇见试探；<br>救我们脱离凶恶。<br>因为国度、权柄、荣耀，全是你的，<br>直到永远。阿们！</p><h3 id="加拉太书-2-20"><a href="#加拉太书-2-20" class="headerlink" title="加拉太书 2:20"></a>加拉太书 2:20</h3><p><sup>20 </sup>我已经与基督同钉十字架，现在活着的不再是我，乃是基督在我里面活着；并且我如今在肉身活着，是因信神的儿子而活；他是爱我，为我舍己。</p><h3 id="约翰福音-3-16"><a href="#约翰福音-3-16" class="headerlink" title="约翰福音 3:16"></a>约翰福音 3:16</h3><p><strong>（神爱世人）</strong></p><p><sup>16 </sup>「　神爱世人，甚至将他的独生子赐给他们，叫一切信他的，不致灭亡，反得永生。</p><h3 id="诗篇-56-3"><a href="#诗篇-56-3" class="headerlink" title="诗篇 56:3"></a>诗篇 56:3</h3><p><sup>3 </sup>我惧怕的时候要倚靠你。</p><h3 id="彼得前書-5-7"><a href="#彼得前書-5-7" class="headerlink" title="彼得前書 5:7"></a>彼得前書 5:7</h3><p><sup>5 </sup>神阻擋驕傲的人，賜恩給謙卑的人。<br><sup>6 </sup>所以，你們要自卑，服在神大能的手下，到了時候，他必叫你們升高。你們要將一切的憂慮卸給神，因為他顧念你們。</p><h3 id="约翰福音-3-21"><a href="#约翰福音-3-21" class="headerlink" title="约翰福音 3:21"></a>约翰福音 3:21</h3><p><sup>21 </sup>但行真理的必来就光，要显明他所行的是靠神而行。</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bible </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
